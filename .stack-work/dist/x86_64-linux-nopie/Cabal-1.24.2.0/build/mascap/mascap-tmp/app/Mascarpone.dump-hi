
==================== FINAL INTERFACE ====================
2017-08-01 11:53:09.593393977 UTC

interface main@main:Mascarpone 8002
  interface hash: f46319300bb05092ef94181f405531fd
  ABI hash: f676c8425d040840265970841657e134
  export-list hash: 3f0f8a810f536ddcbf15f5b82e0c9b44
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 65748ac5a3dff63306110c433e0d7a9d
  sig of: Nothing
  used TH splices: False
  where
exports:
  Mascarpone.create
  Mascarpone.deepquote
  Mascarpone.defCodepage
  Mascarpone.defaultInterpreter
  Mascarpone.deify
  Mascarpone.dup
  Mascarpone.expand
  Mascarpone.extract
  Mascarpone.getParent
  Mascarpone.initialState
  Mascarpone.install
  Mascarpone.interpret
  Mascarpone.interpretWith
  Mascarpone.nop
  Mascarpone.nullInterpreter
  Mascarpone.nulli
  Mascarpone.outp
  Mascarpone.peek
  Mascarpone.perform
  Mascarpone.pop
  Mascarpone.pop'
  Mascarpone.pop2
  Mascarpone.pop3
  Mascarpone.pop4
  Mascarpone.popString
  Mascarpone.push
  Mascarpone.quotesym
  Mascarpone.readInp
  Mascarpone.reify
  Mascarpone.run
  Mascarpone.setParent
  Mascarpone.swap
  Mascarpone.uniform
  Mascarpone.Effect
  Mascarpone.Interpreter{Mascarpone.Interpreter codepage fallback parent}
  Mascarpone.ProgState{Mascarpone.State interpreter stack}
  Mascarpone.StackElem{Mascarpone.Intr Mascarpone.Op Mascarpone.Symb}
  Mascarpone.Symbol{Mascarpone.Chr Mascarpone.Num}
module dependencies:
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0*
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1 mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      transformers-0.5.2.0@transformers-0.5.2.0
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:Control.Monad.IO.Class 1a4384f66ee999caf5366398edb6ca7b
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.Functor 5ab1dc703df5b482e77efb697833ca3c
import  -/  base-4.9.1.0:Data.Maybe d876c4ffe4b3c43755a781e8ad860d88
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.IO e4a64a8e3dce8616da54f0ee7104f7db
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map 20d4ffbee41965d03d6a989425473dc4
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base d432f6875983131473086af8cb290590
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6:Control.Monad.State 749dca8ca0e6625b32091d445bd92b01
import  -/  mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6:Control.Monad.State.Class 6d31234b0a911b56412061943d18b89e
import  -/  transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.State.Lazy 371607e50dde46b5f4103b3ab334a497
086464ff72e3a9c935ff156588f779c7
  $fEqSymbol :: GHC.Classes.Eq Mascarpone.Symbol
  DFunId
086464ff72e3a9c935ff156588f779c7
  $fOrdSymbol :: GHC.Classes.Ord Mascarpone.Symbol
  DFunId
57c0f7d7f2f107b13d2cc92ab21a82f3
  $tc'Chr :: GHC.Types.TyCon
d1a4c77417154394dea41878081e98d8
  $tc'Interpreter :: GHC.Types.TyCon
efdac3612c30f89a05751cc54d3c026c
  $tc'Intr :: GHC.Types.TyCon
04d3a6653ed5e8d6dd4d3060ec59f707
  $tc'Num :: GHC.Types.TyCon
d6e29acffbe70638077cf2b2efa6eea6
  $tc'Op :: GHC.Types.TyCon
1953f450a28d0c54749fed3cc339926a
  $tc'State :: GHC.Types.TyCon
6f7931b0bf0a01159aa774be2ab940fa
  $tc'Symb :: GHC.Types.TyCon
f1348f95f79a73e32d70534b27c53956
  $tcInterpreter :: GHC.Types.TyCon
28e84490784733beccfeedf2416f9bad
  $tcProgState :: GHC.Types.TyCon
82c9d457ae03675153da7c59e4800b03
  $tcStackElem :: GHC.Types.TyCon
1e28be9a45c3407098a33415a669c5a6
  $tcSymbol :: GHC.Types.TyCon
b5ceaedd1b785d2ff5254da1b008bd96
  $trModule :: GHC.Types.Module
18798391c85a24eba1c4aa89a9e5d7c2
  type Effect =
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
18798391c85a24eba1c4aa89a9e5d7c2
  data Interpreter
    = Interpreter {codepage :: Data.Map.Base.Map
                                 Mascarpone.Symbol Mascarpone.Effect,
                   parent :: Mascarpone.Interpreter,
                   fallback :: Mascarpone.Symbol -> Mascarpone.Effect}
    RecFlag: Recursive
18798391c85a24eba1c4aa89a9e5d7c2
  data ProgState
    = State {interpreter :: Mascarpone.Interpreter,
             stack :: [Mascarpone.StackElem]}
    RecFlag: Recursive
18798391c85a24eba1c4aa89a9e5d7c2
  data StackElem
    = Symb Mascarpone.Symbol
    | Op Mascarpone.Effect
    | Intr Mascarpone.Interpreter
086464ff72e3a9c935ff156588f779c7
  data Symbol = Chr GHC.Types.Char | Num GHC.Types.Double
e2562fcf45af420854d2e948aed7dc8b
  codepage ::
    Mascarpone.Interpreter
    -> Data.Map.Base.Map Mascarpone.Symbol Mascarpone.Effect
  RecSel Left Mascarpone.Interpreter
c0f021b8b519dc082491bb3ec84c5a98
  create ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
89d041fe6cd30d73da1103e5a52b3f84
  deepquote ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
b9dfc24c0d904b3acfc091f04c73545f
  defCodepage ::
    Data.Map.Base.Map
      Mascarpone.Symbol
      (Control.Monad.Trans.State.Lazy.StateT
         Mascarpone.ProgState GHC.Types.IO ())
96380f6979b661cc12e63eaf75e1de48
  defaultInterpreter :: Mascarpone.Interpreter
10a096470c089ef16afb7c4adaf5fc40
  deify ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
69d712591d30768be33b8a150ad8baed
  dup ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
1e1b4a43477fd2f0ba3ba2e834bc71af
  expand :: a
af114b85c5979a40eac3b521ba4aff3f
  extract ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
e8f63aa73e1fbbf0bfb90c09855bf2ec
  fallback ::
    Mascarpone.Interpreter -> Mascarpone.Symbol -> Mascarpone.Effect
  RecSel Left Mascarpone.Interpreter
e5235ea5c9ebad7e430f6952d9857964
  getParent ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
af505df76d49038975a600e1382aef0e
  initialState :: Mascarpone.ProgState
2afa6391cc7d7d6d16f3fb6680ce0f7b
  install ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
9073e422e6d361d516012e0766c4eb8a
  interpret :: GHC.Base.String -> Mascarpone.Effect
d84f3bf7336c9ad66012cc8b0aee84f5
  interpretWith ::
    Mascarpone.Interpreter -> GHC.Base.String -> Mascarpone.Effect
5835daeb9d1e42916d4a268f45616377
  interpreter :: Mascarpone.ProgState -> Mascarpone.Interpreter
  RecSel Left Mascarpone.ProgState
89a6232fd8e88697767b0407c2430420
  nop ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
5870748257b8ed778ca8e6bb403e6268
  nullInterpreter :: Mascarpone.Interpreter
ac58e7f35ffe73536f7207f9886b8b0d
  nulli :: Mascarpone.Effect
47e525dbf5da6d7d581fc37c5e1208e9
  outp ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
73fe8e343fe216e0114ffd9302794f5e
  parent :: Mascarpone.Interpreter -> Mascarpone.Interpreter
  RecSel Left Mascarpone.Interpreter
2d0a0ff720cd675d684ec763d27f90a6
  peek ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO Mascarpone.StackElem
db41e257529959a3e65b0f0be98d9034
  perform ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
5b94b0cbf0074286d12ee475d4d9e402
  pop ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO Mascarpone.StackElem
cc6fb9030464b2d5f769b29f0ad294a2
  pop' ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
ae54b28fa7a6e8da02df099c7d0e953f
  pop2 ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState
      GHC.Types.IO
      (Mascarpone.StackElem, Mascarpone.StackElem)
b369fb0b4c498bf580f9ccc999c0a80b
  pop3 ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState
      GHC.Types.IO
      (Mascarpone.StackElem, Mascarpone.StackElem, Mascarpone.StackElem)
96547ff566c71d20aaf5365486eb1a2a
  pop4 ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState
      GHC.Types.IO
      (Mascarpone.StackElem, Mascarpone.StackElem, Mascarpone.StackElem,
       Mascarpone.StackElem)
238ec2d13b455e16135f54b32356d5fe
  popString ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO GHC.Base.String
31ba28abdd106243705c225364c9d463
  push :: Mascarpone.StackElem -> Mascarpone.Effect
1bb8a4c143a18b149e6a2eaa59e16781
  quotesym ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
370949283f9f7104888226fba4c7a287
  readInp ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
4bae6e17b269cb45e3c01bca696987c1
  reify ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
d7d0103eaa8c782739b0b4814e07e255
  run :: GHC.Base.String -> GHC.Types.IO ()
72c1dbe04dd0a84b74dd38111d5068f0
  setParent ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
83e0568f2d418dd7b24f772c3403d9a6
  stack :: Mascarpone.ProgState -> [Mascarpone.StackElem]
  RecSel Left Mascarpone.ProgState
157bc8d1d88be80a4bb13fdf78ca5f24
  swap ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
9934b3bb31ce3106b20891b92272ff10
  uniform ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
instance [safe] GHC.Classes.Eq [Mascarpone.Symbol]
  = Mascarpone.$fEqSymbol
instance [safe] GHC.Classes.Ord [Mascarpone.Symbol]
  = Mascarpone.$fOrdSymbol
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

