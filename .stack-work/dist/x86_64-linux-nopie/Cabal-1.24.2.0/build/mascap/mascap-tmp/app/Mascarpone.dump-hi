
==================== FINAL INTERFACE ====================
2017-08-01 08:46:53.92000864 UTC

interface main@main:Mascarpone 8002
  interface hash: daa933316605488aead7185b8aacb893
  ABI hash: 12332a6b57e947a6fddca66db73e5df7
  export-list hash: 7f4521f742074dfc3753d7ff2069f807
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 65748ac5a3dff63306110c433e0d7a9d
  sig of: Nothing
  used TH splices: False
  where
exports:
  Mascarpone.create
  Mascarpone.deepquote
  Mascarpone.defCodepage
  Mascarpone.defaultInterpreter
  Mascarpone.deify
  Mascarpone.dup
  Mascarpone.expand
  Mascarpone.extract
  Mascarpone.getParent
  Mascarpone.initialState
  Mascarpone.install
  Mascarpone.interpret
  Mascarpone.interpretWith
  Mascarpone.nop
  Mascarpone.nullInterpreter
  Mascarpone.nulli
  Mascarpone.outp
  Mascarpone.peek
  Mascarpone.perform
  Mascarpone.pop
  Mascarpone.pop'
  Mascarpone.pop2
  Mascarpone.pop3
  Mascarpone.popString
  Mascarpone.push
  Mascarpone.quotesym
  Mascarpone.readInp
  Mascarpone.reify
  Mascarpone.run
  Mascarpone.setParent
  Mascarpone.swap
  Mascarpone.uniform
  Mascarpone.Effect
  Mascarpone.Interpreter{Mascarpone.Interpreter codepage fallback parent}
  Mascarpone.ProgState{Mascarpone.State interpreter stack}
  Mascarpone.StackElem{Mascarpone.Intr Mascarpone.Op Mascarpone.Symb}
  Mascarpone.Symbol{Mascarpone.Chr Mascarpone.Num}
module dependencies:
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0*
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1 mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      transformers-0.5.2.0@transformers-0.5.2.0
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:Control.Monad.IO.Class 1a4384f66ee999caf5366398edb6ca7b
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.Functor 5ab1dc703df5b482e77efb697833ca3c
import  -/  base-4.9.1.0:Data.Maybe d876c4ffe4b3c43755a781e8ad860d88
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.IO e4a64a8e3dce8616da54f0ee7104f7db
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map 20d4ffbee41965d03d6a989425473dc4
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base d432f6875983131473086af8cb290590
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6:Control.Monad.State 749dca8ca0e6625b32091d445bd92b01
import  -/  mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6:Control.Monad.State.Class 6d31234b0a911b56412061943d18b89e
import  -/  transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.State.Lazy 371607e50dde46b5f4103b3ab334a497
fe45fbcb4d2b14d81ffd5640b671d338
  $fEqSymbol :: GHC.Classes.Eq Mascarpone.Symbol
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Mascarpone.Symbol
                  Mascarpone.$fEqSymbol_$c==
                  Mascarpone.$fEqSymbol_$c/= -}
fe45fbcb4d2b14d81ffd5640b671d338
  $fEqSymbol_$c/= ::
    Mascarpone.Symbol -> Mascarpone.Symbol -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Mascarpone.Symbol) (b :: Mascarpone.Symbol) ->
                 case a of wild {
                   Mascarpone.Chr a1
                   -> case b of wild1 {
                        Mascarpone.Chr b1
                        -> case a1 of wild2 { GHC.Types.C# x3 ->
                           case b1 of wild3 { GHC.Types.C# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.eqChar# x3 y) of wild4 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False } } }
                        Mascarpone.Num ipv -> GHC.Types.True }
                   Mascarpone.Num a1
                   -> case b of wild1 {
                        Mascarpone.Chr ipv -> GHC.Types.True
                        Mascarpone.Num b1
                        -> case a1 of wild2 { GHC.Types.D# x3 ->
                           case b1 of wild3 { GHC.Types.D# y ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.==## x3 y) of wild4 {
                             GHC.Types.False -> GHC.Types.True
                             GHC.Types.True -> GHC.Types.False } } } } }) -}
fe45fbcb4d2b14d81ffd5640b671d338
  $fEqSymbol_$c== ::
    Mascarpone.Symbol -> Mascarpone.Symbol -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (ds :: Mascarpone.Symbol)
                   (ds1 :: Mascarpone.Symbol) ->
                 case ds of wild {
                   Mascarpone.Chr a1
                   -> case ds1 of wild1 {
                        Mascarpone.Chr b1 -> GHC.Classes.eqChar a1 b1
                        Mascarpone.Num ipv -> GHC.Types.False }
                   Mascarpone.Num a1
                   -> case ds1 of wild1 {
                        Mascarpone.Chr ipv -> GHC.Types.False
                        Mascarpone.Num b1 -> GHC.Classes.eqDouble a1 b1 } }) -}
fe45fbcb4d2b14d81ffd5640b671d338
  $fOrdSymbol :: GHC.Classes.Ord Mascarpone.Symbol
  DFunId
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Mascarpone.Symbol
                  Mascarpone.$fEqSymbol
                  Mascarpone.$fOrdSymbol_$ccompare
                  Mascarpone.$fOrdSymbol_$c<
                  Mascarpone.$fOrdSymbol_$c<=
                  Mascarpone.$fOrdSymbol_$c>
                  Mascarpone.$fOrdSymbol_$c>=
                  Mascarpone.$fOrdSymbol_$cmax
                  Mascarpone.$fOrdSymbol_$cmin -}
fe45fbcb4d2b14d81ffd5640b671d338
  $fOrdSymbol_$c< ::
    Mascarpone.Symbol -> Mascarpone.Symbol -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Mascarpone.Symbol) (b :: Mascarpone.Symbol) ->
                 case a of wild {
                   Mascarpone.Chr a1
                   -> case b of wild1 {
                        Mascarpone.Chr b1 -> GHC.Classes.$fOrdChar_$c< a1 b1
                        Mascarpone.Num ipv -> GHC.Types.True }
                   Mascarpone.Num a1
                   -> case b of wild1 {
                        Mascarpone.Chr ipv -> GHC.Types.False
                        Mascarpone.Num b1 -> GHC.Classes.$fOrdDouble_$c< a1 b1 } }) -}
fe45fbcb4d2b14d81ffd5640b671d338
  $fOrdSymbol_$c<= ::
    Mascarpone.Symbol -> Mascarpone.Symbol -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Mascarpone.Symbol) (b :: Mascarpone.Symbol) ->
                 case a of wild {
                   Mascarpone.Chr a1
                   -> case b of wild1 {
                        Mascarpone.Chr b1 -> GHC.Classes.$fOrdChar_$c<= a1 b1
                        Mascarpone.Num ipv -> GHC.Types.True }
                   Mascarpone.Num a1
                   -> case b of wild1 {
                        Mascarpone.Chr ipv -> GHC.Types.False
                        Mascarpone.Num b1 -> GHC.Classes.$fOrdDouble_$c<= a1 b1 } }) -}
fe45fbcb4d2b14d81ffd5640b671d338
  $fOrdSymbol_$c> ::
    Mascarpone.Symbol -> Mascarpone.Symbol -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Mascarpone.Symbol) (b :: Mascarpone.Symbol) ->
                 case a of wild {
                   Mascarpone.Chr a1
                   -> case b of wild1 {
                        Mascarpone.Chr b1 -> GHC.Classes.$fOrdChar_$c> a1 b1
                        Mascarpone.Num ipv -> GHC.Types.False }
                   Mascarpone.Num a1
                   -> case b of wild1 {
                        Mascarpone.Chr ipv -> GHC.Types.True
                        Mascarpone.Num b1 -> GHC.Classes.$fOrdDouble_$c> a1 b1 } }) -}
fe45fbcb4d2b14d81ffd5640b671d338
  $fOrdSymbol_$c>= ::
    Mascarpone.Symbol -> Mascarpone.Symbol -> GHC.Types.Bool
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Mascarpone.Symbol) (b :: Mascarpone.Symbol) ->
                 case a of wild {
                   Mascarpone.Chr a1
                   -> case b of wild1 {
                        Mascarpone.Chr b1 -> GHC.Classes.$fOrdChar_$c>= a1 b1
                        Mascarpone.Num ipv -> GHC.Types.False }
                   Mascarpone.Num a1
                   -> case b of wild1 {
                        Mascarpone.Chr ipv -> GHC.Types.True
                        Mascarpone.Num b1 -> GHC.Classes.$fOrdDouble_$c>= a1 b1 } }) -}
fe45fbcb4d2b14d81ffd5640b671d338
  $fOrdSymbol_$ccompare ::
    Mascarpone.Symbol -> Mascarpone.Symbol -> GHC.Types.Ordering
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (a :: Mascarpone.Symbol) (b :: Mascarpone.Symbol) ->
                 case a of wild {
                   Mascarpone.Chr a1
                   -> case b of wild1 {
                        Mascarpone.Chr b1 -> GHC.Classes.$fOrdChar_$ccompare a1 b1
                        Mascarpone.Num ipv -> GHC.Types.LT }
                   Mascarpone.Num a1
                   -> case b of wild1 {
                        Mascarpone.Chr ipv -> GHC.Types.GT
                        Mascarpone.Num b1
                        -> GHC.Classes.$fOrdDouble_$ccompare a1 b1 } }) -}
fe45fbcb4d2b14d81ffd5640b671d338
  $fOrdSymbol_$cmax ::
    Mascarpone.Symbol -> Mascarpone.Symbol -> Mascarpone.Symbol
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x3 :: Mascarpone.Symbol) (y :: Mascarpone.Symbol) ->
                 case x3 of wild {
                   Mascarpone.Chr a1
                   -> case y of wild1 {
                        Mascarpone.Chr b1
                        -> case a1 of wild2 { GHC.Types.C# c1 ->
                           case b1 of wild3 { GHC.Types.C# c2 ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.leChar# c1 c2) of wild4 {
                             GHC.Types.False -> wild GHC.Types.True -> wild1 } } }
                        Mascarpone.Num ipv -> wild1 }
                   Mascarpone.Num a1
                   -> case y of wild1 {
                        Mascarpone.Chr ipv -> wild
                        Mascarpone.Num b1
                        -> case a1 of wild2 { GHC.Types.D# x4 ->
                           case b1 of wild3 { GHC.Types.D# y1 ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=## x4 y1) of wild4 {
                             GHC.Types.False -> wild GHC.Types.True -> wild1 } } } } }) -}
fe45fbcb4d2b14d81ffd5640b671d338
  $fOrdSymbol_$cmin ::
    Mascarpone.Symbol -> Mascarpone.Symbol -> Mascarpone.Symbol
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U>,
     Unfolding: (\ (x3 :: Mascarpone.Symbol) (y :: Mascarpone.Symbol) ->
                 case x3 of wild {
                   Mascarpone.Chr a1
                   -> case y of wild1 {
                        Mascarpone.Chr b1
                        -> case a1 of wild2 { GHC.Types.C# c1 ->
                           case b1 of wild3 { GHC.Types.C# c2 ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.leChar# c1 c2) of wild4 {
                             GHC.Types.False -> wild1 GHC.Types.True -> wild } } }
                        Mascarpone.Num ipv -> wild }
                   Mascarpone.Num a1
                   -> case y of wild1 {
                        Mascarpone.Chr ipv -> wild1
                        Mascarpone.Num b1
                        -> case a1 of wild2 { GHC.Types.D# x4 ->
                           case b1 of wild3 { GHC.Types.D# y1 ->
                           case GHC.Prim.tagToEnum#
                                  @ GHC.Types.Bool
                                  (GHC.Prim.<=## x4 y1) of wild4 {
                             GHC.Types.False -> wild1 GHC.Types.True -> wild } } } } }) -}
885184ae274ab2c58cbecb37dced08e8
  $sfromList ::
    [(Mascarpone.Symbol, a)] -> Data.Map.Base.Map Mascarpone.Symbol a
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ @ a (ds :: [(Mascarpone.Symbol, a)]) ->
                 case ds of wild {
                   [] -> Data.Map.Base.Tip @ Mascarpone.Symbol @ a
                   : ds1 ds2
                   -> case ds1 of wild1 { (,) kx x3 ->
                      case ds2 of wild2 {
                        []
                        -> case kx of dt { DEFAULT ->
                           Data.Map.Base.Bin
                             @ Mascarpone.Symbol
                             @ a
                             1#
                             dt
                             x3
                             (Data.Map.Base.Tip @ Mascarpone.Symbol @ a)
                             (Data.Map.Base.Tip @ Mascarpone.Symbol @ a) }
                        : ipv ipv1
                        -> case ipv of wild3 { (,) ky ds3 ->
                           case kx of wild4 {
                             Mascarpone.Chr a1
                             -> case ky of wild5 {
                                  Mascarpone.Chr b1
                                  -> case a1 of wild6 { GHC.Types.C# c1 ->
                                     case b1 of wild7 { GHC.Types.C# c2 ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.geChar# c1 c2) of wild8 {
                                       GHC.Types.False
                                       -> Mascarpone.$wpoly_go10
                                            @ a
                                            1#
                                            (Data.Map.Base.Bin
                                               @ Mascarpone.Symbol
                                               @ a
                                               1#
                                               wild4
                                               x3
                                               (Data.Map.Base.Tip @ Mascarpone.Symbol @ a)
                                               (Data.Map.Base.Tip @ Mascarpone.Symbol @ a))
                                            wild2
                                       GHC.Types.True
                                       -> Mascarpone.$sfromList1
                                            @ a
                                            (Data.Map.Base.Bin
                                               @ Mascarpone.Symbol
                                               @ a
                                               1#
                                               wild4
                                               x3
                                               (Data.Map.Base.Tip @ Mascarpone.Symbol @ a)
                                               (Data.Map.Base.Tip @ Mascarpone.Symbol @ a))
                                            wild2 } } }
                                  Mascarpone.Num ipv2
                                  -> Mascarpone.$wpoly_go10
                                       @ a
                                       1#
                                       (Data.Map.Base.Bin
                                          @ Mascarpone.Symbol
                                          @ a
                                          1#
                                          wild4
                                          x3
                                          (Data.Map.Base.Tip @ Mascarpone.Symbol @ a)
                                          (Data.Map.Base.Tip @ Mascarpone.Symbol @ a))
                                       wild2 }
                             Mascarpone.Num a1
                             -> case ky of wild5 {
                                  Mascarpone.Chr ipv2
                                  -> Mascarpone.$sfromList1
                                       @ a
                                       (Data.Map.Base.Bin
                                          @ Mascarpone.Symbol
                                          @ a
                                          1#
                                          wild4
                                          x3
                                          (Data.Map.Base.Tip @ Mascarpone.Symbol @ a)
                                          (Data.Map.Base.Tip @ Mascarpone.Symbol @ a))
                                       wild2
                                  Mascarpone.Num b1
                                  -> case a1 of wild6 { GHC.Types.D# x4 ->
                                     case b1 of wild7 { GHC.Types.D# y ->
                                     case GHC.Prim.tagToEnum#
                                            @ GHC.Types.Bool
                                            (GHC.Prim.>=## x4 y) of wild8 {
                                       GHC.Types.False
                                       -> Mascarpone.$wpoly_go10
                                            @ a
                                            1#
                                            (Data.Map.Base.Bin
                                               @ Mascarpone.Symbol
                                               @ a
                                               1#
                                               wild4
                                               x3
                                               (Data.Map.Base.Tip @ Mascarpone.Symbol @ a)
                                               (Data.Map.Base.Tip @ Mascarpone.Symbol @ a))
                                            wild2
                                       GHC.Types.True
                                       -> Mascarpone.$sfromList1
                                            @ a
                                            (Data.Map.Base.Bin
                                               @ Mascarpone.Symbol
                                               @ a
                                               1#
                                               wild4
                                               x3
                                               (Data.Map.Base.Tip @ Mascarpone.Symbol @ a)
                                               (Data.Map.Base.Tip @ Mascarpone.Symbol @ a))
                                            wild2 } } } } } } } } }) -}
c17c251b26f1323d5b80b3e223372791
  $sfromList1 ::
    Data.Map.Base.Map Mascarpone.Symbol a1
    -> [(Mascarpone.Symbol, a1)]
    -> Data.Map.Base.Map Mascarpone.Symbol a1
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
1cffbf3cfe2e5909cfacf5e2b860d8d8
  $sinsert_$sgo10 ::
    Mascarpone.Symbol
    -> a1
    -> Data.Map.Base.Map Mascarpone.Symbol a1
    -> Data.Map.Base.Map Mascarpone.Symbol a1
  {- Arity: 3, Strictness: <S,1*U><L,U><S,1*U> -}
5dd624d3afa6f13ae37eca6a36502a5c
  $slookup1 ::
    Mascarpone.Symbol
    -> Data.Map.Base.Map Mascarpone.Symbol a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U><S,1*U> -}
8eb426931d24d0481cfe8648e4a5c60f
  $tc'Chr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   8452142650391828476##
                   6734814833464037699##
                   Mascarpone.$trModule
                   Mascarpone.$tc'Chr1) -}
f7ecb48efe9218855f61f4eab0c0a786
  $tc'Chr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Chr"#) -}
d6d1ba161d73f1cee1d8589262eab602
  $tc'Interpreter :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1811055453641304844##
                   17591337214753679893##
                   Mascarpone.$trModule
                   Mascarpone.$tc'Interpreter1) -}
277e23f2286c57d8a7ebfd09a3a4cc5c
  $tc'Interpreter1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Interpreter"#) -}
79b6e2fc787fbdffb7e4a74f326c47c6
  $tc'Intr :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6609818685683453694##
                   14584530743204546621##
                   Mascarpone.$trModule
                   Mascarpone.$tc'Intr1) -}
236f86da3f2ac184259de531a0eb6cd5
  $tc'Intr1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Intr"#) -}
6ff167a221c3ccf2216e319d79797782
  $tc'Num :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14878970356845600936##
                   8553253098799105071##
                   Mascarpone.$trModule
                   Mascarpone.$tc'Num1) -}
f30bfc084096e5dbae7381a5428d5079
  $tc'Num1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Num"#) -}
ccbbed4b13cd41959b8ee91b2e6a9d0d
  $tc'Op :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17146236326384697807##
                   7382135013785778726##
                   Mascarpone.$trModule
                   Mascarpone.$tc'Op1) -}
08be3c74d0154467b3665820cc78ad86
  $tc'Op1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Op"#) -}
3bcec9fa2219f3a68d1263325c750413
  $tc'State :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   281107883924945915##
                   8669734293189903636##
                   Mascarpone.$trModule
                   Mascarpone.$tc'State1) -}
e1e36e8910fd9c4598935988ce164513
  $tc'State1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'State"#) -}
689494909c490beb7347af90881e135b
  $tc'Symb :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14191924000093539098##
                   2669804696974312816##
                   Mascarpone.$trModule
                   Mascarpone.$tc'Symb1) -}
007f58dab2345fbe1db4a39d897b9233
  $tc'Symb1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Symb"#) -}
41706586a36d07576235363edab3874f
  $tcInterpreter :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2787614150638261314##
                   9418951468561320110##
                   Mascarpone.$trModule
                   Mascarpone.$tcInterpreter1) -}
f36285e34cfb2cfda699401815006c36
  $tcInterpreter1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Interpreter"#) -}
c5bc9047f8d386532e43234655a3405b
  $tcProgState :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   7423886089257362551##
                   1228094113233276251##
                   Mascarpone.$trModule
                   Mascarpone.$tcProgState1) -}
2899807cad95abbbbd2466c178f9d80b
  $tcProgState1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "ProgState"#) -}
36b2a1359bc5e40e95c853c8bdf756f3
  $tcStackElem :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2688748399586037591##
                   8083883271696237298##
                   Mascarpone.$trModule
                   Mascarpone.$tcStackElem1) -}
c1badc301317cc959526e7bfcda48d0d
  $tcStackElem1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "StackElem"#) -}
4cbe8bf0c809e5b356d62d9ed525aaff
  $tcSymbol :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   6427243012925024343##
                   6826725350639391973##
                   Mascarpone.$trModule
                   Mascarpone.$tcSymbol1) -}
40b949df6a0329571e19254548da2c14
  $tcSymbol1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Symbol"#) -}
6003a1d71e0be9fe8a9d70eb5e6cd7cf
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Mascarpone.$trModule2
                   Mascarpone.$trModule1) -}
0e703aa73154b7e2636a56054e26cb10
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Mascarpone"#) -}
1322f398431715a089e76d7c94b25459
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
dce5975d75e80a493f49f808853e4480
  $wcreate ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Mascarpone.Interpreter)
                   (ww1 :: [Mascarpone.StackElem])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ww1 of wild {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                ((), Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case x3 of wild1 {
                        DEFAULT
                        -> GHC.IO.failIO1
                             @ ((), Mascarpone.ProgState)
                             Mascarpone.create_str
                             w
                        Mascarpone.Intr i
                        -> case Mascarpone.$wpopString ww xs w of ds1 { (#,#) ipv ipv1 ->
                           (# ipv,
                              (GHC.Tuple.(),
                               case ipv1 of wild2 { (,) a1 s' ->
                               case s' of wild3 { Mascarpone.State ds ds2 ->
                               Mascarpone.State
                                 ds
                                 (GHC.Types.:
                                    @ Mascarpone.StackElem
                                    (Mascarpone.Op
                                       (\ (w1 :: Mascarpone.ProgState)
                                          (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                        Mascarpone.create2 a1 w1 w2)
                                         `cast`
                                       (Trans
                                            (<Mascarpone.ProgState>_R
                                             ->_R Sym (GHC.Types.N:IO[0]
                                                           <((), Mascarpone.ProgState)>_R))
                                            (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                      <Mascarpone.ProgState>_N
                                                      <GHC.Types.IO>_R
                                                      <()>_N))))
                                    ds2) } }) #) } } }) -}
db23fff0602780e7b9f47a463ed59343
  $wdeepquote ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,U><S,U>,
     Inline: [0] -}
9d163850e3e5b1c167d33469378e7339
  $wextract ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Mascarpone.Interpreter)
                   (ww1 :: [Mascarpone.StackElem])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ww1 of wild {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                ((), Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case xs of wild1 {
                        []
                        -> case Mascarpone.create3
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((), Mascarpone.ProgState) #)
                           of {}
                        : x4 xs1
                        -> case x3 of wild2 {
                             DEFAULT -> Mascarpone.$wfail4 w
                             Mascarpone.Symb ds
                             -> case ds of wild3 {
                                  Mascarpone.Chr s
                                  -> case x4 of wild4 {
                                       DEFAULT -> Mascarpone.$wfail4 w
                                       Mascarpone.Intr i
                                       -> (# w,
                                             (GHC.Tuple.(),
                                              Mascarpone.State
                                                ww
                                                (GHC.Types.:
                                                   @ Mascarpone.StackElem
                                                   (Mascarpone.Op
                                                      (let {
                                                         w1 :: GHC.Base.String
                                                         = GHC.Types.:
                                                             @ GHC.Types.Char
                                                             s
                                                             (GHC.Types.[] @ GHC.Types.Char)
                                                       } in
                                                       (\ (w2 :: Mascarpone.ProgState)
                                                          (w3 :: GHC.Prim.State#
                                                                   GHC.Prim.RealWorld)[OneShot] ->
                                                        Mascarpone.create2 w1 w2 w3)
                                                         `cast`
                                                       (Trans
                                                            (<Mascarpone.ProgState>_R
                                                             ->_R Sym (GHC.Types.N:IO[0]
                                                                           <((),
                                                                             Mascarpone.ProgState)>_R))
                                                            (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                                      <Mascarpone.ProgState>_N
                                                                      <GHC.Types.IO>_R
                                                                      <()>_N)))))
                                                   xs1)) #) }
                                  Mascarpone.Num ipv -> Mascarpone.$wfail4 w } } } }) -}
e8317416671a658e7f2aa6048793674e
  $wfail ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (GHC.Base.String, Mascarpone.ProgState) #)
  {- Arity: 1, Strictness: <B,U>x, Inline: [0] -}
0bdba53839ef1b508551d394eb2b477d
  $wfail1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 1, Strictness: <B,U>x, Inline: [0] -}
8c7560ee80a6224c2679fdc22fd3d6d6
  $wfail2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 1, Strictness: <B,U>x, Inline: [0] -}
c53919285b2e8289539a50d4f926f476
  $wfail3 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 1, Strictness: <B,U>x, Inline: [0] -}
1e809f9621022317d7c4bc07bca7802e
  $wfail4 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 1, Strictness: <B,U>x, Inline: [0] -}
37453b01022025576b95ffa047087e4c
  $wgetParent ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Mascarpone.Interpreter)
                   (ww1 :: [Mascarpone.StackElem])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ww1 of wild {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                ((), Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case x3 of wild1 {
                        DEFAULT
                        -> GHC.IO.failIO1
                             @ ((), Mascarpone.ProgState)
                             Mascarpone.defCodepage_str1
                             w
                        Mascarpone.Intr i
                        -> (# w,
                              (GHC.Tuple.(),
                               Mascarpone.State
                                 ww
                                 (GHC.Types.:
                                    @ Mascarpone.StackElem
                                    (Mascarpone.Intr
                                       (case i of wild2 { Mascarpone.Interpreter ds ds1 ds2 ->
                                        ds1 }))
                                    xs)) #) } }) -}
7e744cac464bbff9bb3cd5ab7ce596c4
  $winstall ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Mascarpone.Interpreter)
                   (ww1 :: [Mascarpone.StackElem])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ww1 of wild {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                ((), Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case xs of wild1 {
                        []
                        -> case Mascarpone.create3
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((), Mascarpone.ProgState) #)
                           of {}
                        : x4 xs1
                        -> case xs1 of wild2 {
                             []
                             -> case Mascarpone.create3
                                ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                          ((), Mascarpone.ProgState) #)
                                of {}
                             : x5 xs2
                             -> case x3 of wild3 {
                                  DEFAULT -> Mascarpone.$wfail3 w
                                  Mascarpone.Symb s
                                  -> case x4 of wild4 {
                                       DEFAULT -> Mascarpone.$wfail3 w
                                       Mascarpone.Op o
                                       -> case x5 of wild5 {
                                            DEFAULT -> Mascarpone.$wfail3 w
                                            Mascarpone.Intr i
                                            -> (# w,
                                                  (GHC.Tuple.(),
                                                   Mascarpone.State
                                                     ww
                                                     (GHC.Types.:
                                                        @ Mascarpone.StackElem
                                                        (Mascarpone.Intr
                                                           (case i of wild6 { Mascarpone.Interpreter ds ds1 ds2 ->
                                                            Mascarpone.Interpreter
                                                              (Mascarpone.$sinsert_$sgo10
                                                                 @ (Control.Monad.Trans.State.Lazy.StateT
                                                                      Mascarpone.ProgState
                                                                      GHC.Types.IO
                                                                      ())
                                                                 s
                                                                 o
                                                                 ds)
                                                              ds1
                                                              ds2 }))
                                                        xs2)) #) } } } } } }) -}
9c49a64702271aaacc3d14798459b83b
  $woutp ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Mascarpone.Interpreter)
                   (ww1 :: [Mascarpone.StackElem])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ww1 of wild {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                ((), Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case x3 of wild1 {
                        DEFAULT -> Mascarpone.$wfail1 w
                        Mascarpone.Symb ds
                        -> case ds of wild2 {
                             Mascarpone.Chr s
                             -> case s of ww2 { GHC.Types.C# ww3 ->
                                case GHC.IO.Handle.Text.$whPutChar
                                       GHC.IO.Handle.FD.stdout
                                       ww3
                                       w of ds1 { (#,#) ipv ipv1 ->
                                (# ipv, (ipv1, Mascarpone.State ww xs) #) } }
                             Mascarpone.Num ipv -> Mascarpone.$wfail1 w } } }) -}
816b3b883758d8245400b08ace52abb0
  $wpoly_go10 ::
    GHC.Prim.Int#
    -> Data.Map.Base.Map Mascarpone.Symbol a
    -> [(Mascarpone.Symbol, a)]
    -> Data.Map.Base.Map Mascarpone.Symbol a
  {- Arity: 3, Strictness: <L,U><S,1*U><S,1*U>, Inline: [0] -}
99b19c932d5d031e9805d0f7c8ad31ab
  $wpop3 ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((Mascarpone.StackElem, Mascarpone.StackElem,
            Mascarpone.StackElem),
           Mascarpone.ProgState) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Mascarpone.Interpreter)
                   (ww1 :: [Mascarpone.StackElem])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ww1 of wild {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                ((Mascarpone.StackElem, Mascarpone.StackElem,
                                  Mascarpone.StackElem),
                                 Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case xs of wild1 {
                        []
                        -> case Mascarpone.create3
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((Mascarpone.StackElem, Mascarpone.StackElem,
                                       Mascarpone.StackElem),
                                      Mascarpone.ProgState) #)
                           of {}
                        : x4 xs1
                        -> case xs1 of wild2 {
                             []
                             -> case Mascarpone.create3
                                ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                          ((Mascarpone.StackElem, Mascarpone.StackElem,
                                            Mascarpone.StackElem),
                                           Mascarpone.ProgState) #)
                                of {}
                             : x5 xs2
                             -> (# w, ((x3, x4, x5), Mascarpone.State ww xs2) #) } } }) -}
b0de6218f8e9504a041e8970b784d936
  $wpopString ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (GHC.Base.String, Mascarpone.ProgState) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Mascarpone.Interpreter)
                   (ww1 :: [Mascarpone.StackElem])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ww1 of wild {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                (GHC.Base.String, Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case x3 of wild1 {
                        DEFAULT -> Mascarpone.$wfail w
                        Mascarpone.Symb ds
                        -> case ds of wild2 {
                             Mascarpone.Chr ds1
                             -> case ds1 of wild3 { GHC.Types.C# ds2 ->
                                case ds2 of ds3 {
                                  DEFAULT -> Mascarpone.$wfail w
                                  ']'# -> Mascarpone.$wpopString' ww xs w } }
                             Mascarpone.Num ipv -> Mascarpone.$wfail w } } }) -}
5d79e56115da86b0f629e02ae104732b
  $wpopString' ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ([GHC.Types.Char], Mascarpone.ProgState) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0] -}
056486da1782b52b93e4b02a26ae0eac
  $wquotesym ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,U><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: Mascarpone.Interpreter)
                   (ww1 :: [Mascarpone.StackElem])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# w,
                    (GHC.Tuple.(),
                     Mascarpone.State
                       (Mascarpone.Interpreter
                          (Data.Map.Base.Tip @ Mascarpone.Symbol @ Mascarpone.Effect)
                          ww
                          (\ (c :: Mascarpone.Symbol)
                             (eta :: Mascarpone.ProgState)
                             (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                           case eta of wild { Mascarpone.State ds ds1 ->
                           (# eta1,
                              (GHC.Tuple.(),
                               Mascarpone.State
                                 ww
                                 (GHC.Types.: @ Mascarpone.StackElem (Mascarpone.Symb c) ds1)) #) })
                            `cast`
                          (<Mascarpone.Symbol>_R
                           ->_R Trans
                                    (<Mascarpone.ProgState>_R
                                     ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                                    (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                              <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))
                       ww1) #)) -}
dddee237dcee530c0c077ca9d10c453d
  $wsetParent ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Mascarpone.Interpreter)
                   (ww1 :: [Mascarpone.StackElem])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ww1 of wild {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                ((), Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case xs of wild1 {
                        []
                        -> case Mascarpone.create3
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((), Mascarpone.ProgState) #)
                           of {}
                        : x4 xs1
                        -> case x3 of wild2 {
                             DEFAULT -> Mascarpone.$wfail2 w
                             Mascarpone.Intr i
                             -> case x4 of wild3 {
                                  DEFAULT -> Mascarpone.$wfail2 w
                                  Mascarpone.Intr j
                                  -> (# w,
                                        (GHC.Tuple.(),
                                         Mascarpone.State
                                           ww
                                           (GHC.Types.:
                                              @ Mascarpone.StackElem
                                              (Mascarpone.Intr
                                                 (case i of wild4 { Mascarpone.Interpreter ds ds1 ds2 ->
                                                  Mascarpone.Interpreter ds j ds2 }))
                                              xs1)) #) } } } }) -}
abecb9ea37a25ea7ba1d67f937ecfccb
  $wswap ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: Mascarpone.Interpreter)
                   (ww1 :: [Mascarpone.StackElem])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ww1 of wild {
                   []
                   -> (# w,
                         (GHC.Tuple.(),
                          Mascarpone.State ww (GHC.Types.[] @ Mascarpone.StackElem)) #)
                   : x3 ds
                   -> case ds of wild1 {
                        [] -> (# w, (GHC.Tuple.(), Mascarpone.State ww wild) #)
                        : y ys
                        -> (# w,
                              (GHC.Tuple.(),
                               Mascarpone.State
                                 ww
                                 (GHC.Types.:
                                    @ Mascarpone.StackElem
                                    y
                                    (GHC.Types.: @ Mascarpone.StackElem x3 ys))) #) } }) -}
1b5c3be436643c787baea5360e82755c
  $wuniform ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Mascarpone.Interpreter)
                   (ww1 :: [Mascarpone.StackElem])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ww1 of wild {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                ((), Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case x3 of wild1 {
                        DEFAULT
                        -> GHC.IO.failIO1
                             @ ((), Mascarpone.ProgState)
                             Mascarpone.defCodepage_str
                             w
                        Mascarpone.Op o
                        -> (# w,
                              (GHC.Tuple.(),
                               Mascarpone.State
                                 ww
                                 (GHC.Types.:
                                    @ Mascarpone.StackElem
                                    (Mascarpone.Intr
                                       (Mascarpone.Interpreter
                                          (Data.Map.Base.Tip
                                             @ Mascarpone.Symbol
                                             @ Mascarpone.Effect)
                                          ww
                                          (\ (ds :: Mascarpone.Symbol) -> o)))
                                    xs)) #) } }) -}
c2189e91677862e8cc96191e42571d14
  type Effect =
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
c2189e91677862e8cc96191e42571d14
  data Interpreter
    = Interpreter {codepage :: Data.Map.Base.Map
                                 Mascarpone.Symbol Mascarpone.Effect,
                   parent :: Mascarpone.Interpreter,
                   fallback :: Mascarpone.Symbol -> Mascarpone.Effect}
    RecFlag: Recursive
c2189e91677862e8cc96191e42571d14
  data ProgState
    = State {interpreter :: Mascarpone.Interpreter,
             stack :: [Mascarpone.StackElem]}
    RecFlag: Recursive
c2189e91677862e8cc96191e42571d14
  data StackElem
    = Symb Mascarpone.Symbol
    | Op Mascarpone.Effect
    | Intr Mascarpone.Interpreter
fe45fbcb4d2b14d81ffd5640b671d338
  data Symbol = Chr GHC.Types.Char | Num GHC.Types.Double
9e23a6c41601cbe1800fbda4db3b00c3
  codepage ::
    Mascarpone.Interpreter
    -> Data.Map.Base.Map Mascarpone.Symbol Mascarpone.Effect
  RecSel Left Mascarpone.Interpreter
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Mascarpone.Interpreter) ->
                 case ds of wild { Mascarpone.Interpreter ds1 ds2 ds3 -> ds1 }) -}
bb0ac70015caaee4bc7c76e8bb4a120d
  create ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Mascarpone.create1
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
1f2cb3f82922cc34a3c64b7d53568ab2
  create1 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Mascarpone.$wcreate ww1 ww2 w1 }) -}
40e73c88bb126e84ab4710ae868ade45
  create2 ::
    [GHC.Types.Char]
    -> Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S,1*U><L,U(U(U,U,U),U)><S,U> -}
74204ce074c8b15300a35e4498cb995e
  create3 ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO Mascarpone.StackElem
  {- Strictness: x -}
fd9333a7c5ea68d94e3e8d7a6d52af96
  create_str :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   "Pattern match failure in do expression at app/Mascarpone.hs:136:3-8"#) -}
12679e35ebdc658db24293180e6ee24a
  deepquote ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Mascarpone.deepquote1
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
fb738c0bde11520f1be58b2d22e6db6f
  deepquote1 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U(U,U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Mascarpone.$wdeepquote ww1 ww2 w1 }) -}
fd898c17eb4977cad04429278fadc126
  defCodepage ::
    Data.Map.Base.Map
      Mascarpone.Symbol
      (Control.Monad.Trans.State.Lazy.StateT
         Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: (Mascarpone.$sfromList
                   @ (Control.Monad.Trans.State.Lazy.StateT
                        Mascarpone.ProgState GHC.Types.IO ())
                   Mascarpone.defCodepage1) -}
d7de32dd91be93d4eadd3c37b3a0632f
  defCodepage1 ::
    [(Mascarpone.Symbol,
      Control.Monad.Trans.State.Lazy.StateT
        Mascarpone.ProgState GHC.Types.IO ())]
  {- Unfolding: (GHC.Types.:
                   @ (Mascarpone.Symbol,
                      Control.Monad.Trans.State.Lazy.StateT
                        Mascarpone.ProgState GHC.Types.IO ())
                   Mascarpone.defCodepage86
                   Mascarpone.defCodepage2) -}
2064aca016086d3e19537a50415917a8
  defCodepage10 ::
    [(Mascarpone.Symbol,
      Control.Monad.Trans.State.Lazy.StateT
        Mascarpone.ProgState GHC.Types.IO ())]
  {- Unfolding: (GHC.Types.:
                   @ (Mascarpone.Symbol,
                      Control.Monad.Trans.State.Lazy.StateT
                        Mascarpone.ProgState GHC.Types.IO ())
                   Mascarpone.defCodepage50
                   Mascarpone.defCodepage11) -}
c7179cd3ed909d55f967022c0674875d
  defCodepage11 ::
    [(Mascarpone.Symbol,
      Control.Monad.Trans.State.Lazy.StateT
        Mascarpone.ProgState GHC.Types.IO ())]
  {- Unfolding: (GHC.Types.:
                   @ (Mascarpone.Symbol,
                      Control.Monad.Trans.State.Lazy.StateT
                        Mascarpone.ProgState GHC.Types.IO ())
                   Mascarpone.defCodepage46
                   Mascarpone.defCodepage12) -}
0d9744a1e6635c9b68637aa900e5b779
  defCodepage12 ::
    [(Mascarpone.Symbol,
      Control.Monad.Trans.State.Lazy.StateT
        Mascarpone.ProgState GHC.Types.IO ())]
  {- Unfolding: (GHC.Types.:
                   @ (Mascarpone.Symbol,
                      Control.Monad.Trans.State.Lazy.StateT
                        Mascarpone.ProgState GHC.Types.IO ())
                   Mascarpone.defCodepage43
                   Mascarpone.defCodepage13) -}
246575ab471c2624a4a8400ed5340676
  defCodepage13 ::
    [(Mascarpone.Symbol,
      Control.Monad.Trans.State.Lazy.StateT
        Mascarpone.ProgState GHC.Types.IO ())]
  {- Unfolding: (GHC.Types.:
                   @ (Mascarpone.Symbol,
                      Control.Monad.Trans.State.Lazy.StateT
                        Mascarpone.ProgState GHC.Types.IO ())
                   Mascarpone.defCodepage39
                   Mascarpone.defCodepage14) -}
b20efb57df3d22cb345e122005557d50
  defCodepage14 ::
    [(Mascarpone.Symbol,
      Control.Monad.Trans.State.Lazy.StateT
        Mascarpone.ProgState GHC.Types.IO ())]
  {- Unfolding: (GHC.Types.:
                   @ (Mascarpone.Symbol,
                      Control.Monad.Trans.State.Lazy.StateT
                        Mascarpone.ProgState GHC.Types.IO ())
                   Mascarpone.defCodepage35
                   Mascarpone.defCodepage15) -}
fa71289d4ac1c933d3bb90bf23bd6556
  defCodepage15 ::
    [(Mascarpone.Symbol,
      Control.Monad.Trans.State.Lazy.StateT
        Mascarpone.ProgState GHC.Types.IO ())]
  {- Unfolding: (GHC.Types.:
                   @ (Mascarpone.Symbol,
                      Control.Monad.Trans.State.Lazy.StateT
                        Mascarpone.ProgState GHC.Types.IO ())
                   Mascarpone.defCodepage31
                   Mascarpone.defCodepage16) -}
540d021414947b43a113f6ae3ae0e36e
  defCodepage16 ::
    [(Mascarpone.Symbol,
      Control.Monad.Trans.State.Lazy.StateT
        Mascarpone.ProgState GHC.Types.IO ())]
  {- Unfolding: (GHC.Types.:
                   @ (Mascarpone.Symbol,
                      Control.Monad.Trans.State.Lazy.StateT
                        Mascarpone.ProgState GHC.Types.IO ())
                   Mascarpone.defCodepage27
                   Mascarpone.defCodepage17) -}
2e1c8c028fa2efa2716b328f35d79fa9
  defCodepage17 ::
    [(Mascarpone.Symbol,
      Control.Monad.Trans.State.Lazy.StateT
        Mascarpone.ProgState GHC.Types.IO ())]
  {- Unfolding: (GHC.Types.:
                   @ (Mascarpone.Symbol,
                      Control.Monad.Trans.State.Lazy.StateT
                        Mascarpone.ProgState GHC.Types.IO ())
                   Mascarpone.defCodepage23
                   Mascarpone.defCodepage18) -}
c3a53719227572b5aadc09e09d74fc50
  defCodepage18 ::
    [(Mascarpone.Symbol,
      Control.Monad.Trans.State.Lazy.StateT
        Mascarpone.ProgState GHC.Types.IO ())]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ (Mascarpone.Symbol,
                      Control.Monad.Trans.State.Lazy.StateT
                        Mascarpone.ProgState GHC.Types.IO ())
                   Mascarpone.defCodepage19
                   (GHC.Types.[]
                      @ (Mascarpone.Symbol,
                         Control.Monad.Trans.State.Lazy.StateT
                           Mascarpone.ProgState GHC.Types.IO ()))) -}
75ede126c804482e94e535f71423e25c
  defCodepage19 ::
    (Mascarpone.Symbol,
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- HasNoCafRefs,
     Unfolding: ((Mascarpone.defCodepage21,
                  Mascarpone.defCodepage20
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
55a658c78c9281dd0e224e1c628f41e5
  defCodepage2 ::
    [(Mascarpone.Symbol,
      Control.Monad.Trans.State.Lazy.StateT
        Mascarpone.ProgState GHC.Types.IO ())]
  {- Unfolding: (GHC.Types.:
                   @ (Mascarpone.Symbol,
                      Control.Monad.Trans.State.Lazy.StateT
                        Mascarpone.ProgState GHC.Types.IO ())
                   Mascarpone.defCodepage81
                   Mascarpone.defCodepage3) -}
b59acc9d62b08a136a95c85d745f7b42
  defCodepage20 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(LS),1*U(U,U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Mascarpone.$wswap ww1 ww2 w1 }) -}
943a9ddaab0cff748eb94b3b9f9775d2
  defCodepage21 :: Mascarpone.Symbol
  {- HasNoCafRefs,
     Unfolding: (Mascarpone.Chr Mascarpone.defCodepage22) -}
b77fcdd57a5addbb3a9e12652b487050
  defCodepage22 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# '/'#) -}
21432710d16718266f8e3dcec53630a5
  defCodepage23 ::
    (Mascarpone.Symbol,
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Mascarpone.defCodepage25,
                  Mascarpone.defCodepage24
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
087d25dc2c1a560a48dda82f2907800e
  defCodepage24 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (s1 :: Mascarpone.ProgState)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case s1 of wild { Mascarpone.State ds ds1 ->
                 case ds1 of wild1 {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                ((), Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> (# eta, (GHC.Tuple.(), Mascarpone.State ds xs) #) } }) -}
fa6bb5d98c294a66e4918695ca3ed3c5
  defCodepage25 :: Mascarpone.Symbol
  {- HasNoCafRefs,
     Unfolding: (Mascarpone.Chr Mascarpone.defCodepage26) -}
5160c1a20936fb85170ff299abc315d8
  defCodepage26 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# '$'#) -}
10124a00d2630fe4d11815fb2162aca5
  defCodepage27 ::
    (Mascarpone.Symbol,
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- HasNoCafRefs,
     Unfolding: ((Mascarpone.defCodepage29,
                  Mascarpone.defCodepage28
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
84fd61fefc462defab5e571150e718ec
  defCodepage28 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S(LS),1*U(U,U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (s1 :: Mascarpone.ProgState)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case s1 of wild { Mascarpone.State ds ds1 ->
                 case ds1 of wild1 {
                   [] -> (# s, (GHC.Tuple.(), wild) #)
                   : x3 xs
                   -> (# s,
                         (GHC.Tuple.(),
                          Mascarpone.State
                            ds
                            (GHC.Types.: @ Mascarpone.StackElem x3 wild1)) #) } }) -}
228801b640f22b0a60637583217c6d04
  defCodepage29 :: Mascarpone.Symbol
  {- HasNoCafRefs,
     Unfolding: (Mascarpone.Chr Mascarpone.defCodepage30) -}
1f32b79fc77ead72c293d13ad66f4419
  defCodepage3 ::
    [(Mascarpone.Symbol,
      Control.Monad.Trans.State.Lazy.StateT
        Mascarpone.ProgState GHC.Types.IO ())]
  {- Unfolding: (GHC.Types.:
                   @ (Mascarpone.Symbol,
                      Control.Monad.Trans.State.Lazy.StateT
                        Mascarpone.ProgState GHC.Types.IO ())
                   Mascarpone.defCodepage77
                   Mascarpone.defCodepage4) -}
b777afaa336260b03d7fb9fb8bdc36f9
  defCodepage30 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# ':'#) -}
101b7f8780ba9db2b6844cbb22d3e1ba
  defCodepage31 ::
    (Mascarpone.Symbol,
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Mascarpone.defCodepage33,
                  Mascarpone.defCodepage32
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
efd76fcaf42d63b7c5c47486f713c60e
  defCodepage32 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <L,1*U(U,U)><S,U>,
     Unfolding: (\ (s1 :: Mascarpone.ProgState)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.IO.Handle.Internals.wantReadableHandle_1
                        @ GHC.Types.Char
                        GHC.IO.Handle.Text.hGetChar3
                        GHC.IO.Handle.FD.stdin
                        GHC.IO.Handle.Text.hGetChar2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Char>_R))
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    (GHC.Tuple.(),
                     case s1 of wild { Mascarpone.State ds ds2 ->
                     Mascarpone.State
                       ds
                       (GHC.Types.:
                          @ Mascarpone.StackElem
                          (Mascarpone.Symb (Mascarpone.Chr ipv1))
                          ds2) }) #) }) -}
e8ea7a59f383284e03196221fb2c990a
  defCodepage33 :: Mascarpone.Symbol
  {- HasNoCafRefs,
     Unfolding: (Mascarpone.Chr Mascarpone.defCodepage34) -}
ba847c86d02eb7d2b9a81099a4739d86
  defCodepage34 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# ','#) -}
29231e2b4b2ca9ff66948d2f41c3e7e2
  defCodepage35 ::
    (Mascarpone.Symbol,
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Mascarpone.defCodepage37,
                  Mascarpone.defCodepage36
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
69c43466fd322edbeed433b55b49015d
  defCodepage36 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Mascarpone.$woutp ww1 ww2 w1 }) -}
a4b378ce3972ee7603033084dbce5a66
  defCodepage37 :: Mascarpone.Symbol
  {- HasNoCafRefs,
     Unfolding: (Mascarpone.Chr Mascarpone.defCodepage38) -}
ef665cecd0f83df9f83a5332a36cb578
  defCodepage38 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# '.'#) -}
01e2cb28a4bff5de514d54a11ae08a59
  defCodepage39 ::
    (Mascarpone.Symbol,
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- HasNoCafRefs,
     Unfolding: ((Mascarpone.defCodepage41,
                  Mascarpone.defCodepage40
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
5e2632e36db25cd2069e781aef4204c1
  defCodepage4 ::
    [(Mascarpone.Symbol,
      Control.Monad.Trans.State.Lazy.StateT
        Mascarpone.ProgState GHC.Types.IO ())]
  {- Unfolding: (GHC.Types.:
                   @ (Mascarpone.Symbol,
                      Control.Monad.Trans.State.Lazy.StateT
                        Mascarpone.ProgState GHC.Types.IO ())
                   Mascarpone.defCodepage73
                   Mascarpone.defCodepage5) -}
8b0692a610316ebdde44f41a95eff77e
  defCodepage40 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U(U,U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Mascarpone.$wquotesym ww1 ww2 w1 }) -}
c03f768a83b0443ced65eaac8eb53611
  defCodepage41 :: Mascarpone.Symbol
  {- HasNoCafRefs,
     Unfolding: (Mascarpone.Chr Mascarpone.defCodepage42) -}
e5841e44aee95f0b129be08e3cae3d18
  defCodepage42 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# '\''#) -}
258f755ccc694ee1bda7a6c9f076e330
  defCodepage43 ::
    (Mascarpone.Symbol,
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- HasNoCafRefs,
     Unfolding: ((Mascarpone.defCodepage44,
                  Mascarpone.deepquote1
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
5591e173bb77a6b6212b48a43c2ac9d4
  defCodepage44 :: Mascarpone.Symbol
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Mascarpone.Chr Mascarpone.defCodepage45) -}
024e2baaacdad84f4d744fa9eef29bef
  defCodepage45 :: GHC.Types.Char
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.C# '['#) -}
4aafbe4fdd71ba24be421bd339867522
  defCodepage46 ::
    (Mascarpone.Symbol,
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Mascarpone.defCodepage48,
                  Mascarpone.defCodepage47
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
3a26ae6a61160baf8d617f2f300df5d9
  defCodepage47 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Mascarpone.$wuniform ww1 ww2 w1 }) -}
d33981652db48481e3ed7c579153d863
  defCodepage48 :: Mascarpone.Symbol
  {- HasNoCafRefs,
     Unfolding: (Mascarpone.Chr Mascarpone.defCodepage49) -}
1c94bf6bc96745c2e5af83107d7afce8
  defCodepage49 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# '1'#) -}
e269f36111452790e58090dc47d7ac69
  defCodepage5 ::
    [(Mascarpone.Symbol,
      Control.Monad.Trans.State.Lazy.StateT
        Mascarpone.ProgState GHC.Types.IO ())]
  {- Unfolding: (GHC.Types.:
                   @ (Mascarpone.Symbol,
                      Control.Monad.Trans.State.Lazy.StateT
                        Mascarpone.ProgState GHC.Types.IO ())
                   Mascarpone.defCodepage69
                   Mascarpone.defCodepage6) -}
3141965852e1c092496949d594ed2fbf
  defCodepage50 :: (Mascarpone.Symbol, Mascarpone.Effect)
  {- Unfolding: ((Mascarpone.defCodepage52,
                  Mascarpone.defCodepage51
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
14df96e31977f77406958edccb52058a
  defCodepage51 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <L,1*U(U,U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta1 :: Mascarpone.ProgState)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     case eta1 of wild { Mascarpone.State ds ds1 ->
                     Mascarpone.State
                       ds
                       (GHC.Types.:
                          @ Mascarpone.StackElem
                          Mascarpone.defCodepage_x
                          ds1) }) #)) -}
ac79bb14a3d5be6f433ff398f87b71f7
  defCodepage52 :: Mascarpone.Symbol
  {- HasNoCafRefs,
     Unfolding: (Mascarpone.Chr Mascarpone.defCodepage53) -}
bbb0d0cd629db6bd475c03516a844a81
  defCodepage53 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# '0'#) -}
c85b03994fba77e721d82160c840b248
  defCodepage54 ::
    (Mascarpone.Symbol,
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Mascarpone.defCodepage57,
                  Mascarpone.defCodepage55
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
11a321648bea61d1e62819891df2db9d
  defCodepage55 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (s1 :: Mascarpone.ProgState)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case s1 of wild { Mascarpone.State ds ds1 ->
                 case ds1 of wild1 {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                ((), Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case x3 of wild2 {
                        DEFAULT
                        -> case Mascarpone.defCodepage56
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((), Mascarpone.ProgState) #)
                           of {}
                        Mascarpone.Op e
                        -> (e `cast`
                            (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N)
                              (Mascarpone.State ds xs))
                             `cast`
                           (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R)
                             s } } }) -}
4c9c11f2a5ba96d4bfa38dda2ac2b5c4
  defCodepage56 ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Strictness: x -}
58f5cce4814596e616eea3fb5b68e036
  defCodepage57 :: Mascarpone.Symbol
  {- HasNoCafRefs,
     Unfolding: (Mascarpone.Chr Mascarpone.defCodepage58) -}
d1d6bf8c28e6b8c8cbc0367ba74820a3
  defCodepage58 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# '!'#) -}
d391807a3c79bb48c2e7f9d9a798839c
  defCodepage59 ::
    (Mascarpone.Symbol,
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Mascarpone.defCodepage60,
                  Mascarpone.expand
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
b79f6113db7cdc2e180c25040402c39c
  defCodepage6 ::
    [(Mascarpone.Symbol,
      Control.Monad.Trans.State.Lazy.StateT
        Mascarpone.ProgState GHC.Types.IO ())]
  {- Unfolding: (GHC.Types.:
                   @ (Mascarpone.Symbol,
                      Control.Monad.Trans.State.Lazy.StateT
                        Mascarpone.ProgState GHC.Types.IO ())
                   Mascarpone.defCodepage65
                   Mascarpone.defCodepage7) -}
caeadfedd52517e8f2a6564ba0d75c02
  defCodepage60 :: Mascarpone.Symbol
  {- HasNoCafRefs,
     Unfolding: (Mascarpone.Chr Mascarpone.defCodepage61) -}
1ab40367e6e41e0dd93eb6a482a8d965
  defCodepage61 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# '@'#) -}
52f33ea3fe85df13de5cf5433d56768f
  defCodepage62 ::
    (Mascarpone.Symbol,
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Mascarpone.defCodepage63,
                  Mascarpone.create1
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
6195049b4dbcf0b5ca5fc13d5a60ea1e
  defCodepage63 :: Mascarpone.Symbol
  {- HasNoCafRefs,
     Unfolding: (Mascarpone.Chr Mascarpone.defCodepage64) -}
0a41e60111ecba14a0b912a26ccb731b
  defCodepage64 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# '*'#) -}
e7883596574585f525887690c019d16c
  defCodepage65 ::
    (Mascarpone.Symbol,
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Mascarpone.defCodepage67,
                  Mascarpone.defCodepage66
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
6cb8b1cd2c49ba65f6dabb974300dd8e
  defCodepage66 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Mascarpone.$wsetParent ww1 ww2 w1 }) -}
9515556cbf21643b20711597cf14ec7a
  defCodepage67 :: Mascarpone.Symbol
  {- HasNoCafRefs,
     Unfolding: (Mascarpone.Chr Mascarpone.defCodepage68) -}
0f6fdd936907771050eb7fac63a735be
  defCodepage68 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# '}'#) -}
8870e417f10179cb6f590e06cc9cb3ee
  defCodepage69 ::
    (Mascarpone.Symbol,
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Mascarpone.defCodepage71,
                  Mascarpone.defCodepage70
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
6eba4a60b9e64b801cbb7f261652ac64
  defCodepage7 ::
    [(Mascarpone.Symbol,
      Control.Monad.Trans.State.Lazy.StateT
        Mascarpone.ProgState GHC.Types.IO ())]
  {- Unfolding: (GHC.Types.:
                   @ (Mascarpone.Symbol,
                      Control.Monad.Trans.State.Lazy.StateT
                        Mascarpone.ProgState GHC.Types.IO ())
                   Mascarpone.defCodepage62
                   Mascarpone.defCodepage8) -}
bd23603c449cb9df53486ecae3aebeb2
  defCodepage70 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Mascarpone.$wgetParent ww1 ww2 w1 }) -}
6e5b6793bbbaffbb03b0904da09bd848
  defCodepage71 :: Mascarpone.Symbol
  {- HasNoCafRefs,
     Unfolding: (Mascarpone.Chr Mascarpone.defCodepage72) -}
3975edebf009196734fe583f2f029471
  defCodepage72 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# '{'#) -}
fc3578789caf5cd9284e703e40e46a86
  defCodepage73 ::
    (Mascarpone.Symbol,
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Mascarpone.defCodepage75,
                  Mascarpone.defCodepage74
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
6e697e2587ba113d8b3601cc52ba9615
  defCodepage74 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Mascarpone.$winstall ww1 ww2 w1 }) -}
37a1f6aeb129223ed7c8536b956d9499
  defCodepage75 :: Mascarpone.Symbol
  {- HasNoCafRefs,
     Unfolding: (Mascarpone.Chr Mascarpone.defCodepage76) -}
b383de7b762ee2e5f8242e8eff8c4a2a
  defCodepage76 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# '<'#) -}
64e5e1f21c3cd8ff2a42b243bd3bbf98
  defCodepage77 ::
    (Mascarpone.Symbol,
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Mascarpone.defCodepage79,
                  Mascarpone.defCodepage78
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
e5ba15093890ace025c35d5cd90eb15b
  defCodepage78 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Mascarpone.$wextract ww1 ww2 w1 }) -}
9a4cbaf7a84f0ba38a09bfc24825edab
  defCodepage79 :: Mascarpone.Symbol
  {- HasNoCafRefs,
     Unfolding: (Mascarpone.Chr Mascarpone.defCodepage80) -}
8e0763f24aeaed62984df056166737cf
  defCodepage8 ::
    [(Mascarpone.Symbol,
      Control.Monad.Trans.State.Lazy.StateT
        Mascarpone.ProgState GHC.Types.IO ())]
  {- Unfolding: (GHC.Types.:
                   @ (Mascarpone.Symbol,
                      Control.Monad.Trans.State.Lazy.StateT
                        Mascarpone.ProgState GHC.Types.IO ())
                   Mascarpone.defCodepage59
                   Mascarpone.defCodepage9) -}
005762e549d4060ac5e524321f2b0a3e
  defCodepage80 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# '>'#) -}
b3715ab5870ce4d1775cc5ce5dd475cb
  defCodepage81 ::
    (Mascarpone.Symbol,
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Mascarpone.defCodepage84,
                  Mascarpone.defCodepage82
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
792773464ccc0fa0d2579765f7405915
  defCodepage82 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(A,1*U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (s1 :: Mascarpone.ProgState)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case s1 of wild { Mascarpone.State ds ds1 ->
                 case ds1 of wild1 {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                ((), Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case x3 of wild2 {
                        DEFAULT
                        -> case Mascarpone.defCodepage83
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((), Mascarpone.ProgState) #)
                           of {}
                        Mascarpone.Intr i
                        -> (# s, (GHC.Tuple.(), Mascarpone.State i xs) #) } } }) -}
b67e3705a8d396de8f36749cd2355a9c
  defCodepage83 ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Strictness: x -}
027d48b69f93e7d0ea5571b268f4a958
  defCodepage84 :: Mascarpone.Symbol
  {- HasNoCafRefs,
     Unfolding: (Mascarpone.Chr Mascarpone.defCodepage85) -}
62de1a10b8a1cff90a92d22611cce152
  defCodepage85 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# '^'#) -}
954e50bd233f379f1c4e9832768b7719
  defCodepage86 ::
    (Mascarpone.Symbol,
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- HasNoCafRefs,
     Unfolding: ((Mascarpone.defCodepage88,
                  Mascarpone.defCodepage87
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
a0dd27181e6a034ca65c4bdae4185a54
  defCodepage87 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U,U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (s1 :: Mascarpone.ProgState)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     case s1 of wild { Mascarpone.State ds ds1 ->
                     Mascarpone.State
                       ds
                       (GHC.Types.:
                          @ Mascarpone.StackElem
                          (Mascarpone.Intr ds)
                          ds1) }) #)) -}
de9ea4877419cb8d033a54c115af9e16
  defCodepage88 :: Mascarpone.Symbol
  {- HasNoCafRefs,
     Unfolding: (Mascarpone.Chr Mascarpone.defCodepage89) -}
0bda3c06e72a72a974fae057afa5d0a4
  defCodepage89 :: GHC.Types.Char
  {- HasNoCafRefs, Unfolding: (GHC.Types.C# 'v'#) -}
d4b76a3f046949e57bd4f173ab7e893f
  defCodepage9 ::
    [(Mascarpone.Symbol,
      Control.Monad.Trans.State.Lazy.StateT
        Mascarpone.ProgState GHC.Types.IO ())]
  {- Unfolding: (GHC.Types.:
                   @ (Mascarpone.Symbol,
                      Control.Monad.Trans.State.Lazy.StateT
                        Mascarpone.ProgState GHC.Types.IO ())
                   Mascarpone.defCodepage54
                   Mascarpone.defCodepage10) -}
3b4e3b1fbb5d6762820c8ec61b66f5ac
  defCodepage_str :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   "Pattern match failure in do expression at app/Mascarpone.hs:147:3-6"#) -}
ca1ad62bc6d6a10b4e581d829d432ff1
  defCodepage_str1 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString#
                   "Pattern match failure in do expression at app/Mascarpone.hs:128:3-8"#) -}
e0b7deccbdef3ecae57f3b41206daff6
  defCodepage_x :: Mascarpone.StackElem
  {- Strictness: m3,
     Unfolding: (Mascarpone.Intr Mascarpone.nullInterpreter) -}
5d53e1fcaee091a6ad100b2452a837a5
  defaultInterpreter :: Mascarpone.Interpreter
  {- Strictness: m,
     Unfolding: (Mascarpone.Interpreter
                   Mascarpone.defCodepage
                   Mascarpone.nullInterpreter
                   Mascarpone.defaultInterpreter1
                     `cast`
                   (<Mascarpone.Symbol>_R
                    ->_R Trans
                             (<Mascarpone.ProgState>_R
                              ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                             (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                       <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N)))) -}
e9f375fede3917726d3759dacefc2d56
  defaultInterpreter1 ::
    Mascarpone.Symbol
    -> Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,A><L,U><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (ds :: Mascarpone.Symbol)
                   (eta :: Mascarpone.ProgState)
                   (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# eta1, (GHC.Tuple.(), eta) #)) -}
2fa658aa1dbeb7ffd5e9f5dc72ad649a
  deify ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(LS),1*U(A,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Mascarpone.defCodepage82
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
bd18b35a609ff18ecb44a240db680051
  dup ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, HasNoCafRefs, Strictness: <S(LS),1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Mascarpone.defCodepage28
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
e098dc3dfa787092ebce2fd2774dc07f
  expand :: a
  {- Strictness: x -}
2a53017aee03af5a059def1f6d52834e
  extract ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Mascarpone.defCodepage78
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
290ddfe0b357be0a3aadf21c7cd86f7d
  fallback ::
    Mascarpone.Interpreter -> Mascarpone.Symbol -> Mascarpone.Effect
  RecSel Left Mascarpone.Interpreter
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Mascarpone.Interpreter) ->
                 case ds of wild { Mascarpone.Interpreter ds1 ds2 ds3 -> ds3 }) -}
192f45795a76ac9983862bad1db4e386
  getParent ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Mascarpone.defCodepage70
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
10f94fec06e65cc6323f1576e0d6f098
  initialState :: Mascarpone.ProgState
  {- Strictness: m,
     Unfolding: (Mascarpone.State
                   Mascarpone.defaultInterpreter
                   (GHC.Types.[] @ Mascarpone.StackElem)) -}
6c7f811d803a937fdbeda3e87eeb52da
  install ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Mascarpone.defCodepage74
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
f615644c8d6773ae0551675aaae501ad
  interpret :: GHC.Base.String -> Mascarpone.Effect
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S,1*U><L,U(U(U,U,U),U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Mascarpone.interpret1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R Trans
                          (<Mascarpone.ProgState>_R
                           ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                          (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                    <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
469493a55616bb619682119c94352dee
  interpret1 ::
    GHC.Base.String
    -> Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S,1*U><L,U(U(U,U,U),U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (code :: GHC.Base.String)
                   (s1 :: Mascarpone.ProgState)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Mascarpone.interpret2
                   (case s1 of wild { Mascarpone.State ds ds1 -> ds })
                   code
                   s1
                   s) -}
3b6042cf554480834e61e97ec5700a88
  interpret2 ::
    Mascarpone.Interpreter
    -> GHC.Base.String
    -> Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><S,1*U><L,U(U(U,U,U),U)><S,U>, Inline: INLINE[0],
     Unfolding: InlineRule (4, True, True)
                (\ (w :: Mascarpone.Interpreter)
                   (w1 :: GHC.Base.String)
                   (w2 :: Mascarpone.ProgState)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 Mascarpone.create2 w1 w2 w3) -}
459a4c8b3a29c5d57d29d3a4ade8ffac
  interpretWith ::
    Mascarpone.Interpreter -> GHC.Base.String -> Mascarpone.Effect
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,A><S,1*U><L,U(U(U,U,U),U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Mascarpone.interpret2
                  `cast`
                (<Mascarpone.Interpreter>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Trans
                          (<Mascarpone.ProgState>_R
                           ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                          (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                    <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
496941bc8a643f26e777c1171a447162
  interpreter :: Mascarpone.ProgState -> Mascarpone.Interpreter
  RecSel Left Mascarpone.ProgState
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),1*U(1*U(U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Mascarpone.ProgState) ->
                 case ds of wild { Mascarpone.State ds1 ds2 -> ds1 }) -}
27e03714da3eeee3b7ca4af7c5cbaa9b
  nop ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Mascarpone.nop1
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
a56df87ae71845abb4b7e388fdecb481
  nop1 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta1 :: Mascarpone.ProgState)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, (GHC.Tuple.(), eta1) #)) -}
79c846b57db0de86da56cd43132edacd
  nullInterpreter :: Mascarpone.Interpreter
  {- Strictness: m -}
d1fa2e7e7b66e45e12530a1a03a27138
  nulli :: Mascarpone.Effect
  {- Arity: 2, Strictness: <L,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Mascarpone.defCodepage51
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
097d8a6cf79a84b7824d91a13fac4ca4
  outp ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Mascarpone.defCodepage36
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
6eaefd73c2661014f00eb0e8356c62e0
  parent :: Mascarpone.Interpreter -> Mascarpone.Interpreter
  RecSel Left Mascarpone.Interpreter
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSL),1*U(A,1*U(U,U,U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Mascarpone.Interpreter) ->
                 case ds of wild { Mascarpone.Interpreter ds1 ds2 ds3 -> ds2 }) -}
f2c2ed07df76b0085f2d647bad481f2c
  peek ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO Mascarpone.StackElem
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Mascarpone.peek1
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0]
                                    <(Mascarpone.StackElem, Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N
                               <GHC.Types.IO>_R
                               <Mascarpone.StackElem>_N))) -}
47d582c73d22b16d6510bfbd93de46ec
  peek1 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Mascarpone.StackElem, Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (s1 :: Mascarpone.ProgState)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case s1 of wild { Mascarpone.State ds ds1 ->
                 case ds1 of wild1 {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                (Mascarpone.StackElem, Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> (# s,
                         (x3,
                          Mascarpone.State
                            ds
                            (GHC.Types.: @ Mascarpone.StackElem x3 xs)) #) } }) -}
af1bf0f5d20e05315f4b4cbfd1e70225
  perform ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Mascarpone.defCodepage55
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
b5dde66c39274025ccbbf9337861b00a
  pop ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO Mascarpone.StackElem
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Mascarpone.pop1
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0]
                                    <(Mascarpone.StackElem, Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N
                               <GHC.Types.IO>_R
                               <Mascarpone.StackElem>_N))) -}
c21d7c1f15d7664efa7dfbb10a90054d
  pop' ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Mascarpone.defCodepage24
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
6749f8e44f68e1ca6761e9ecd54f4494
  pop1 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Mascarpone.StackElem, Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (s1 :: Mascarpone.ProgState)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case s1 of wild { Mascarpone.State ds ds1 ->
                 case ds1 of wild1 {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                (Mascarpone.StackElem, Mascarpone.ProgState) #)
                      of {}
                   : x3 xs -> (# s, (x3, Mascarpone.State ds xs) #) } }) -}
1cc4f4bb3b3aa26984ce6f13dc91ff1a
  pop2 ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState
      GHC.Types.IO
      (Mascarpone.StackElem, Mascarpone.StackElem)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Mascarpone.pop5
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0]
                                    <((Mascarpone.StackElem, Mascarpone.StackElem),
                                      Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N
                               <GHC.Types.IO>_R
                               <(Mascarpone.StackElem, Mascarpone.StackElem)>_N))) -}
9fd5e743ec620dc54bc7cf9cf7ea7269
  pop3 ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState
      GHC.Types.IO
      (Mascarpone.StackElem, Mascarpone.StackElem, Mascarpone.StackElem)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Mascarpone.pop6
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0]
                                    <((Mascarpone.StackElem, Mascarpone.StackElem,
                                       Mascarpone.StackElem),
                                      Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N
                               <GHC.Types.IO>_R
                               <(Mascarpone.StackElem, Mascarpone.StackElem,
                                 Mascarpone.StackElem)>_N))) -}
0ea2a4800f69083d9a0e7dccd5fd9a3f
  pop5 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((Mascarpone.StackElem, Mascarpone.StackElem),
           Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (s1 :: Mascarpone.ProgState)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case s1 of wild { Mascarpone.State ds ds1 ->
                 case ds1 of wild1 {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                ((Mascarpone.StackElem, Mascarpone.StackElem),
                                 Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case xs of wild2 {
                        []
                        -> case Mascarpone.create3
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((Mascarpone.StackElem, Mascarpone.StackElem),
                                      Mascarpone.ProgState) #)
                           of {}
                        : x4 xs1 -> (# s, ((x3, x4), Mascarpone.State ds xs1) #) } } }) -}
9db125bbd5655548df4273fdefc975eb
  pop6 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((Mascarpone.StackElem, Mascarpone.StackElem,
            Mascarpone.StackElem),
           Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Mascarpone.$wpop3 ww1 ww2 w1 }) -}
436661ec026b065a4e336be4fa67b69f
  popString ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO GHC.Base.String
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Mascarpone.popString1
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0]
                                    <(GHC.Base.String, Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <GHC.Base.String>_N))) -}
bb01b79ca1bbf2190fd09d6b7d3e744d
  popString1 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (GHC.Base.String, Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Mascarpone.$wpopString ww1 ww2 w1 }) -}
fa3d8a0c75fa250ca281cea1c4646665
  push :: Mascarpone.StackElem -> Mascarpone.Effect
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Mascarpone.push1
                  `cast`
                (<Mascarpone.StackElem>_R
                 ->_R Trans
                          (<Mascarpone.ProgState>_R
                           ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                          (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                    <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
abcbf4f0804e67252bc591efbd7ee7a3
  push1 ::
    Mascarpone.StackElem
    -> Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, HasNoCafRefs, Strictness: <L,U><L,1*U(U,U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (x3 :: Mascarpone.StackElem)
                   (eta1 :: Mascarpone.ProgState)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     case eta1 of wild { Mascarpone.State ds ds1 ->
                     Mascarpone.State
                       ds
                       (GHC.Types.: @ Mascarpone.StackElem x3 ds1) }) #)) -}
214ba67fee46286a9ebd9e1791d66d07
  quotesym ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Mascarpone.defCodepage40
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
54ce60a8931ccfbbc53a14b46ffbe334
  readInp ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, Strictness: <L,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Mascarpone.defCodepage32
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
9f0f33b1adf5f2bc53f5704e785dcfcf
  reify ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Mascarpone.defCodepage87
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
27d8fe3ce2af086b7c54036bf912071c
  run :: GHC.Base.String -> GHC.Types.IO ()
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Mascarpone.run1
                  `cast`
                (<GHC.Base.String>_R ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
67286e93d70249c8feb863e57a24cc48
  run1 ::
    GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (code :: GHC.Base.String)
                   (eta2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Mascarpone.interpret2
                        Mascarpone.defaultInterpreter
                        code
                        Mascarpone.initialState
                        eta2 of ds { (#,#) ipv ipv1 ->
                 (# ipv, GHC.Tuple.() #) }) -}
f05220701dd8574178397558617f63af
  setParent ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Mascarpone.defCodepage66
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
ba36676c78379a18264d96451fad5f0b
  stack :: Mascarpone.ProgState -> [Mascarpone.StackElem]
  RecSel Left Mascarpone.ProgState
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Mascarpone.ProgState) ->
                 case ds of wild { Mascarpone.State ds1 ds2 -> ds2 }) -}
cadb2856974a039860ffd08704714e40
  swap ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, HasNoCafRefs, Strictness: <S(LS),1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Mascarpone.defCodepage20
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
bfa779e935bb9c72ecf85b512a005a78
  uniform ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Mascarpone.defCodepage47
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
instance [safe] GHC.Classes.Eq [Mascarpone.Symbol]
  = Mascarpone.$fEqSymbol
instance [safe] GHC.Classes.Ord [Mascarpone.Symbol]
  = Mascarpone.$fOrdSymbol
"SPEC/Mascarpone fromList @ Symbol _" [ALWAYS] forall @ a
                                                      ($dOrd :: GHC.Classes.Ord Mascarpone.Symbol)
  Data.Map.Base.fromList @ Mascarpone.Symbol @ a $dOrd
  = Mascarpone.$sfromList @ a
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

