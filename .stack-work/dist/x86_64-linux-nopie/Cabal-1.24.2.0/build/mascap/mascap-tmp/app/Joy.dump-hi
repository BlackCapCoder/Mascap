
==================== FINAL INTERFACE ====================
2017-08-18 20:24:43.119523031 UTC

interface main@main:Joy 8002
  interface hash: 4beb9ef03de71ebf15a5ced585e0b011
  ABI hash: 87bf097aad6a0006dbf92f39e8f100d3
  export-list hash: 07c4fd35b2dd0dd87dedd670449a7c82
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 65748ac5a3dff63306110c433e0d7a9d
  sig of: Nothing
  used TH splices: False
  where
exports:
  Joy.joyInterp
  Joy.joy_abort
  Joy.joy_abs
  Joy.joy_add
  Joy.joy_all
  Joy.joy_and
  Joy.joy_app1
  Joy.joy_app11
  Joy.joy_app12
  Joy.joy_app2
  Joy.joy_app3
  Joy.joy_app4
  Joy.joy_argc
  Joy.joy_argv
  Joy.joy_asin
  Joy.joy_at
  Joy.joy_atan
  Joy.joy_atan2
  Joy.joy_autoput
  Joy.joy_binary
  Joy.joy_binrec
  Joy.joy_body
  Joy.joy_branch
  Joy.joy_case
  Joy.joy_ceil
  Joy.joy_char
  Joy.joy_choice
  Joy.joy_chr
  Joy.joy_cleave
  Joy.joy_clock
  Joy.joy_compare
  Joy.joy_concat
  Joy.joy_cond
  Joy.joy_condlinrec
  Joy.joy_cons
  Joy.joy_construct
  Joy.joy_conts
  Joy.joy_cos
  Joy.joy_cosh
  Joy.joy_dip
  Joy.joy_div
  Joy.joy_div'
  Joy.joy_drop
  Joy.joy_dup
  Joy.joy_dupd
  Joy.joy_echo
  Joy.joy_enconcat
  Joy.joy_eq
  Joy.joy_equal
  Joy.joy_exp
  Joy.joy_false
  Joy.joy_fclose
  Joy.joy_feof
  Joy.joy_ferror
  Joy.joy_fflush
  Joy.joy_fgetch
  Joy.joy_fgets
  Joy.joy_file
  Joy.joy_filter
  Joy.joy_first
  Joy.joy_float
  Joy.joy_floor
  Joy.joy_fold
  Joy.joy_fopen
  Joy.joy_format
  Joy.joy_formatf
  Joy.joy_fput
  Joy.joy_fputch
  Joy.joy_fputchars
  Joy.joy_fputstring
  Joy.joy_fread
  Joy.joy_fremove
  Joy.joy_frename
  Joy.joy_frexp
  Joy.joy_fseek
  Joy.joy_ftell
  Joy.joy_fwrite
  Joy.joy_gc
  Joy.joy_genrec
  Joy.joy_geq
  Joy.joy_get
  Joy.joy_getenv
  Joy.joy_gmtime
  Joy.joy_gt
  Joy.joy_has
  Joy.joy_help
  Joy.joy_helpdetail
  Joy.joy_i
  Joy.joy_id
  Joy.joy_ifchar
  Joy.joy_iffile
  Joy.joy_iffloat
  Joy.joy_ifinteger
  Joy.joy_iflist
  Joy.joy_iflogical
  Joy.joy_ifset
  Joy.joy_ifstring
  Joy.joy_ifte
  Joy.joy_in
  Joy.joy_include
  Joy.joy_infra
  Joy.joy_integer
  Joy.joy_intern
  Joy.joy_ldexp
  Joy.joy_leaf
  Joy.joy_leq
  Joy.joy_linrec
  Joy.joy_list
  Joy.joy_localtime
  Joy.joy_log
  Joy.joy_log10
  Joy.joy_logical
  Joy.joy_lt
  Joy.joy_manual
  Joy.joy_map
  Joy.joy_max
  Joy.joy_maxint
  Joy.joy_min
  Joy.joy_mktime
  Joy.joy_modf
  Joy.joy_mul
  Joy.joy_name
  Joy.joy_neg
  Joy.joy_neq
  Joy.joy_not
  Joy.joy_null
  Joy.joy_nullary
  Joy.joy_of
  Joy.joy_opcase
  Joy.joy_or
  Joy.joy_ord
  Joy.joy_pop
  Joy.joy_popd
  Joy.joy_pow
  Joy.joy_pred
  Joy.joy_primrec
  Joy.joy_put
  Joy.joy_putch
  Joy.joy_putchars
  Joy.joy_quit
  Joy.joy_rand
  Joy.joy_rem
  Joy.joy_rest
  Joy.joy_rolldown
  Joy.joy_rolldownd
  Joy.joy_rollup
  Joy.joy_rollupd
  Joy.joy_rotate
  Joy.joy_rotated
  Joy.joy_set
  Joy.joy_setautoput
  Joy.joy_setecho
  Joy.joy_setsize
  Joy.joy_setundeferror
  Joy.joy_sign
  Joy.joy_sin
  Joy.joy_sinh
  Joy.joy_size
  Joy.joy_small
  Joy.joy_some
  Joy.joy_split
  Joy.joy_sqrt
  Joy.joy_srand
  Joy.joy_stack
  Joy.joy_stderr
  Joy.joy_stdin
  Joy.joy_stdout
  Joy.joy_step
  Joy.joy_strftime
  Joy.joy_string
  Joy.joy_strtod
  Joy.joy_strtol
  Joy.joy_sub
  Joy.joy_succ
  Joy.joy_swap
  Joy.joy_swapd
  Joy.joy_swons
  Joy.joy_system
  Joy.joy_tailrec
  Joy.joy_take
  Joy.joy_tan
  Joy.joy_tanh
  Joy.joy_ternary
  Joy.joy_time
  Joy.joy_times
  Joy.joy_treegenrec
  Joy.joy_treerec
  Joy.joy_treestep
  Joy.joy_true
  Joy.joy_trunc
  Joy.joy_unary
  Joy.joy_unary2
  Joy.joy_unary3
  Joy.joy_unary4
  Joy.joy_uncons
  Joy.joy_undeferror
  Joy.joy_undefs
  Joy.joy_unstack
  Joy.joy_unswons
  Joy.joy_user
  Joy.joy_while
  Joy.joy_x
  Joy.joy_xor
  Joy.num
  Joy.num'
  Joy.popBool
  Joy.popOp
  Joy.pushN
  Joy.wordSyn
module dependencies: Mascarpone Prefix
package dependencies: array-0.5.1.1@array-0.5.1.1 base-4.9.1.0
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1 mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6
                      transformers-0.5.2.0@transformers-0.5.2.0
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         transformers-0.5.2.0@transformers-0.5.2.0:Control.Monad.Trans.Error
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
import  -/  base-4.9.1.0:Control.Arrow 70754b538e7d75521cd68162917b6946
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:Control.Monad.IO.Class 1a4384f66ee999caf5366398edb6ca7b
import  -/  base-4.9.1.0:Data.Char 01433d23661edb6e5ef1536ef1e6774c
import  -/  base-4.9.1.0:Data.Fixed b80105ba94244c515fc7e741d2a7c501
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.Functor 5ab1dc703df5b482e77efb697833ca3c
import  -/  base-4.9.1.0:Data.List 07ae2acca6538aa0800bd0a993ac6ac1
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Char 9d27e5fcb214fa9fb17cf295b3795fce
import  -/  base-4.9.1.0:GHC.Err 3bba35a16538d33d424682ce66876cdd
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Real 82e4e59051a13dba1da63e1e970a69e6
import  -/  base-4.9.1.0:GHC.Unicode a175ecf20bf1272d9ae31337e7da43ab
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.Exit 068ba078eb20417d7af66db8b8ab4db1
import  -/  base-4.9.1.0:Text.Read 75c59863e882ebaec4532e9465e2ee9b
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map 20d4ffbee41965d03d6a989425473dc4
import  -/  ghc-prim-0.5.0.0:GHC.Classes 0bdf3d057a415ec1b84a7b1994efbe47
import  -/  Mascarpone 451cd48164f9e5a8705f4e988dbde3e7
  exports: 3f0f8a810f536ddcbf15f5b82e0c9b44
  Chr 4bebd4a5a2d677576eb042b026624038
  Interpreter 399d47d0253de537ec0385742e458ee9
  Num 492d96dce9a02fcd538c18cb85aceb6a
  Op be4f9616ae1d96206119bf92f0cd607e
  Symb 43a2d0d8d29abc56eadff8fc0dd37655
  defaultInterpreter 29674f998dcc9d47a3e9e2e6903078cd
  dup a431319780bab1a7d37bba9d5d48e95e
  interpretWith abe80f41c94409b124fc0abce2fc0af2
  interpreter 34e44a641a1faf9f93848280dc8859d0
  nop 68fd7b798885c156d5a9e827050b120a
  peek 60e320584869dcb4933d8d1a1f2a95ec
  pop 7ce89f93fc8d9027738743e1a4faa691
  pop2 18b2afc2a7330df00093046ff003a10c
  pop3 9ea13241f213ca858c08da77a8865863
  pop4 a0dede35f021828b70f491723996f2af
  popString ade597ae8d703b8b3bf85b6acd416b90
  push b08ba255272e87a51829970e221cf8fe
  swap c313903b978d6f85465c43afe2da9fc2
import  -/  Prefix 9669be8c4d0be4735ca533903f1722e0
  exports: 5ce9e9533c70b2312070611404cf471b
  fromList e950b7a12a1fcd4d442f4b09c17d1442
  toInterp 9655695fe5d41a0e75dc95c27de30794
import  -/  mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6:Control.Monad.State 749dca8ca0e6625b32091d445bd92b01
import  -/  mtl-2.2.1@mtl-2.2.1-BLKBelFsPB3BoFeSWSOYj6:Control.Monad.State.Class 6d31234b0a911b56412061943d18b89e
becede5aeee33fa2d943309b0adf298a
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Joy.$trModule2 Joy.$trModule1) -}
0ee2b8048f22b8a30713ddf39a41dd6e
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Joy"#) -}
491be8d6e2fab92d614590d544897839
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
63097872b4a899cc4f0874887399f7ef
  $wjoy_abs ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Mascarpone.Interpreter)
                   (ww1 :: [Mascarpone.StackElem])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ww1 of wild1 {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                ((), Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case x3 of wild {
                        DEFAULT
                        -> case Joy.joyInterp623
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((), Mascarpone.ProgState) #)
                           of {}
                        Mascarpone.Symb ds
                        -> case ds of wild2 {
                             Mascarpone.Chr ipv
                             -> case Joy.joyInterp623
                                ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                          ((), Mascarpone.ProgState) #)
                                of {}
                             Mascarpone.Num a
                             -> (# w,
                                   (GHC.Tuple.(),
                                    Mascarpone.State
                                      ww
                                      (GHC.Types.:
                                         @ Mascarpone.StackElem
                                         (Mascarpone.Symb
                                            (Mascarpone.Num
                                               (case a of wild3 { GHC.Types.D# x1 ->
                                                case GHC.Prim.tagToEnum#
                                                       @ GHC.Types.Bool
                                                       (GHC.Prim.==## x1 0.0##) of wild4 {
                                                  GHC.Types.False
                                                  -> case GHC.Prim.tagToEnum#
                                                            @ GHC.Types.Bool
                                                            (GHC.Prim.>## x1 0.0##) of wild5 {
                                                       GHC.Types.False
                                                       -> GHC.Types.D# (GHC.Prim.negateDouble# x1)
                                                       GHC.Types.True -> wild3 }
                                                  GHC.Types.True
                                                  -> GHC.Float.rationalToDouble4 } })))
                                         xs)) #) } } }) -}
a66294ccced1c5c3736b8e68e04aa1b5
  $wjoy_add ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Mascarpone.Interpreter)
                   (ww1 :: [Mascarpone.StackElem])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ww1 of wild1 {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                ((), Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case xs of wild2 {
                        []
                        -> case Mascarpone.create3
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((), Mascarpone.ProgState) #)
                           of {}
                        : x4 xs1
                        -> case x3 of wild {
                             DEFAULT
                             -> case Joy.joyInterp645
                                ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                          ((), Mascarpone.ProgState) #)
                                of {}
                             Mascarpone.Symb ds
                             -> case ds of wild4 {
                                  Mascarpone.Chr ipv
                                  -> case Joy.joyInterp645
                                     ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                               ((), Mascarpone.ProgState) #)
                                     of {}
                                  Mascarpone.Num a
                                  -> case x4 of wild5 {
                                       DEFAULT
                                       -> case Joy.joyInterp645
                                          ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                    ((), Mascarpone.ProgState) #)
                                          of {}
                                       Mascarpone.Symb ds1
                                       -> case ds1 of wild6 {
                                            Mascarpone.Chr ipv
                                            -> case Joy.joyInterp645
                                               ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                         ((), Mascarpone.ProgState) #)
                                               of {}
                                            Mascarpone.Num b
                                            -> (# w,
                                                  (GHC.Tuple.(),
                                                   Mascarpone.State
                                                     ww
                                                     (GHC.Types.:
                                                        @ Mascarpone.StackElem
                                                        (Mascarpone.Symb
                                                           (Mascarpone.Num
                                                              (case a of wild7 { GHC.Types.D# x ->
                                                               case b of wild8 { GHC.Types.D# y ->
                                                               GHC.Types.D#
                                                                 (GHC.Prim.+## x y) } })))
                                                        xs1)) #) } } } } } }) -}
6585cec5e2d2e736eebf7babd93d827e
  $wjoy_choice ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Mascarpone.Interpreter)
                   (ww1 :: [Mascarpone.StackElem])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ww1 of wild1 {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                ((), Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case x3 of wild {
                        DEFAULT
                        -> case xs of wild2 {
                             []
                             -> case Mascarpone.create3
                                ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                          ((), Mascarpone.ProgState) #)
                                of {}
                             : x1 xs1
                             -> case xs1 of wild3 {
                                  []
                                  -> case Mascarpone.create3
                                     ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                               ((), Mascarpone.ProgState) #)
                                     of {}
                                  : x4 xs2
                                  -> (# w,
                                        (GHC.Tuple.(),
                                         Mascarpone.State
                                           ww
                                           (GHC.Types.: @ Mascarpone.StackElem x1 xs2)) #) } }
                        Mascarpone.Symb ds
                        -> case ds of wild2 {
                             Mascarpone.Chr ipv
                             -> case xs of wild3 {
                                  []
                                  -> case Mascarpone.create3
                                     ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                               ((), Mascarpone.ProgState) #)
                                     of {}
                                  : x1 xs1
                                  -> case xs1 of wild4 {
                                       []
                                       -> case Mascarpone.create3
                                          ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                    ((), Mascarpone.ProgState) #)
                                          of {}
                                       : x4 xs2
                                       -> (# w,
                                             (GHC.Tuple.(),
                                              Mascarpone.State
                                                ww
                                                (GHC.Types.: @ Mascarpone.StackElem x1 xs2)) #) } }
                             Mascarpone.Num ds1
                             -> case ds1 of wild3 { GHC.Types.D# x ->
                                case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==## x 0.0##) of wild4 {
                                  GHC.Types.False
                                  -> case xs of wild5 {
                                       []
                                       -> case Mascarpone.create3
                                          ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                    ((), Mascarpone.ProgState) #)
                                          of {}
                                       : x1 xs1
                                       -> case xs1 of wild6 {
                                            []
                                            -> case Mascarpone.create3
                                               ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                         ((), Mascarpone.ProgState) #)
                                               of {}
                                            : x4 xs2
                                            -> (# w,
                                                  (GHC.Tuple.(),
                                                   Mascarpone.State
                                                     ww
                                                     (GHC.Types.:
                                                        @ Mascarpone.StackElem
                                                        x1
                                                        xs2)) #) } }
                                  GHC.Types.True
                                  -> case xs of wild5 {
                                       []
                                       -> case Mascarpone.create3
                                          ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                    ((), Mascarpone.ProgState) #)
                                          of {}
                                       : x1 xs1
                                       -> case xs1 of wild6 {
                                            []
                                            -> case Mascarpone.create3
                                               ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                         ((), Mascarpone.ProgState) #)
                                               of {}
                                            : x4 xs2
                                            -> (# w,
                                                  (GHC.Tuple.(),
                                                   Mascarpone.State ww wild6) #) } } } } } } }) -}
141b71f3271212c209ab4c0aecd4ac8a
  $wjoy_chr ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Mascarpone.Interpreter)
                   (ww1 :: [Mascarpone.StackElem])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ww1 of wild1 {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                ((), Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case x3 of wild {
                        DEFAULT
                        -> case Joy.joyInterp572
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((), Mascarpone.ProgState) #)
                           of {}
                        Mascarpone.Symb ds
                        -> case ds of wild2 {
                             Mascarpone.Chr ipv
                             -> case Joy.joyInterp572
                                ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                          ((), Mascarpone.ProgState) #)
                                of {}
                             Mascarpone.Num a
                             -> (# w,
                                   (GHC.Tuple.(),
                                    Mascarpone.State
                                      ww
                                      (GHC.Types.:
                                         @ Mascarpone.StackElem
                                         (Mascarpone.Symb
                                            (Mascarpone.Chr
                                               (case a of wild3 { GHC.Types.D# x ->
                                                let {
                                                  n :: GHC.Prim.Int# = GHC.Prim.double2Int# x
                                                } in
                                                case GHC.Prim.tagToEnum#
                                                       @ GHC.Types.Bool
                                                       (GHC.Prim.<##
                                                          x
                                                          (GHC.Prim.int2Double# n)) of wild4 {
                                                  GHC.Types.False
                                                  -> case GHC.Prim.tagToEnum#
                                                            @ GHC.Types.Bool
                                                            (GHC.Prim.leWord#
                                                               (GHC.Prim.int2Word# n)
                                                               1114111##) of wild5 {
                                                       GHC.Types.False -> GHC.Char.chr2 n
                                                       GHC.Types.True
                                                       -> GHC.Types.C# (GHC.Prim.chr# n) }
                                                  GHC.Types.True
                                                  -> let {
                                                       i# :: GHC.Prim.Int# = GHC.Prim.-# n 1#
                                                     } in
                                                     case GHC.Prim.tagToEnum#
                                                            @ GHC.Types.Bool
                                                            (GHC.Prim.leWord#
                                                               (GHC.Prim.int2Word# i#)
                                                               1114111##) of wild5 {
                                                       GHC.Types.False -> GHC.Char.chr2 i#
                                                       GHC.Types.True
                                                       -> GHC.Types.C# (GHC.Prim.chr# i#) } } })))
                                         xs)) #) } } }) -}
4df577c4247e16f34ec0f6d238a059b9
  $wjoy_div ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Mascarpone.Interpreter)
                   (ww1 :: [Mascarpone.StackElem])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ww1 of wild1 {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                ((), Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case xs of wild2 {
                        []
                        -> case Mascarpone.create3
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((), Mascarpone.ProgState) #)
                           of {}
                        : x4 xs1
                        -> case x3 of wild {
                             DEFAULT
                             -> case Joy.joyInterp637
                                ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                          ((), Mascarpone.ProgState) #)
                                of {}
                             Mascarpone.Symb ds
                             -> case ds of wild4 {
                                  Mascarpone.Chr ipv
                                  -> case Joy.joyInterp637
                                     ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                               ((), Mascarpone.ProgState) #)
                                     of {}
                                  Mascarpone.Num a
                                  -> case x4 of wild5 {
                                       DEFAULT
                                       -> case Joy.joyInterp637
                                          ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                    ((), Mascarpone.ProgState) #)
                                          of {}
                                       Mascarpone.Symb ds1
                                       -> case ds1 of wild6 {
                                            Mascarpone.Chr ipv
                                            -> case Joy.joyInterp637
                                               ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                         ((), Mascarpone.ProgState) #)
                                               of {}
                                            Mascarpone.Num b
                                            -> (# w,
                                                  (GHC.Tuple.(),
                                                   Mascarpone.State
                                                     ww
                                                     (GHC.Types.:
                                                        @ Mascarpone.StackElem
                                                        (Mascarpone.Symb
                                                           (Mascarpone.Num
                                                              (case a of wild7 { GHC.Types.D# x ->
                                                               case b of wild8 { GHC.Types.D# y ->
                                                               case GHC.Prim./##
                                                                      x
                                                                      y of wild9 { DEFAULT ->
                                                               GHC.Types.D# wild9 } } })))
                                                        xs1)) #) } } } } } }) -}
83d50e026b921e010487113dc7a248b5
  $wjoy_dupd ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Mascarpone.Interpreter)
                   (ww1 :: [Mascarpone.StackElem])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ww1 of wild1 {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                ((), Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case xs of wild2 {
                        []
                        -> case Mascarpone.create3
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((), Mascarpone.ProgState) #)
                           of {}
                        : x4 xs1
                        -> Joy.joyInterp538
                             (GHC.List.reverse1
                                @ Mascarpone.StackElem
                                (GHC.Types.:
                                   @ Mascarpone.StackElem
                                   x3
                                   (GHC.Types.:
                                      @ Mascarpone.StackElem
                                      x3
                                      (GHC.Types.:
                                         @ Mascarpone.StackElem
                                         x4
                                         (GHC.Types.[] @ Mascarpone.StackElem))))
                                (GHC.Types.[] @ Mascarpone.StackElem))
                             (Mascarpone.State ww xs1)
                             w } }) -}
614a86eb03e262ffcee243d52ef265ad
  $wjoy_mul ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Mascarpone.Interpreter)
                   (ww1 :: [Mascarpone.StackElem])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ww1 of wild1 {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                ((), Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case xs of wild2 {
                        []
                        -> case Mascarpone.create3
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((), Mascarpone.ProgState) #)
                           of {}
                        : x4 xs1
                        -> case x3 of wild {
                             DEFAULT
                             -> case Joy.joyInterp649
                                ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                          ((), Mascarpone.ProgState) #)
                                of {}
                             Mascarpone.Symb ds
                             -> case ds of wild4 {
                                  Mascarpone.Chr ipv
                                  -> case Joy.joyInterp649
                                     ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                               ((), Mascarpone.ProgState) #)
                                     of {}
                                  Mascarpone.Num a
                                  -> case x4 of wild5 {
                                       DEFAULT
                                       -> case Joy.joyInterp649
                                          ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                    ((), Mascarpone.ProgState) #)
                                          of {}
                                       Mascarpone.Symb ds1
                                       -> case ds1 of wild6 {
                                            Mascarpone.Chr ipv
                                            -> case Joy.joyInterp649
                                               ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                         ((), Mascarpone.ProgState) #)
                                               of {}
                                            Mascarpone.Num b
                                            -> (# w,
                                                  (GHC.Tuple.(),
                                                   Mascarpone.State
                                                     ww
                                                     (GHC.Types.:
                                                        @ Mascarpone.StackElem
                                                        (Mascarpone.Symb
                                                           (Mascarpone.Num
                                                              (case a of wild7 { GHC.Types.D# x ->
                                                               case b of wild8 { GHC.Types.D# y ->
                                                               GHC.Types.D#
                                                                 (GHC.Prim.*## x y) } })))
                                                        xs1)) #) } } } } } }) -}
c8fc225953c1813ce09b8fc796439d75
  $wjoy_neg ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Mascarpone.Interpreter)
                   (ww1 :: [Mascarpone.StackElem])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ww1 of wild1 {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                ((), Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case x3 of wild {
                        DEFAULT
                        -> case Joy.joyInterp386
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((), Mascarpone.ProgState) #)
                           of {}
                        Mascarpone.Symb ds
                        -> case ds of wild2 {
                             Mascarpone.Chr ipv
                             -> case Joy.joyInterp386
                                ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                          ((), Mascarpone.ProgState) #)
                                of {}
                             Mascarpone.Num a
                             -> (# w,
                                   (GHC.Tuple.(),
                                    Mascarpone.State
                                      ww
                                      (GHC.Types.:
                                         @ Mascarpone.StackElem
                                         (Mascarpone.Symb
                                            (Mascarpone.Num
                                               (case a of wild3 { GHC.Types.D# x ->
                                                GHC.Types.D# (GHC.Prim.negateDouble# x) })))
                                         xs)) #) } } }) -}
20a1750156e1ebf3695a117ad451eb38
  $wjoy_ord ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Mascarpone.Interpreter)
                   (ww1 :: [Mascarpone.StackElem])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ww1 of wild1 {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                ((), Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case x3 of wild {
                        DEFAULT
                        -> case Joy.joyInterp370
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((), Mascarpone.ProgState) #)
                           of {}
                        Mascarpone.Symb ds
                        -> case ds of wild2 {
                             Mascarpone.Chr a
                             -> (# w,
                                   (GHC.Tuple.(),
                                    Mascarpone.State
                                      ww
                                      (GHC.Types.:
                                         @ Mascarpone.StackElem
                                         (Mascarpone.Symb
                                            (Mascarpone.Num
                                               (case a of wild3 { GHC.Types.C# c# ->
                                                GHC.Types.D#
                                                  (GHC.Prim.int2Double# (GHC.Prim.ord# c#)) })))
                                         xs)) #)
                             Mascarpone.Num ipv
                             -> case Joy.joyInterp370
                                ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                          ((), Mascarpone.ProgState) #)
                                of {} } } }) -}
7179ff57eabffbd778aa595747bb2c1b
  $wjoy_rem ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Mascarpone.Interpreter)
                   (ww1 :: [Mascarpone.StackElem])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ww1 of wild1 {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                ((), Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case xs of wild2 {
                        []
                        -> case Mascarpone.create3
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((), Mascarpone.ProgState) #)
                           of {}
                        : x4 xs1
                        -> case x3 of wild {
                             DEFAULT
                             -> case Joy.joyInterp343
                                ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                          ((), Mascarpone.ProgState) #)
                                of {}
                             Mascarpone.Symb ds
                             -> case ds of wild4 {
                                  Mascarpone.Chr ipv
                                  -> case Joy.joyInterp343
                                     ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                               ((), Mascarpone.ProgState) #)
                                     of {}
                                  Mascarpone.Num a
                                  -> case x4 of wild5 {
                                       DEFAULT
                                       -> case Joy.joyInterp343
                                          ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                    ((), Mascarpone.ProgState) #)
                                          of {}
                                       Mascarpone.Symb ds1
                                       -> case ds1 of wild6 {
                                            Mascarpone.Chr ipv
                                            -> case Joy.joyInterp343
                                               ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                         ((), Mascarpone.ProgState) #)
                                               of {}
                                            Mascarpone.Num b
                                            -> (# w,
                                                  (GHC.Tuple.(),
                                                   Mascarpone.State
                                                     ww
                                                     (GHC.Types.:
                                                        @ Mascarpone.StackElem
                                                        (Mascarpone.Symb
                                                           (Mascarpone.Num
                                                              (Data.Fixed.mod'
                                                                 @ GHC.Types.Double
                                                                 GHC.Float.$fRealDouble
                                                                 a
                                                                 b)))
                                                        xs1)) #) } } } } } }) -}
2be48ccdf8a46f7ae9245648dbf1ee84
  $wjoy_rolldown ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Mascarpone.Interpreter)
                   (ww1 :: [Mascarpone.StackElem])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ww1 of wild {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                ((), Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case xs of wild1 {
                        []
                        -> case Mascarpone.create3
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((), Mascarpone.ProgState) #)
                           of {}
                        : x4 xs1
                        -> case xs1 of wild2 {
                             []
                             -> case Mascarpone.create3
                                ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                          ((), Mascarpone.ProgState) #)
                                of {}
                             : x5 xs2
                             -> Joy.joyInterp337
                                  (GHC.List.reverse1
                                     @ Mascarpone.StackElem
                                     (GHC.Types.:
                                        @ Mascarpone.StackElem
                                        x4
                                        (GHC.Types.:
                                           @ Mascarpone.StackElem
                                           x5
                                           (GHC.Types.:
                                              @ Mascarpone.StackElem
                                              x3
                                              (GHC.Types.[] @ Mascarpone.StackElem))))
                                     (GHC.Types.[] @ Mascarpone.StackElem))
                                  (Mascarpone.State ww xs2)
                                  w } } }) -}
9818a269bbc746a90989e1ab90d14806
  $wjoy_rolldownd ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Mascarpone.Interpreter)
                   (ww1 :: [Mascarpone.StackElem])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ww1 of wild {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                ((), Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case xs of wild1 {
                        []
                        -> case Mascarpone.create3
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((), Mascarpone.ProgState) #)
                           of {}
                        : x4 xs1
                        -> case xs1 of wild2 {
                             []
                             -> case Mascarpone.create3
                                ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                          ((), Mascarpone.ProgState) #)
                                of {}
                             : x5 xs2
                             -> case xs2 of wild3 {
                                  []
                                  -> case Mascarpone.create3
                                     ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                               ((), Mascarpone.ProgState) #)
                                     of {}
                                  : x6 xs3
                                  -> Joy.joyInterp333
                                       (GHC.List.reverse1
                                          @ Mascarpone.StackElem
                                          (GHC.Types.:
                                             @ Mascarpone.StackElem
                                             x4
                                             (GHC.Types.:
                                                @ Mascarpone.StackElem
                                                x5
                                                (GHC.Types.:
                                                   @ Mascarpone.StackElem
                                                   x3
                                                   (GHC.Types.:
                                                      @ Mascarpone.StackElem
                                                      x6
                                                      (GHC.Types.[] @ Mascarpone.StackElem)))))
                                          (GHC.Types.[] @ Mascarpone.StackElem))
                                       (Mascarpone.State ww xs3)
                                       w } } } }) -}
841e24d0f5440a5c35409eb24573f4fa
  $wjoy_rollup ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Mascarpone.Interpreter)
                   (ww1 :: [Mascarpone.StackElem])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ww1 of wild {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                ((), Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case xs of wild1 {
                        []
                        -> case Mascarpone.create3
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((), Mascarpone.ProgState) #)
                           of {}
                        : x4 xs1
                        -> case xs1 of wild2 {
                             []
                             -> case Mascarpone.create3
                                ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                          ((), Mascarpone.ProgState) #)
                                of {}
                             : x5 xs2
                             -> Joy.joyInterp329
                                  (GHC.List.reverse1
                                     @ Mascarpone.StackElem
                                     (GHC.Types.:
                                        @ Mascarpone.StackElem
                                        x5
                                        (GHC.Types.:
                                           @ Mascarpone.StackElem
                                           x3
                                           (GHC.Types.:
                                              @ Mascarpone.StackElem
                                              x4
                                              (GHC.Types.[] @ Mascarpone.StackElem))))
                                     (GHC.Types.[] @ Mascarpone.StackElem))
                                  (Mascarpone.State ww xs2)
                                  w } } }) -}
ac08bd4a556f0cb31a7819982bf93e90
  $wjoy_rollupd ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Mascarpone.Interpreter)
                   (ww1 :: [Mascarpone.StackElem])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ww1 of wild {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                ((), Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case xs of wild1 {
                        []
                        -> case Mascarpone.create3
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((), Mascarpone.ProgState) #)
                           of {}
                        : x4 xs1
                        -> case xs1 of wild2 {
                             []
                             -> case Mascarpone.create3
                                ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                          ((), Mascarpone.ProgState) #)
                                of {}
                             : x5 xs2
                             -> case xs2 of wild3 {
                                  []
                                  -> case Mascarpone.create3
                                     ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                               ((), Mascarpone.ProgState) #)
                                     of {}
                                  : x6 xs3
                                  -> Joy.joyInterp325
                                       (GHC.List.reverse1
                                          @ Mascarpone.StackElem
                                          (GHC.Types.:
                                             @ Mascarpone.StackElem
                                             x5
                                             (GHC.Types.:
                                                @ Mascarpone.StackElem
                                                x3
                                                (GHC.Types.:
                                                   @ Mascarpone.StackElem
                                                   x4
                                                   (GHC.Types.:
                                                      @ Mascarpone.StackElem
                                                      x6
                                                      (GHC.Types.[] @ Mascarpone.StackElem)))))
                                          (GHC.Types.[] @ Mascarpone.StackElem))
                                       (Mascarpone.State ww xs3)
                                       w } } } }) -}
d441dcf5be0a4db4cf3635c796c5530a
  $wjoy_rotate ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Mascarpone.Interpreter)
                   (ww1 :: [Mascarpone.StackElem])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ww1 of wild {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                ((), Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case xs of wild1 {
                        []
                        -> case Mascarpone.create3
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((), Mascarpone.ProgState) #)
                           of {}
                        : x4 xs1
                        -> case xs1 of wild2 {
                             []
                             -> case Mascarpone.create3
                                ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                          ((), Mascarpone.ProgState) #)
                                of {}
                             : x5 xs2
                             -> Joy.joyInterp321
                                  (GHC.List.reverse1
                                     @ Mascarpone.StackElem
                                     (GHC.Types.:
                                        @ Mascarpone.StackElem
                                        x5
                                        (GHC.Types.:
                                           @ Mascarpone.StackElem
                                           x4
                                           (GHC.Types.:
                                              @ Mascarpone.StackElem
                                              x3
                                              (GHC.Types.[] @ Mascarpone.StackElem))))
                                     (GHC.Types.[] @ Mascarpone.StackElem))
                                  (Mascarpone.State ww xs2)
                                  w } } }) -}
0bfd8eb6bfd923cc507d6a1eadeb1ddf
  $wjoy_rotated ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Mascarpone.Interpreter)
                   (ww1 :: [Mascarpone.StackElem])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ww1 of wild {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                ((), Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case xs of wild1 {
                        []
                        -> case Mascarpone.create3
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((), Mascarpone.ProgState) #)
                           of {}
                        : x4 xs1
                        -> case xs1 of wild2 {
                             []
                             -> case Mascarpone.create3
                                ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                          ((), Mascarpone.ProgState) #)
                                of {}
                             : x5 xs2
                             -> case xs2 of wild3 {
                                  []
                                  -> case Mascarpone.create3
                                     ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                               ((), Mascarpone.ProgState) #)
                                     of {}
                                  : x6 xs3
                                  -> Joy.joyInterp317
                                       (GHC.List.reverse1
                                          @ Mascarpone.StackElem
                                          (GHC.Types.:
                                             @ Mascarpone.StackElem
                                             x5
                                             (GHC.Types.:
                                                @ Mascarpone.StackElem
                                                x4
                                                (GHC.Types.:
                                                   @ Mascarpone.StackElem
                                                   x3
                                                   (GHC.Types.:
                                                      @ Mascarpone.StackElem
                                                      x6
                                                      (GHC.Types.[] @ Mascarpone.StackElem)))))
                                          (GHC.Types.[] @ Mascarpone.StackElem))
                                       (Mascarpone.State ww xs3)
                                       w } } } }) -}
f887a53e01b7ede3844e842b2372c0e3
  $wjoy_sub ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Mascarpone.Interpreter)
                   (ww1 :: [Mascarpone.StackElem])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ww1 of wild1 {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                ((), Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case xs of wild2 {
                        []
                        -> case Mascarpone.create3
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((), Mascarpone.ProgState) #)
                           of {}
                        : x4 xs1
                        -> case x3 of wild {
                             DEFAULT
                             -> case Joy.joyInterp641
                                ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                          ((), Mascarpone.ProgState) #)
                                of {}
                             Mascarpone.Symb ds
                             -> case ds of wild4 {
                                  Mascarpone.Chr ipv
                                  -> case Joy.joyInterp641
                                     ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                               ((), Mascarpone.ProgState) #)
                                     of {}
                                  Mascarpone.Num a
                                  -> case x4 of wild5 {
                                       DEFAULT
                                       -> case Joy.joyInterp641
                                          ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                    ((), Mascarpone.ProgState) #)
                                          of {}
                                       Mascarpone.Symb ds1
                                       -> case ds1 of wild6 {
                                            Mascarpone.Chr ipv
                                            -> case Joy.joyInterp641
                                               ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                         ((), Mascarpone.ProgState) #)
                                               of {}
                                            Mascarpone.Num b
                                            -> (# w,
                                                  (GHC.Tuple.(),
                                                   Mascarpone.State
                                                     ww
                                                     (GHC.Types.:
                                                        @ Mascarpone.StackElem
                                                        (Mascarpone.Symb
                                                           (Mascarpone.Num
                                                              (case a of wild7 { GHC.Types.D# x ->
                                                               case b of wild8 { GHC.Types.D# y ->
                                                               GHC.Types.D#
                                                                 (GHC.Prim.-## x y) } })))
                                                        xs1)) #) } } } } } }) -}
8459a0ec73e1fb20e29a83c456faf20f
  $wjoy_swapd ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Mascarpone.Interpreter)
                   (ww1 :: [Mascarpone.StackElem])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ww1 of wild {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                ((), Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case xs of wild1 {
                        []
                        -> case Mascarpone.create3
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((), Mascarpone.ProgState) #)
                           of {}
                        : x4 xs1
                        -> case xs1 of wild2 {
                             []
                             -> case Mascarpone.create3
                                ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                          ((), Mascarpone.ProgState) #)
                                of {}
                             : x5 xs2
                             -> Joy.joyInterp263
                                  (GHC.List.reverse1
                                     @ Mascarpone.StackElem
                                     (GHC.Types.:
                                        @ Mascarpone.StackElem
                                        x4
                                        (GHC.Types.:
                                           @ Mascarpone.StackElem
                                           x3
                                           (GHC.Types.:
                                              @ Mascarpone.StackElem
                                              x5
                                              (GHC.Types.[] @ Mascarpone.StackElem))))
                                     (GHC.Types.[] @ Mascarpone.StackElem))
                                  (Mascarpone.State ww xs2)
                                  w } } }) -}
21ef17c5164761829b74f9cfddbc0464
  $wnum ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (GHC.Base.Maybe Mascarpone.StackElem, Mascarpone.ProgState) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0] -}
81a1e10558e31c2a1d35f7c4f520a29b
  $wnum' ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Mascarpone.Interpreter)
                   (ww1 :: [Mascarpone.StackElem])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Joy.$wnum ww ww1 w of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) a1 s' ->
                 case a1 of wild1 {
                   GHC.Base.Nothing -> (# ipv, (GHC.Tuple.(), s') #)
                   GHC.Base.Just n
                   -> (# ipv,
                         (GHC.Tuple.(),
                          case s' of wild2 { Mascarpone.State ds ds2 ->
                          Mascarpone.State
                            ds
                            (GHC.Types.: @ Mascarpone.StackElem n ds2) }) #) } } }) -}
98345c90167688f73cc83984b173067c
  $wpopBool ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (GHC.Types.Bool, Mascarpone.ProgState) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Mascarpone.Interpreter)
                   (ww1 :: [Mascarpone.StackElem])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ww1 of wild1 {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                (GHC.Types.Bool, Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case x3 of wild {
                        DEFAULT -> (# w, (GHC.Types.True, Mascarpone.State ww xs) #)
                        Mascarpone.Symb ds
                        -> case ds of wild2 {
                             Mascarpone.Chr ipv
                             -> (# w, (GHC.Types.True, Mascarpone.State ww xs) #)
                             Mascarpone.Num ds1
                             -> case ds1 of wild3 { GHC.Types.D# x ->
                                case GHC.Prim.tagToEnum#
                                       @ GHC.Types.Bool
                                       (GHC.Prim.==## x 0.0##) of wild4 {
                                  GHC.Types.False
                                  -> (# w, (GHC.Types.True, Mascarpone.State ww xs) #)
                                  GHC.Types.True
                                  -> (# w,
                                        (GHC.Types.False, Mascarpone.State ww xs) #) } } } } }) -}
5e88e4369d6277034911c193a87f6972
  $wpopOp ::
    Mascarpone.Interpreter
    -> [Mascarpone.StackElem]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Mascarpone.StackElem, Mascarpone.ProgState) #)
  {- Arity: 3, Strictness: <L,U><S,1*U><S,U>, Inline: [0],
     Unfolding: (\ (ww :: Mascarpone.Interpreter)
                   (ww1 :: [Mascarpone.StackElem])
                   (w :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case ww1 of wild1 {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                (Mascarpone.StackElem, Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case x3 of wild {
                        Mascarpone.Symb ds
                        -> case ds of wild2 {
                             Mascarpone.Chr ds1
                             -> case ds1 of wild3 { GHC.Types.C# ds2 ->
                                case ds2 of ds3 {
                                  DEFAULT
                                  -> case Joy.popOp2
                                     ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                               (Mascarpone.StackElem, Mascarpone.ProgState) #)
                                     of {}
                                  ']'#
                                  -> case Mascarpone.$wpopString
                                            ww
                                            wild1
                                            w of ds4 { (#,#) ipv ipv1 ->
                                     (# ipv,
                                        (Mascarpone.Op
                                           (let {
                                              w1 :: GHC.Base.String
                                              = case ipv1 of wild4 { (,) a1 s' -> a1 }
                                            } in
                                            (\ (w2 :: Mascarpone.ProgState)
                                               (w3 :: GHC.Prim.State#
                                                        GHC.Prim.RealWorld)[OneShot] ->
                                             Mascarpone.create2 w1 w2 w3)
                                              `cast`
                                            (Trans
                                                 (<Mascarpone.ProgState>_R
                                                  ->_R Sym (GHC.Types.N:IO[0]
                                                                <((), Mascarpone.ProgState)>_R))
                                                 (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                                           <Mascarpone.ProgState>_N
                                                           <GHC.Types.IO>_R
                                                           <()>_N)))),
                                         case ipv1 of wild4 { (,) a1 s' -> s' }) #) } } }
                             Mascarpone.Num ipv
                             -> case Joy.popOp2
                                ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                          (Mascarpone.StackElem, Mascarpone.ProgState) #)
                                of {} }
                        Mascarpone.Op ds -> (# w, (wild, Mascarpone.State ww xs) #)
                        Mascarpone.Intr ipv
                        -> case Joy.popOp2
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     (Mascarpone.StackElem, Mascarpone.ProgState) #)
                           of {} } }) -}
909180fa12f7b7bc8e3a9da2ad1c4196
  $wwordSyn ::
    [([GHC.Types.Char], Mascarpone.Effect)]
    -> (# Data.Map.Base.Map Mascarpone.Symbol Mascarpone.Effect,
          Mascarpone.Interpreter, Mascarpone.Symbol -> Mascarpone.Effect #)
  {- Arity: 1, Strictness: <L,1*U>, Inline: [0],
     Unfolding: (\ (w :: [([GHC.Types.Char], Mascarpone.Effect)]) ->
                 case Prefix.$wfromList
                        @ Mascarpone.Symbol
                        @ Mascarpone.Effect
                        Mascarpone.$fOrdSymbol
                        (GHC.Base.map
                           @ ([GHC.Types.Char], Mascarpone.Effect)
                           @ ([Mascarpone.Symbol], Mascarpone.Effect)
                           Joy.joyInterp653
                           w) of ww { (#,#) ww1 ww2 ->
                 Prefix.$wtoInterp Mascarpone.defaultInterpreter ww1 ww2 }) -}
3c60716b93136341fd624a6855feaf55
  joyInterp :: Mascarpone.Interpreter
  {- Unfolding: (case Prefix.$wfromList
                        @ Mascarpone.Symbol
                        @ Mascarpone.Effect
                        Mascarpone.$fOrdSymbol
                        Joy.joyInterp1 of ww { (#,#) ww1 ww2 ->
                 case Prefix.$wtoInterp
                        Mascarpone.defaultInterpreter
                        ww1
                        ww2 of ww3 { (#,,#) ww4 ww5 ww6 ->
                 Mascarpone.Interpreter ww4 ww5 ww6 } }) -}
64ec4b9cf0d6627eb09e28fe63df6822
  joyInterp1 :: [([Mascarpone.Symbol], Mascarpone.Effect)]
  {- Unfolding: (GHC.Base.map
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   @ ([Mascarpone.Symbol], Mascarpone.Effect)
                   Joy.joyInterp653
                   Joy.joyInterp2) -}
8f5ba52fc7693e988f4f898076a7a362
  joyInterp10 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp627
                   Joy.joyInterp11) -}
d3f91796c3ea66e6c052b8e103185844
  joyInterp100 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp436
                   Joy.joyInterp101) -}
c54c462fc6c0555e7a54c8cd49ff5bcd
  joyInterp101 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp434
                   Joy.joyInterp102) -}
7076b141141a849c5681ada5e62c2325
  joyInterp102 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp432
                   Joy.joyInterp103) -}
46986f45163bebe3635a4d917465d2eb
  joyInterp103 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp430
                   Joy.joyInterp104) -}
517f22947970d12dd4072bb596db2a46
  joyInterp104 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp428
                   Joy.joyInterp105) -}
10c5a82423637dbbd90ec6ab5b7de2e6
  joyInterp105 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp426
                   Joy.joyInterp106) -}
4ca0538198ee0ed8d4ae0ee03dac561d
  joyInterp106 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp424
                   Joy.joyInterp107) -}
536b7d46d69b36e19f45e4e0b90cde1b
  joyInterp107 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp422
                   Joy.joyInterp108) -}
3bf1010fddbce0a615803274237f8f4d
  joyInterp108 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp420
                   Joy.joyInterp109) -}
115bab3b8e8de892231a01144b543df1
  joyInterp109 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp418
                   Joy.joyInterp110) -}
1ba364b7ee4483df93ed43cad1c2df63
  joyInterp11 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp625
                   Joy.joyInterp12) -}
91b3b4a93637888b38721657260d6468
  joyInterp110 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp416
                   Joy.joyInterp111) -}
51206e89b2a5d221b308e2ad515554fd
  joyInterp111 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp414
                   Joy.joyInterp112) -}
b8fd91f392ef311a233ce931d36439ec
  joyInterp112 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp412
                   Joy.joyInterp113) -}
9620685c39b3e80619e9efec90e40261
  joyInterp113 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp410
                   Joy.joyInterp114) -}
0f0628df18c5467c5e78d6a31a15c0a3
  joyInterp114 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp408
                   Joy.joyInterp115) -}
6999e3f8e24bf78a96052da707d1c85e
  joyInterp115 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp406
                   Joy.joyInterp116) -}
686bce2b6fb024f67771ce4c08138b91
  joyInterp116 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp404
                   Joy.joyInterp117) -}
2cd5b02406b42008576117e1056eff77
  joyInterp117 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp402
                   Joy.joyInterp118) -}
bd6147ce66572c04bef84caec9db9a80
  joyInterp118 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp400
                   Joy.joyInterp119) -}
583eff11537f2280d9148eb5e35af605
  joyInterp119 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp398
                   Joy.joyInterp120) -}
9b4c60f7501f0b8210de534946424feb
  joyInterp12 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp621
                   Joy.joyInterp13) -}
9bf1cf14a077d67998f106221ad2f3fa
  joyInterp120 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp396
                   Joy.joyInterp121) -}
891acdc769b4383ea73e29094e72e03f
  joyInterp121 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp394
                   Joy.joyInterp122) -}
0e05f63314168f45fd7166de563b8d6d
  joyInterp122 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp392
                   Joy.joyInterp123) -}
c587c316e1b8f0eb53e6cd6c49aa82d1
  joyInterp123 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp390
                   Joy.joyInterp124) -}
e12dc4413b4d0078dedba26ec62e0065
  joyInterp124 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp388
                   Joy.joyInterp125) -}
ee2959d30faa897d0f38d0a8b2ad38a7
  joyInterp125 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp384
                   Joy.joyInterp126) -}
74dfcb96b55736a012278c3b20a4855c
  joyInterp126 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp382
                   Joy.joyInterp127) -}
f56edc9b8cb5d81e4c185dea888f08e0
  joyInterp127 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp380
                   Joy.joyInterp128) -}
bdc89b208ece7862468d9fc25efe9c3c
  joyInterp128 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp378
                   Joy.joyInterp129) -}
9881ee0af8349a12fd38a4c5d06d3257
  joyInterp129 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp376
                   Joy.joyInterp130) -}
0b2336a785f1a096cbff89f5e61a31e8
  joyInterp13 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp619
                   Joy.joyInterp14) -}
a9ba524e872559c86db087f564733b2d
  joyInterp130 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp374
                   Joy.joyInterp131) -}
ac7111157dd6f7265b246411964793a7
  joyInterp131 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp372
                   Joy.joyInterp132) -}
b10c5290f183317f13a90acec3e0c87e
  joyInterp132 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp368
                   Joy.joyInterp133) -}
94dc9c6b6391ccec5c178597f1c9c101
  joyInterp133 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp365
                   Joy.joyInterp134) -}
db0c18d5d23c8f73392ea4fd51ddf03c
  joyInterp134 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp362
                   Joy.joyInterp135) -}
adbde344ad7010af7838377ad446dbaf
  joyInterp135 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp360
                   Joy.joyInterp136) -}
c2bd02962d0c38b1ef91ff2078834679
  joyInterp136 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp358
                   Joy.joyInterp137) -}
10ec2eb4eeab243eb547cab338d8c4ca
  joyInterp137 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp356
                   Joy.joyInterp138) -}
d45425e5561c6f2f855da7608249055a
  joyInterp138 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp354
                   Joy.joyInterp139) -}
ca6fa2659998f7155640e5b227742801
  joyInterp139 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp352
                   Joy.joyInterp140) -}
9acbd97556d5cd19b8e10b6c51576ae5
  joyInterp14 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp617
                   Joy.joyInterp15) -}
186aeea41e648718d1844c037bd56c42
  joyInterp140 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp350
                   Joy.joyInterp141) -}
1133b2b1ad5c27c5c92c370b566d3700
  joyInterp141 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp347
                   Joy.joyInterp142) -}
c29fc4c492f11a1553f1869966e732ef
  joyInterp142 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp345
                   Joy.joyInterp143) -}
01d5021913eec256e3492e3af74d548d
  joyInterp143 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp341
                   Joy.joyInterp144) -}
1049d63af875e03f571d9831daca754e
  joyInterp144 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp339
                   Joy.joyInterp145) -}
f027f6b20f512207cc24643f80d8d20c
  joyInterp145 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp335
                   Joy.joyInterp146) -}
a9caa595f5268e6c0287fa590a71a238
  joyInterp146 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp331
                   Joy.joyInterp147) -}
d30ac5944a5211f224fc2eddecb406bb
  joyInterp147 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp327
                   Joy.joyInterp148) -}
03c467d7ecd536bebbfb10c6e8e88fcf
  joyInterp148 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp323
                   Joy.joyInterp149) -}
8da8347528d8ad42d92e99c10d5e12e1
  joyInterp149 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp319
                   Joy.joyInterp150) -}
00dabdfa9c2c00ed8b26ec2d9f40d002
  joyInterp15 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp615
                   Joy.joyInterp16) -}
132fe5c59197a0c18f72153618d07d2e
  joyInterp150 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp315
                   Joy.joyInterp151) -}
fc33d06f70621a56cfbc7cf88b28c387
  joyInterp151 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp313
                   Joy.joyInterp152) -}
66a1cc25571541ebefb05f52a89005bd
  joyInterp152 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp311
                   Joy.joyInterp153) -}
1577592d33c7fa17bb33822cc54fdd43
  joyInterp153 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp309
                   Joy.joyInterp154) -}
623a48f45bb4186190dfe3b2318812bb
  joyInterp154 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp307
                   Joy.joyInterp155) -}
6ee5379cb18263be51b9cb3ff97440d9
  joyInterp155 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp305
                   Joy.joyInterp156) -}
9e0c0b3be26d26b8e926435ea523e9e3
  joyInterp156 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp303
                   Joy.joyInterp157) -}
96a21e7bb5849b9667997d0f898063cc
  joyInterp157 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp301
                   Joy.joyInterp158) -}
96a40d0f5c187f90aa85e9c3062de91d
  joyInterp158 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp299
                   Joy.joyInterp159) -}
0727c2856f90fa0a2f17257846d2a0dd
  joyInterp159 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp297
                   Joy.joyInterp160) -}
a6aff35b38a3506885df907c1b6e023d
  joyInterp16 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp613
                   Joy.joyInterp17) -}
5df60ac054a69d64ce4db8f370ffbecb
  joyInterp160 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp295
                   Joy.joyInterp161) -}
86266e35bfc883c9662887abbe5464ab
  joyInterp161 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp293
                   Joy.joyInterp162) -}
f17dbb1b567e0dd5fe9f572f0cf54634
  joyInterp162 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp291
                   Joy.joyInterp163) -}
8e3fb92da22954636894a9f43266c0d3
  joyInterp163 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp289
                   Joy.joyInterp164) -}
a125a95828fd3ad506207d299dd9be69
  joyInterp164 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp287
                   Joy.joyInterp165) -}
0a81de5db733291ee0dda5def4eaaab8
  joyInterp165 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp285
                   Joy.joyInterp166) -}
095613dec39393fbce41277e47298071
  joyInterp166 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp283
                   Joy.joyInterp167) -}
aa12e5d2d8f4946151a9326df7dd3935
  joyInterp167 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp281
                   Joy.joyInterp168) -}
e52c6319b5d218ced183534f72ccc4a6
  joyInterp168 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp279
                   Joy.joyInterp169) -}
fcc09bad06ea525a133e40450da9fb08
  joyInterp169 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp277
                   Joy.joyInterp170) -}
a47a8aa7999bfd43ec7f10e640097c76
  joyInterp17 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp611
                   Joy.joyInterp18) -}
1361c802d82d026c2128a648b12f05ef
  joyInterp170 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp275
                   Joy.joyInterp171) -}
5487235a1b45e5dbd711bbc3b7e025ac
  joyInterp171 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp273
                   Joy.joyInterp172) -}
deaad862495cc2c812d56f8095805c27
  joyInterp172 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp271
                   Joy.joyInterp173) -}
3759b47339148b560fa7253b33e0c05e
  joyInterp173 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp269
                   Joy.joyInterp174) -}
f822ac8e53ba9a72c4a7039ae667b45a
  joyInterp174 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp267
                   Joy.joyInterp175) -}
1c7c32a3cc07e68329933a9597a4d9c0
  joyInterp175 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp265
                   Joy.joyInterp176) -}
9f6f4f435f20cd9fd1dbd29714ef0f29
  joyInterp176 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp261
                   Joy.joyInterp177) -}
9bccb4a088fe7c78ca9557f1701cf055
  joyInterp177 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp259
                   Joy.joyInterp178) -}
85394ad9753e7af88ba5498944691d64
  joyInterp178 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp257
                   Joy.joyInterp179) -}
a6bf06f43b3777671200ca018e0c6d6d
  joyInterp179 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp255
                   Joy.joyInterp180) -}
1c306cc94f6c4b9279d017e5c52cb731
  joyInterp18 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp609
                   Joy.joyInterp19) -}
962c57d499ac4782248a96d35c395cb5
  joyInterp180 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp253
                   Joy.joyInterp181) -}
0f8005a1bdd1d8b96db3fac690eae506
  joyInterp181 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp251
                   Joy.joyInterp182) -}
0f90171febcd0db0064bef00df5d1924
  joyInterp182 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp249
                   Joy.joyInterp183) -}
bcb9d3a86fd874cba68edfe53b2e3b8e
  joyInterp183 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp247
                   Joy.joyInterp184) -}
b735c7bada534788200c8998b1ed7467
  joyInterp184 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp245
                   Joy.joyInterp185) -}
5fe4f2b36413a6a04338caa79f7f77f6
  joyInterp185 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp243
                   Joy.joyInterp186) -}
023e983a0813644a09d0e344429b5c7d
  joyInterp186 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp241
                   Joy.joyInterp187) -}
356854f32dbdc39affc7e0f8633b40d4
  joyInterp187 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp239
                   Joy.joyInterp188) -}
a62a74cc06f9cacd8746acf215797a75
  joyInterp188 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp237
                   Joy.joyInterp189) -}
5cd3c2b35a537c5843ddf648213a113f
  joyInterp189 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp232
                   Joy.joyInterp190) -}
8656f37e31ec458e76a24079584c08a2
  joyInterp19 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp607
                   Joy.joyInterp20) -}
e06472e1d98b653de5ed651f9e5d03c3
  joyInterp190 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp230
                   Joy.joyInterp191) -}
1c44b444a6d0b7de3b6050fc1fa7d27b
  joyInterp191 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp228
                   Joy.joyInterp192) -}
dc3f95845778d12971144cc77e4d8df1
  joyInterp192 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp226
                   Joy.joyInterp193) -}
7db32ea38cb138b4cac8608cdf5ecbe9
  joyInterp193 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp224
                   Joy.joyInterp194) -}
6af15a8655f57754fbe20d63bac2f75d
  joyInterp194 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp222
                   Joy.joyInterp195) -}
9dbb5de2aa3dc9de8eefe7f971565c96
  joyInterp195 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp220
                   Joy.joyInterp196) -}
40665931179c0950bb236d49ac05fd49
  joyInterp196 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp218
                   Joy.joyInterp197) -}
adf358296fa89abd8ab9ee9f7abb2872
  joyInterp197 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp216
                   Joy.joyInterp198) -}
e692d1ab9f33cf9ff97e1f4392c74007
  joyInterp198 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp214
                   Joy.joyInterp199) -}
1d0358e99d8df3f82e76e46f5a0bcddc
  joyInterp199 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp212
                   Joy.joyInterp200) -}
f656361d5ecd9200de09511b0bc4cd1b
  joyInterp2 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp651
                   Joy.joyInterp3) -}
60d3e95ba9e2c479411acf0a247274ce
  joyInterp20 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp605
                   Joy.joyInterp21) -}
47de0a31e0dd182483a4213417ba901b
  joyInterp200 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp210
                   Joy.joyInterp201) -}
8272d4f76097596f9eab3848e0b142eb
  joyInterp201 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp208
                   Joy.joyInterp202) -}
462625b6897e5fbe9126eee537402a06
  joyInterp202 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp206
                   Joy.joyInterp203) -}
248dbb685f5046109e97991579f22544
  joyInterp203 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp204
                   (GHC.Types.[] @ ([GHC.Types.Char], Mascarpone.Effect))) -}
27810a67e4eaad3c9bbea64db5a0d684
  joyInterp204 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp205,
                  Joy.joy_xor
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
98f32c6b9850a5a77f74216022d0fce4
  joyInterp205 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "xor"#) -}
4fb2aa668664f4b75bcdba3d4220d283
  joyInterp206 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp207,
                  Joy.joy_x
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
96cbc2df88806e60801da3cf656f29c5
  joyInterp207 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "x"#) -}
187034b72add599b919840d72c48fbe0
  joyInterp208 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp209,
                  Joy.joy_while
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
2f8bb990696ea5eeb3c6341c0626a840
  joyInterp209 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "while"#) -}
69ea84e6a44b37b014bb943bf531d1a1
  joyInterp21 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp603
                   Joy.joyInterp22) -}
72e862fc2adbe0e0549447e49ed565b3
  joyInterp210 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp211,
                  Joy.joy_user
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
443fbb51bd4ec92350975f19404ad2c5
  joyInterp211 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "user"#) -}
f49555b9d8129d8092abbe3354607fb0
  joyInterp212 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp213,
                  Joy.joy_unswons
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
eee3b7f59e2b6a753b62db3fea3a1069
  joyInterp213 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "unswons"#) -}
849e5b3a4973aeda79b54886ecb5e872
  joyInterp214 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp215,
                  Joy.joy_unstack
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
b70be1fd35ae65166bf1526408c15099
  joyInterp215 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "unstack"#) -}
331cfd5b6fbca33edafd5c592829e0e3
  joyInterp216 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp217,
                  Joy.joy_undefs
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
85df52ee01858f88daeb75c3ccfde9e7
  joyInterp217 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "undefs"#) -}
92651d6249952391086ae9fe521a2dd1
  joyInterp218 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp219,
                  Joy.joy_undeferror
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
24953d733fda39332fa409fd02ed29b3
  joyInterp219 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "undeferror"#) -}
40d9c57f79a0c59856c4eaf45a25cd4c
  joyInterp22 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp601
                   Joy.joyInterp23) -}
9db09979a7a288641c1e705224276216
  joyInterp220 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp221,
                  Joy.joy_uncons
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
61d3b9b9b9cf851ff11b6e4ab344b880
  joyInterp221 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "uncons"#) -}
9ea36f5642d9d6952567ffd5dd687cf7
  joyInterp222 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp223,
                  Joy.joy_unary4
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
c70d6993fc6dcf848babf4fa65caed03
  joyInterp223 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "unary4"#) -}
523e50a3afb1fce8011af3ae813283f8
  joyInterp224 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp225,
                  Joy.joy_unary3
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
2fef5d3f930a0862d824fad5530bd9e0
  joyInterp225 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "unary3"#) -}
5a57f1b1c384f3896a9eb54044c2583a
  joyInterp226 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp227,
                  Joy.joy_unary2
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
2f830a2fefbd9721867a81efbe29c206
  joyInterp227 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "unary2"#) -}
df530b1ffdada2ab0f9125d40477ee75
  joyInterp228 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp229,
                  Joy.joy_unary
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
8d6b7f13bf387234b09c7e3c9b471b25
  joyInterp229 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "unary"#) -}
29af83f15d8a751c5e6536fd823bbef9
  joyInterp23 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp599
                   Joy.joyInterp24) -}
26e51b35c3580f9cd3668b288b03068e
  joyInterp230 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp231,
                  Joy.joy_trunc
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
9ce89ea143acb5ed02d4b5fdb69f107f
  joyInterp231 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "trunc"#) -}
d55e8b2ebbdec960ddc399878772789d
  joyInterp232 :: ([GHC.Types.Char], Mascarpone.Effect)
  {- Unfolding: ((Joy.joyInterp236,
                  Joy.joyInterp233
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
c4356e88dbc18d31702fffb4e926d15c
  joyInterp233 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U,U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta1 :: Mascarpone.ProgState)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     case eta1 of wild { Mascarpone.State ds ds1 ->
                     Mascarpone.State
                       ds
                       (GHC.Types.: @ Mascarpone.StackElem Joy.joyInterp_x3 ds1) }) #)) -}
5069d0fd4561e1f27ec80a1f90352ddb
  joyInterp234 :: Mascarpone.Symbol
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Mascarpone.Num Joy.joyInterp235) -}
cf7b4dba4eeb177bd0e39660cae621ee
  joyInterp235 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 1.0##) -}
4b429134afc4329428580f34dbd33106
  joyInterp236 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "true"#) -}
700e0761cadf6166f52b4df1a440923a
  joyInterp237 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp238,
                  Joy.joy_treestep
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
be2b372204b671236ea8a5ff75d0bab3
  joyInterp238 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "treestep"#) -}
292211a1f88ee1bef251fabe4d41e14d
  joyInterp239 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp240,
                  Joy.joy_treerec
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
dc851191911fb9ea4a7171e58773c8c3
  joyInterp24 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp597
                   Joy.joyInterp25) -}
c374bd356ff0ac414141e5f26803b164
  joyInterp240 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "treerec"#) -}
8623bf3943e4eacad9f8f5b9db1c8e0d
  joyInterp241 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp242,
                  Joy.joy_treegenrec
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
d036548d5302a32b77135e4cf5cbbb51
  joyInterp242 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "treegenrec"#) -}
d2af0cb05c48c7482039206d435d6b8b
  joyInterp243 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp244,
                  Joy.joy_times
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
811e0e942b072941ba17e2578e3a86c0
  joyInterp244 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "times"#) -}
1eadd2224ca3d146e88d9b2c883e0196
  joyInterp245 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp246,
                  Joy.joy_time
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
b59c45d193d446166a0ee6688afe6333
  joyInterp246 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "time"#) -}
74f3ae910ad1b7ac3148bd2dd18768ef
  joyInterp247 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp248,
                  Joy.joy_ternary
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
60220728c4ab3c9edb7bd951248606f6
  joyInterp248 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ternary"#) -}
a598abdc4e454342a38d71081f387973
  joyInterp249 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp250,
                  Joy.joy_tanh
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
08767f24d6e3944ac79b6636054aefd5
  joyInterp25 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp595
                   Joy.joyInterp26) -}
abd75d5f29c45df2430f35dc6c285661
  joyInterp250 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "tanh"#) -}
9499029ce3ce7ca0ec60d162dac02526
  joyInterp251 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp252,
                  Joy.joy_tan
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
ea2666aae4532fc59a74cbe1d491098c
  joyInterp252 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "tan"#) -}
aa84ddc089faf282fc6407628a7caf31
  joyInterp253 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp254,
                  Joy.joy_take
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
8964aebeb8b88c96f958deb502458c91
  joyInterp254 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "take"#) -}
3b713c11e0088fa48f9f887e7e130c50
  joyInterp255 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp256,
                  Joy.joy_tailrec
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
4c7b67ab51efb716ead176872b5ad12c
  joyInterp256 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "tailrec"#) -}
0e7f5161ee20b9b00da5649bf7f0c969
  joyInterp257 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp258,
                  Joy.joy_system
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
efc33839eaed589f936d7ef47587ca4e
  joyInterp258 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "system"#) -}
dcdc99ea0fed3b3b5f83993a9e215763
  joyInterp259 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp260,
                  Joy.joy_swons
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
f9eb2373dd6a940013fa21cf4f2c8a07
  joyInterp26 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp593
                   Joy.joyInterp27) -}
ac862923b421d974be154ae8bac3eb57
  joyInterp260 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "swons"#) -}
14fb95601270e6ef69cb30cd4de5e825
  joyInterp261 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp264,
                  Joy.joyInterp262
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
534b7b27ed483e8e97dd4c2ac23f504a
  joyInterp262 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Joy.$wjoy_swapd ww1 ww2 w1 }) -}
d8bbb93b2232235aed81f4aaaf4eac92
  joyInterp263 ::
    [Mascarpone.StackElem]
    -> Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,U(U,U)><S,U> -}
b89b9dfb31f817b595969eda72710b37
  joyInterp264 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "swapd"#) -}
be155ee3f793ac8fba96abca662a0d21
  joyInterp265 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp266,
                  Mascarpone.defCodepage20
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
ea1b96e9be9c470a344e448f1803f117
  joyInterp266 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "swap"#) -}
05a50c1f27ff2647ceae29ac532cfc51
  joyInterp267 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp268,
                  Joy.joy_succ
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
6866c24f43138996df3f8d7c7e005056
  joyInterp268 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "succ"#) -}
bcfc4e724689bf611c9afdee5da34ca4
  joyInterp269 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp270,
                  Joy.joy_strtol
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
483d6890ade525bcaf578f486f066d74
  joyInterp27 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp591
                   Joy.joyInterp28) -}
4f0bfd46dd108278e955d03e5fb1633a
  joyInterp270 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "strtol"#) -}
c5c57b0b4c9028d861e20e80897c58df
  joyInterp271 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp272,
                  Joy.joy_strtod
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
9a65a15a0cc41bfa97c99927d2c7ed88
  joyInterp272 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "strtod"#) -}
418c36a9ed7666116fd00681158e2d15
  joyInterp273 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp274,
                  Joy.joy_string
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
4a7e1884bac9c6cb8272140c40b6a091
  joyInterp274 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "string"#) -}
d96b3564a469278e9936ab00d48d93ab
  joyInterp275 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp276,
                  Joy.joy_strftime
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
1b0b2b5e5a4fe59c1e11773a49eca9c8
  joyInterp276 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "strftime"#) -}
afe478092357c0cb455f1eecc7b5af00
  joyInterp277 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp278,
                  Joy.joy_step
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
bead28f0e21f34e488930f108a4ce3f6
  joyInterp278 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "step"#) -}
d4c502b00bc531488f57ad2036401c9a
  joyInterp279 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp280,
                  Joy.joy_stdout
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
d617a616b19f49f71d88b1a3c108b8ab
  joyInterp28 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp589
                   Joy.joyInterp29) -}
b70b59dd4914b7d928478c67f20878a7
  joyInterp280 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "stdout"#) -}
db1121eff56a9c16caf2b167009a3784
  joyInterp281 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp282,
                  Joy.joy_stdin
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
bc7b941cfdd9a3b08939ac94be06f708
  joyInterp282 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "stdin"#) -}
57484571f0376c9bae0887ec2441400e
  joyInterp283 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp284,
                  Joy.joy_stderr
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
8ea6df95b2e8ea20bb50a231c4ba1ce5
  joyInterp284 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "stderr"#) -}
f847d701302aeb41d756f7d0747bc337
  joyInterp285 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp286,
                  Joy.joy_stack
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
1209e7eb0b61b20fcf38143e2d94499e
  joyInterp286 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "stack"#) -}
e4b2afea90cff394d16c0f4d03c41c7b
  joyInterp287 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp288,
                  Joy.joy_srand
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
b960c122016758c9f331e065075b89ca
  joyInterp288 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "srand"#) -}
f366b50b065f6928299a9949a6b45c55
  joyInterp289 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp290,
                  Joy.joy_sqrt
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
c6759dee68abacc2b3058b8fe2eefbbc
  joyInterp29 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp587
                   Joy.joyInterp30) -}
c577d5a2235788bd1d753894903ae635
  joyInterp290 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "sqrt"#) -}
378262b13d4d5098a851180f7461deeb
  joyInterp291 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp292,
                  Joy.joy_split
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
b4a136ef54c4b12de2504a9e05a32d6e
  joyInterp292 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "split"#) -}
a6a24aa6a3db724e5441061343095705
  joyInterp293 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp294,
                  Joy.joy_some
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
74dfaf560702632497a4109d488a5b4c
  joyInterp294 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "some"#) -}
f815db03b597442b1e61bab049064b9a
  joyInterp295 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp296,
                  Joy.joy_small
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
0f15422f61e30e43c9dd0e33c92dca35
  joyInterp296 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "small"#) -}
c69febc7230cfa587778e9a34e0f967a
  joyInterp297 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp298,
                  Joy.joy_size
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
71d13d899daf1c01d92ce6b4eb7bbd8e
  joyInterp298 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "size"#) -}
d564df95fc6701e1a9c92a122540f857
  joyInterp299 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp300,
                  Joy.joy_sinh
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
895cb22321ec099beae0b95d14b0080a
  joyInterp3 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp647
                   Joy.joyInterp4) -}
b4942636edbaa641d2a74ecd440dd148
  joyInterp30 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp585
                   Joy.joyInterp31) -}
9a510927f8e78fd8d3581795de32452e
  joyInterp300 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "sinh"#) -}
d6c1b1cc706bd9678eb2e6df4e166743
  joyInterp301 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp302,
                  Joy.joy_sin
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
13da16fd30ee0280986f5d32c7b7e08b
  joyInterp302 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "sin"#) -}
0603cdbda57f531dbde627e4aaf8d2bf
  joyInterp303 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp304,
                  Joy.joy_sign
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
0adae0115aa0dd01838ca1bc99ee3666
  joyInterp304 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "sign"#) -}
77e0c14a41b0899d6c2e202dc25f373f
  joyInterp305 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp306,
                  Joy.joy_setundeferror
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
4c427f681f28043abdd2ca483ac95bec
  joyInterp306 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "setundeferror"#) -}
db73dd55c67dcbeab1ccaa90785a03e6
  joyInterp307 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp308,
                  Joy.joy_setsize
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
7959522c8307b77c55f6696e2e80680a
  joyInterp308 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "setsize"#) -}
6a3b000621ce9d827908a7456a71b822
  joyInterp309 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp310,
                  Joy.joy_setecho
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
41ee5e763ffe79c8ddd296a716c1ea16
  joyInterp31 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp583
                   Joy.joyInterp32) -}
99d5aa699fcadd4678c6d4e81f5921ff
  joyInterp310 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "setecho"#) -}
4d734048f74eeb021d011179e6a31ada
  joyInterp311 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp312,
                  Joy.joy_setautoput
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
20740339299c314ddaf0c466e18d384e
  joyInterp312 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "setautoput"#) -}
f290d6d5feedf222db9df13bda1be63f
  joyInterp313 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp314,
                  Joy.joy_set
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
678fa5ae6fc149e9eb48b8bf35d7bcc9
  joyInterp314 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "set"#) -}
84815c39bea45e704f4dcba8407629f7
  joyInterp315 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp318,
                  Joy.joyInterp316
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
415c95a92ee155696101ef779db4d0c8
  joyInterp316 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Joy.$wjoy_rotated ww1 ww2 w1 }) -}
6b45e86dac30e25335a46283f5a197c2
  joyInterp317 ::
    [Mascarpone.StackElem]
    -> Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,U(U,U)><S,U> -}
0562fd719a686bb89196b53f17c9ab14
  joyInterp318 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "rotated"#) -}
82a1b5617d3a4144a6c6d664938f9c55
  joyInterp319 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp322,
                  Joy.joyInterp320
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
27dd0baa455e33c660541118a5fc46fe
  joyInterp32 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp581
                   Joy.joyInterp33) -}
13df6b019ae7b8af4507c1343654a58b
  joyInterp320 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Joy.$wjoy_rotate ww1 ww2 w1 }) -}
a53f38db80013d55744c1d97a02da4d3
  joyInterp321 ::
    [Mascarpone.StackElem]
    -> Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,U(U,U)><S,U> -}
59a2360fd232e7dfa341e7f1f29ef9a9
  joyInterp322 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "rotate"#) -}
7e1fd357b71f0deb7228acf38ac170ce
  joyInterp323 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp326,
                  Joy.joyInterp324
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
0e363469a59dd1587d56c3a5325609f7
  joyInterp324 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Joy.$wjoy_rollupd ww1 ww2 w1 }) -}
711cb81f7bf959399d6d3742bb7c3d84
  joyInterp325 ::
    [Mascarpone.StackElem]
    -> Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,U(U,U)><S,U> -}
49fa19927218959fad0bf1e00b406fc4
  joyInterp326 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "rollupd"#) -}
30af84a45ece84bb0a1d82ee634f45eb
  joyInterp327 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp330,
                  Joy.joyInterp328
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
5b45c8e1f68bb79a194d007d54d6fcf7
  joyInterp328 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Joy.$wjoy_rollup ww1 ww2 w1 }) -}
f0cf0c6fb4165355c59d36ac1f0e53c6
  joyInterp329 ::
    [Mascarpone.StackElem]
    -> Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,U(U,U)><S,U> -}
ddb05f10b35a0ebd791f1fed027c0b01
  joyInterp33 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp579
                   Joy.joyInterp34) -}
41196466379b7c44794853045ac28048
  joyInterp330 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "rollup"#) -}
6f6f2d4b5759aa13226c8be72dcaf25b
  joyInterp331 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp334,
                  Joy.joyInterp332
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
d491b618b6b44cd19012691b664aaecd
  joyInterp332 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Joy.$wjoy_rolldownd ww1 ww2 w1 }) -}
494d2716b07b53766d1f2d6662cf4c46
  joyInterp333 ::
    [Mascarpone.StackElem]
    -> Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,U(U,U)><S,U> -}
50865a148131b9e57e7abf5cb2631183
  joyInterp334 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "rolldownd"#) -}
c0c68539132121399b20eb9ea123c42b
  joyInterp335 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp338,
                  Joy.joyInterp336
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
14cd534f910baf10d3c6be01c41a6405
  joyInterp336 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Joy.$wjoy_rolldown ww1 ww2 w1 }) -}
0b55bf4202cf7d3b90caac9ad5112991
  joyInterp337 ::
    [Mascarpone.StackElem]
    -> Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,U(U,U)><S,U> -}
e4aaa2f5362d8f2884437503d24e4393
  joyInterp338 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "rolldown"#) -}
475a9d9236b50d2f76d9e692763d50bb
  joyInterp339 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp340,
                  Joy.joy_rest
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
a65fdc6bd6879ab8b7c9a5f9d410b211
  joyInterp34 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp577
                   Joy.joyInterp35) -}
6a0c40fda4ecfec4c70cdc56757fbb35
  joyInterp340 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "rest"#) -}
3f3873a5772419cba20dd138ea7fb0a6
  joyInterp341 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp344,
                  Joy.joyInterp342
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
dfc1da6a4fb70de02eacf7c35ab95f1d
  joyInterp342 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Joy.$wjoy_rem ww1 ww2 w1 }) -}
bf7507860a113eae396a14a40bb171b4
  joyInterp343 ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Strictness: x -}
85bc8ce203763a84de1134041de845cf
  joyInterp344 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "rem"#) -}
8164356032b81ca57f345326e34ba3a5
  joyInterp345 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp346,
                  Joy.joy_rand
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
4b5ec389df38fe05742ad392a438d8c7
  joyInterp346 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "rand"#) -}
149f6a73b725fe8de9688b08e3c41c66
  joyInterp347 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp349,
                  (Joy.joyInterp348 @ ())
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
1cec61b280e6ce0017262cbcfe0644b1
  joyInterp348 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (a, Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <B,A><B,U>b,
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (s1 :: Mascarpone.ProgState)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.raiseIO#
                        @ GHC.Exception.SomeException
                        @ a
                        (GHC.IO.Exception.$fExceptionExitCode_$ctoException
                           GHC.IO.Exception.ExitSuccess)
                        s
                 ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                           (a, Mascarpone.ProgState) #)
                 of {}) -}
a941881ea771ed59a7f429c7cd64d752
  joyInterp349 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "quit"#) -}
7f3d383502383916879fae06ec5ace8b
  joyInterp35 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp574
                   Joy.joyInterp36) -}
bb7dbf95e0fca42c65dbea5245263d53
  joyInterp350 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp351,
                  Joy.joy_putchars
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
89d060ac1d7123024ef4c45d3f7dc8e4
  joyInterp351 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "putchars"#) -}
83791b2ae1d3beca5ce682e8449e21a5
  joyInterp352 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp353,
                  Joy.joy_putch
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
164d18c56c65f2b8e4a3ab273106c531
  joyInterp353 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "putch"#) -}
ac64fe484c72d1bfc0bc8c980ef2a8b5
  joyInterp354 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp355,
                  Joy.joy_put
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
fc1cfe6f883145105e31d1e1f9638eee
  joyInterp355 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "put"#) -}
9f564994339c906b830ede9b327d8658
  joyInterp356 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp357,
                  Joy.joy_primrec
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
e41485fa87b3dbc801371b533a590c9a
  joyInterp357 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "primrec"#) -}
549a94f92e94d025f8333e8fb16f07d9
  joyInterp358 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp359,
                  Joy.joy_pred
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
981a007d0d406d37680776577799029c
  joyInterp359 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "pred"#) -}
c0d9fd53a5911d70d3cdbff744fd5202
  joyInterp36 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp570
                   Joy.joyInterp37) -}
b28478383588b4b9795af8930a494a4b
  joyInterp360 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp361,
                  Joy.joy_pow
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
fe78d7231d85a6b6e5fc3b6f82fe402e
  joyInterp361 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "pow"#) -}
409d2a1a6dd1dc699c5cd4e330b71844
  joyInterp362 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp364,
                  Joy.joyInterp363
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
dccfa5e3e53f4ad2bb7b0b1b288a1fd5
  joyInterp363 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (s1 :: Mascarpone.ProgState)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case s1 of wild { Mascarpone.State ds ds1 ->
                 case ds1 of wild1 {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                ((), Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> case xs of wild2 {
                        []
                        -> case Mascarpone.create3
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                     ((), Mascarpone.ProgState) #)
                           of {}
                        : x4 xs1
                        -> (# s,
                              (GHC.Tuple.(),
                               Mascarpone.State
                                 ds
                                 (GHC.Types.: @ Mascarpone.StackElem x4 xs1)) #) } } }) -}
b837217ad9d0d94da7b18b5a0efa3bed
  joyInterp364 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "popd"#) -}
d1c16b75e65bb2b6e93f31564d8f6d53
  joyInterp365 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp367,
                  Joy.joyInterp366
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
3944bcc486387f31f6b016bc6ad62043
  joyInterp366 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (s1 :: Mascarpone.ProgState)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case s1 of wild { Mascarpone.State ds ds1 ->
                 case ds1 of wild1 {
                   []
                   -> case Mascarpone.create3
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld,
                                ((), Mascarpone.ProgState) #)
                      of {}
                   : x3 xs
                   -> (# eta, (GHC.Tuple.(), Mascarpone.State ds xs) #) } }) -}
8df5b73295ae2ed05b9dde8fc603fae3
  joyInterp367 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "pop"#) -}
289a81aa1d7ab0ab017b1e115435d493
  joyInterp368 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp371,
                  Joy.joyInterp369
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
28865644e7155f6691adb2d9bfa26875
  joyInterp369 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Joy.$wjoy_ord ww1 ww2 w1 }) -}
4f805e3a36a1d646d7ba21161011151f
  joyInterp37 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp568
                   Joy.joyInterp38) -}
671307e87d81dcc9be6d3565bf014c44
  joyInterp370 ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Strictness: x -}
8c8a5e1eb707a55b8b5e54a015b9ab90
  joyInterp371 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ord"#) -}
775359db0a99cffa018f58cae8efbed7
  joyInterp372 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp373,
                  Joy.joy_or
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
59bcff2e73264b4475f025b9a50a3b4d
  joyInterp373 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "or"#) -}
47326f9aa7ec7bfc72644aa021fb6b18
  joyInterp374 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp375,
                  Joy.joy_opcase
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
36a20d35e119791680bbb1bd9526768a
  joyInterp375 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "opcase"#) -}
d98311d349368dd5d412b27ebf26f9ac
  joyInterp376 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp377,
                  Joy.joy_of
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
bc535f144444f22eb0994e6318abff2c
  joyInterp377 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "of"#) -}
b0941af0423aba899817aec9b90ef08a
  joyInterp378 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp379,
                  Joy.joy_nullary
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
b952a6b09423abb77f743c786c756fb7
  joyInterp379 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "nullary"#) -}
53e6ead7407bff08576121a2871b1a58
  joyInterp38 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp566
                   Joy.joyInterp39) -}
159828693c12cd7e83df4222c7d44401
  joyInterp380 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp381,
                  Joy.joy_null
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
3f28a63913ea4e636cbe19d8fc281892
  joyInterp381 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "null"#) -}
c5a512a7f33070ba479ff0692ee30a6e
  joyInterp382 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp383,
                  Joy.joy_not
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
cfb4fae7fa2edfed3f900ff27e2d0041
  joyInterp383 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "not"#) -}
8973064d85bc131a924867fcbdd79aef
  joyInterp384 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp387,
                  Joy.joyInterp385
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
9e485a9d5c142806cb7d5d4fe44cfadc
  joyInterp385 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Joy.$wjoy_neg ww1 ww2 w1 }) -}
7802d283783c318423b94bbd30b052ac
  joyInterp386 ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Strictness: x -}
f654f489db6ff7d25bccb798f2e9297b
  joyInterp387 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "neg"#) -}
39aa7b937d774425a443e6d2766f0090
  joyInterp388 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp389,
                  Joy.joy_name
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
749f351f192186862f1615628ab671b7
  joyInterp389 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "name"#) -}
84fdb55155be6673eec09d8049dbb9ee
  joyInterp39 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp564
                   Joy.joyInterp40) -}
b5f2aa484a523f7681b17826b294fe03
  joyInterp390 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp391,
                  Joy.joy_modf
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
5daf3606aea981b64fc3d48409dc812a
  joyInterp391 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "modf"#) -}
a245bf103a02db3a9145215671e20ce8
  joyInterp392 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp393,
                  Joy.joy_mktime
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
233bb2772ca231938d057eccdb29d62a
  joyInterp393 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "mktime"#) -}
d66039b0424dd39bec30d5d9963dbf77
  joyInterp394 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp395,
                  Joy.joy_min
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
c293d89ee6620604f82c6c12bd32c3b9
  joyInterp395 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "min"#) -}
8bbe2447160b6f0506a69d6b32cde197
  joyInterp396 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp397,
                  Joy.joy_maxint
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
0894e20918dcb68ae4e8b70c824b31d1
  joyInterp397 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "maxint"#) -}
32908b7e6d4fd9a38636fd7b100691f4
  joyInterp398 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp399,
                  Joy.joy_max
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
8b13f9a4b8bceece2c700d04a0f4dfc4
  joyInterp399 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "max"#) -}
5323ba9fcf1b90c9a69e8bb2d5bc9d33
  joyInterp4 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp643
                   Joy.joyInterp5) -}
6db461d2ea268b65b56e9416ea0a4311
  joyInterp40 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp562
                   Joy.joyInterp41) -}
9fe8be3d5c0ced121bbadee850f0c4e7
  joyInterp400 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp401,
                  Joy.joy_map
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
80310c2f7f763100d946e6dbae92cf8f
  joyInterp401 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "map"#) -}
b09549abb5f3a9707d7ab544405f9fba
  joyInterp402 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp403,
                  Joy.joy_manual
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
84803547927a088e95819f428754707f
  joyInterp403 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "manual"#) -}
3ce0fde01adafe6e0ab578c760c7abc5
  joyInterp404 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp405,
                  Joy.joy_logical
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
6b763f756f05956a24ccea2c465129a8
  joyInterp405 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "logical"#) -}
8e1237b33ae96f75a7d1109f1af07e03
  joyInterp406 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp407,
                  Joy.joy_log10
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
18270bbb888cf6cd6c6fd295a8b61109
  joyInterp407 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "log10"#) -}
7ad3befa223d4920a9eed5f0a12c0559
  joyInterp408 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp409,
                  Joy.joy_log
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
f82d1c41d4f18865cb411be4b9786aae
  joyInterp409 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "log"#) -}
8264ebe6571b0269a4bda24a49255874
  joyInterp41 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp560
                   Joy.joyInterp42) -}
9a8fa314d2806f6a257162f49296ceb6
  joyInterp410 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp411,
                  Joy.joy_localtime
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
f39fd4bd364808ce83d6e5d546167af9
  joyInterp411 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "localtime"#) -}
5b032748af9fef8a6cac7b4fb19bfe6a
  joyInterp412 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp413,
                  Joy.joy_list
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
a283bb6a32913128dff4110446760870
  joyInterp413 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "list"#) -}
eb006bfaf4b4c2c85f61d9e5037b9d01
  joyInterp414 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp415,
                  Joy.joy_linrec
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
0b872baaf1edf0e029b4f4aeb192f71e
  joyInterp415 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "linrec"#) -}
d1f5be431182fc8fa36c12afc0c8be49
  joyInterp416 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp417,
                  Joy.joy_leaf
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
44cc5b609b8a2443df548cc6348916bf
  joyInterp417 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "leaf"#) -}
81d0bdc4feb37d151e4da4b1262abf9d
  joyInterp418 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp419,
                  Joy.joy_ldexp
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
5a04b9608c621dda82dc2a05a6baba42
  joyInterp419 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ldexp"#) -}
e116ca1ccde833fc2279ced02d1048f6
  joyInterp42 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp558
                   Joy.joyInterp43) -}
1502912523963cdafac8225641c7dd7c
  joyInterp420 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp421,
                  Joy.joy_intern
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
739f8f916a8e5b3f5158543f38d05257
  joyInterp421 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "intern"#) -}
128891c9bd0613d213b6650384e3317d
  joyInterp422 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp423,
                  Joy.joy_integer
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
4dd892f95150de4f7cf5ebebc54ba0c5
  joyInterp423 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "integer"#) -}
b9f5ab44d9e0865f39f489d86ed1d43e
  joyInterp424 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp425,
                  Joy.joy_infra
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
d9b5638e3c4f451e74e19a56f1dcecf5
  joyInterp425 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "infra"#) -}
ba939234119eecedaef33b2d08ba8f6e
  joyInterp426 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp427,
                  Joy.joy_include
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
9ec7c088ce0dfa3439bf9f2990072c28
  joyInterp427 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "include"#) -}
a1a2061ec0bd9b9e81a03ba29100bf03
  joyInterp428 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp429,
                  Joy.joy_in
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
dd7576d00970eee7831dd49856df274d
  joyInterp429 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "in"#) -}
585abe191824d2595ced4052959597da
  joyInterp43 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp556
                   Joy.joyInterp44) -}
8345d5738b0e241e5a4f39c3a560c7c1
  joyInterp430 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp431,
                  Joy.joy_ifte
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
ec221a2c5b270620660a8b9ce4d9b29c
  joyInterp431 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ifte"#) -}
fbfe9208e7d794693aad3a90e35abdf9
  joyInterp432 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp433,
                  Joy.joy_ifstring
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
ebac3889f71020c29237bc3b9d723556
  joyInterp433 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ifstring"#) -}
9d76af03a4c6d90a1635b2acc2354944
  joyInterp434 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp435,
                  Joy.joy_ifset
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
0a44bae6882778dafa014e8acb48700e
  joyInterp435 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ifset"#) -}
f20151d006b0c119df442f4e5f4d6330
  joyInterp436 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp437,
                  Joy.joy_iflogical
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
d7a6734c6021713ca21e2ce26b9e6217
  joyInterp437 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "iflogical"#) -}
f6dc318366d8696af2095b4cf84719e5
  joyInterp438 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp439,
                  Joy.joy_iflist
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
0fc6040cef0d09d478eda25a68780812
  joyInterp439 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "iflist"#) -}
ca7f16a2f2c89a635922a00e17e9ff8c
  joyInterp44 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp554
                   Joy.joyInterp45) -}
496c3280df03acf6567ce1a5d26656d2
  joyInterp440 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp441,
                  Joy.joy_ifinteger
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
924bf61693d6b15e16557d3ee27c0e88
  joyInterp441 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ifinteger"#) -}
ba7087fed204a54b7e2d0f90f9fbbf16
  joyInterp442 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp443,
                  Joy.joy_iffloat
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
f16f22a641ea8d710eae5e63c5666862
  joyInterp443 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "iffloat"#) -}
b09a197ca39be97da3177afe6499f8c5
  joyInterp444 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp445,
                  Joy.joy_iffile
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
b7648898873d5ab0ac603266954018e3
  joyInterp445 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "iffile"#) -}
d1a04949b55ed3630f2f51a60405394f
  joyInterp446 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp447,
                  Joy.joy_ifchar
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
65e0f77838b85431e68e415858db271b
  joyInterp447 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ifchar"#) -}
49783bb6fb47f98a3cfe020291fd6368
  joyInterp448 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp450,
                  Joy.joyInterp449
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
2defdc29c27dfa2748588d8addf7d210
  joyInterp449 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta1 :: Mascarpone.ProgState)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, (GHC.Tuple.(), eta1) #)) -}
4769be77f7dd1263075cb59767dfc79a
  joyInterp45 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp552
                   Joy.joyInterp46) -}
0466f9e46479b3ec6a5c60960b5f0ea4
  joyInterp450 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "id"#) -}
e690c62ef513e55e79911b4afddc26ce
  joyInterp451 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp452,
                  Joy.joy_i
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
2c42ddd6c654a7141499ae6ce2dee79c
  joyInterp452 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "i"#) -}
455f6c7a484edfdd31a9d92cf2a3e915
  joyInterp453 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp454,
                  Joy.joy_helpdetail
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
79ae279bef1185bc74de23e99a04374c
  joyInterp454 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "helpdetail"#) -}
677acc0eea20ba01f7ef06620842811b
  joyInterp455 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp456,
                  Joy.joy_help
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
8d5113dad165b81592c0276241e9f587
  joyInterp456 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "help"#) -}
d1cbe64c44e09193700a68e7e1347900
  joyInterp457 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp458,
                  Joy.joy_has
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
1cce456552870a3b93b44be8dbcddfde
  joyInterp458 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "has"#) -}
5e02223589d200af9315c655a0858d04
  joyInterp459 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp460,
                  Joy.joy_gmtime
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
870e05685333b755e6c6294d2116b028
  joyInterp46 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp550
                   Joy.joyInterp47) -}
d2acb4acec4c1a07d262242c8ed4950f
  joyInterp460 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "gmtime"#) -}
37096851e724b33b16b94b40abc77b07
  joyInterp461 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp462,
                  Joy.joy_getenv
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
fb64b002682c40f63820ed9c607db8a6
  joyInterp462 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "getenv"#) -}
4f98f4df8db109ff38d9f462c01a878b
  joyInterp463 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp464,
                  Joy.joy_get
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
e743beb299c69772e5fa4f12e6b49d31
  joyInterp464 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "get"#) -}
9053fa6e70e587f09644e27a1b4b5382
  joyInterp465 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp466,
                  Joy.joy_genrec
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
272b318cca634e87ac227797c589845f
  joyInterp466 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "genrec"#) -}
2488d4123854498853fa0e0c631c7d7b
  joyInterp467 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp468,
                  Joy.joy_gc
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
ef424ab89201eae305b5cea1c92164c5
  joyInterp468 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "gc"#) -}
6e88ead1f51b5eee4292e6bc07e78f85
  joyInterp469 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp470,
                  Joy.joy_fwrite
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
f16dd285f26b43866db1c98a0180931d
  joyInterp47 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp548
                   Joy.joyInterp48) -}
8b7083cf1e8162b7399eb587dce8fff7
  joyInterp470 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fwrite"#) -}
9fde10ce64dceeea0e2e80a36f681dff
  joyInterp471 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp472,
                  Joy.joy_ftell
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
4a6012c4a21f50563898ebef7df85ef6
  joyInterp472 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ftell"#) -}
b5f1f7e1879722771c97fde179b4dca7
  joyInterp473 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp474,
                  Joy.joy_fseek
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
1f5d66fd9cf3b3ff111f3643eab3cae5
  joyInterp474 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fseek"#) -}
8200a9eebfad3309b554908bc4499a5a
  joyInterp475 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp476,
                  Joy.joy_frexp
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
8406c8cd4c3fc2a92205fcb5f95e9e40
  joyInterp476 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "frexp"#) -}
f4249d8b606f21735a46dec656b3b97e
  joyInterp477 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp478,
                  Joy.joy_frename
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
b7cb7010e239e479847843605151420f
  joyInterp478 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "frename"#) -}
fe574e1ffd8437faf75a3cf7e7c252b9
  joyInterp479 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp480,
                  Joy.joy_fremove
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
6f821ddbccc02eb9c20cc6f776e86059
  joyInterp48 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp546
                   Joy.joyInterp49) -}
da73a497a8dec32153f6103a76fa88ab
  joyInterp480 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fremove"#) -}
2da7b422ae464b85ff98afa0c4289581
  joyInterp481 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp482,
                  Joy.joy_fread
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
f4af28c93bda64644528b4ffe91903fd
  joyInterp482 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fread"#) -}
b26ae26b2295fb97c959901d02d6a55e
  joyInterp483 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp484,
                  Joy.joy_fputstring
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
c33d79b292e9fc4f06b6c7627ca0130a
  joyInterp484 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fputstring"#) -}
edc8e382d2c14a4517dec1110c244ef6
  joyInterp485 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp486,
                  Joy.joy_fputchars
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
0bdadeb5dd292eb22781403bd1171f27
  joyInterp486 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fputchars"#) -}
c742a297ced0dfbe53c5123650c6ed0a
  joyInterp487 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp488,
                  Joy.joy_fputch
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
99f917a53dca7e53ba5f8a2fc8ed33fd
  joyInterp488 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fputch"#) -}
2dab7e16246bce8e2a84ab693cede134
  joyInterp489 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp490,
                  Joy.joy_fput
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
0774e53c2f01fa6aad1f55455b45476c
  joyInterp49 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp544
                   Joy.joyInterp50) -}
86de820ea61aaf60b470ca81ea6964ed
  joyInterp490 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fput"#) -}
188eba73b52a139574e5502cd9b7de9c
  joyInterp491 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp492,
                  Joy.joy_formatf
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
63ee733e03b06e3ca03246115978e337
  joyInterp492 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "formatf"#) -}
5a85cb3217838cf30d4ae360b616a2c8
  joyInterp493 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp494,
                  Joy.joy_format
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
35deabad53204ee1d520e88351d3689a
  joyInterp494 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "format"#) -}
2dc8a8cbd0c5494faf72e5d799360e96
  joyInterp495 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp496,
                  Joy.joy_fopen
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
55f0dae76dd5f0ea16aaacb21e53f3c2
  joyInterp496 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fopen"#) -}
b812f75cc5ee7ad77916e97a06f2239d
  joyInterp497 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp498,
                  Joy.joy_fold
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
2403ece562aba16690302733f2c480af
  joyInterp498 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fold"#) -}
cbb9215c6dd6f4fe532144c822bda202
  joyInterp499 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp500,
                  Joy.joy_floor
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
8e79f8af6eec379edbceeed1ee4cd2b3
  joyInterp5 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp639
                   Joy.joyInterp6) -}
2b0159a7d27cc1e747f1b81c446b2191
  joyInterp50 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp542
                   Joy.joyInterp51) -}
27e985095fc7db0d45a3fbe4cb12dcf5
  joyInterp500 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "floor"#) -}
d5afebb5c749649a2f0e3a4950819e02
  joyInterp501 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp502,
                  Joy.joy_float
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
e5b6cf4a6aec4fa5c21f5056cae8e047
  joyInterp502 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "float"#) -}
a1a0a329c13cd166cdc65569fe100518
  joyInterp503 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp504,
                  Joy.joy_first
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
95cc260c63fa33bc624b9565509aee73
  joyInterp504 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "first"#) -}
d481dabfdf243ed88d979e212fd45ef7
  joyInterp505 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp506,
                  Joy.joy_filter
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
cdebf547920ca3f681657318c0ddf53b
  joyInterp506 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "filter"#) -}
cfd1285b7c549b8be7a4f2715f065ffb
  joyInterp507 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp508,
                  Joy.joy_file
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
f1f032dc56ad4805c8b951371cb9deda
  joyInterp508 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "file"#) -}
783bf98f05937f6327f22c54bfc1001e
  joyInterp509 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp510,
                  Joy.joy_fgets
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
9c0e44ec73764daca0c9eeb43a4ad133
  joyInterp51 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp540
                   Joy.joyInterp52) -}
c6fdddacb0621be9a4722eb5c8464273
  joyInterp510 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fgets"#) -}
4da06c163ea06ec9255113415d6c64d7
  joyInterp511 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp512,
                  Joy.joy_fgetch
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
fec282f0a527407e120c2c8428bc5cf6
  joyInterp512 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fgetch"#) -}
e0967c4e4e4fd7e497067698aad24862
  joyInterp513 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp514,
                  Joy.joy_fflush
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
b3bdc64691c51621fd84d99a006134a8
  joyInterp514 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fflush"#) -}
368492169a98c372413416f78f1aa1e5
  joyInterp515 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp516,
                  Joy.joy_ferror
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
2df9fecae6911af7103e47111224f5b7
  joyInterp516 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ferror"#) -}
6ca9a800b625dca9dd5741246ef2aa0b
  joyInterp517 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp518,
                  Joy.joy_feof
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
fdac20fc3fd90e8a9672c9831539714a
  joyInterp518 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "feof"#) -}
006afc1cec7daf2752f88f916d428f1e
  joyInterp519 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp520,
                  Joy.joy_fclose
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
a2caf085c78ebacfcead841f99b68a77
  joyInterp52 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp536
                   Joy.joyInterp53) -}
00bfd90212d21c8c6b36e420f7428b83
  joyInterp520 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "fclose"#) -}
cc66119276c9fdece7a6ecf15639abee
  joyInterp521 :: ([GHC.Types.Char], Mascarpone.Effect)
  {- Unfolding: ((Joy.joyInterp525,
                  Joy.joyInterp522
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
88fc5f5c7afbaf7c0d72349df898add9
  joyInterp522 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U,U)><S,U>,
     Unfolding: InlineRule (2, True, False)
                (\ (eta1 :: Mascarpone.ProgState)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s,
                    (GHC.Tuple.(),
                     case eta1 of wild { Mascarpone.State ds ds1 ->
                     Mascarpone.State
                       ds
                       (GHC.Types.: @ Mascarpone.StackElem Joy.joyInterp_x1 ds1) }) #)) -}
04ae9cf9cf4f49e8ebe9860f3048ae63
  joyInterp523 :: Mascarpone.Symbol
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Mascarpone.Num Joy.joyInterp524) -}
8f73b6b2a18406e2869eee4b6eaf1b64
  joyInterp524 :: GHC.Types.Double
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.D# 0.0##) -}
b1d0582ddc63d0a419cf310eb707f1c4
  joyInterp525 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "false"#) -}
239c59a17005f391311492399dbc7b2e
  joyInterp526 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp527,
                  Joy.joy_exp
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
5c0ad3c69f623df238a2dc41cc9fcf95
  joyInterp527 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "exp"#) -}
8c9651c92d0dd8bcf2e40b5fb5c04c46
  joyInterp528 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp529,
                  Joy.joy_equal
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
e4e339854b6dacfd0fcfde5c1afee755
  joyInterp529 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "equal"#) -}
d3008aaad2854b894231140b6a2f5de4
  joyInterp53 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp534
                   Joy.joyInterp54) -}
f9b10a0b1ff1cedfa836270c0047ccfe
  joyInterp530 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp531,
                  Joy.joy_eq
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
e51b9529430f860f4d4fdaed03fdd91b
  joyInterp531 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "eq"#) -}
569def4120ec8fa1d1e6f4d6e6cdacfe
  joyInterp532 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp533,
                  Joy.joy_enconcat
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
4ec72d8bb5e8c74b0debee2bb70c886a
  joyInterp533 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "enconcat"#) -}
b91c432c58e70066c56b041e721cc9d4
  joyInterp534 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp535,
                  Joy.joy_echo
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
100d34eefd6056424c00b63eb7078ff4
  joyInterp535 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "echo"#) -}
f8776361fecca9d680cd10d22abc3b0a
  joyInterp536 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp539,
                  Joy.joyInterp537
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
cedafbc368518485d505b8b37d171968
  joyInterp537 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Joy.$wjoy_dupd ww1 ww2 w1 }) -}
72b893d41f54eb0dd39334527401ade6
  joyInterp538 ::
    [Mascarpone.StackElem]
    -> Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,U(U,U)><S,U> -}
665061b1a0765b9306d2424405d931b7
  joyInterp539 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "dupd"#) -}
2dccb3cde96498dfcc56b3309849fab3
  joyInterp54 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp532
                   Joy.joyInterp55) -}
53198ebc56cccadb232e7a234cd3d809
  joyInterp540 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp541,
                  Mascarpone.defCodepage28
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
a299ef159fed87f5715590568a0583f6
  joyInterp541 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "dup"#) -}
d8a6c76bc78ce68b18b436d5c36904f5
  joyInterp542 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp543,
                  Joy.joy_drop
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
54d545b991128c85b3ea4b1c2bebc109
  joyInterp543 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "drop"#) -}
c537282827c6fa7ec651691d87d354ca
  joyInterp544 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp545,
                  Joy.joy_div'
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
aa4722e5f9962b38accb52286161385b
  joyInterp545 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "div"#) -}
d9f617745e7f6c1b9983c5e587379f2f
  joyInterp546 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp547,
                  Joy.joy_dip
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
00fffed4c74acf7411c79b5b55d795b4
  joyInterp547 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "dip"#) -}
cc56ac0a20421dbc80f8f1b5f523370d
  joyInterp548 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp549,
                  Joy.joy_cosh
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
0575305c8538ccf9680c488cb7d98cdf
  joyInterp549 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "cosh"#) -}
8938292e0fb72a31bd2168c723b10de5
  joyInterp55 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp530
                   Joy.joyInterp56) -}
a25986ddcd2eddcd75ce87c06def6361
  joyInterp550 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp551,
                  Joy.joy_cos
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
3a47df4768f30103bbbb42b466cb1871
  joyInterp551 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "cos"#) -}
24e359681fe067fa039891472001e49d
  joyInterp552 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp553,
                  Joy.joy_conts
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
f4077c0ef35ff8c439c574086fcb2889
  joyInterp553 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "conts"#) -}
509c8500021408cb884e0659d16da133
  joyInterp554 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp555,
                  Joy.joy_construct
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
6751dc90a928a408e94f218dad804d3b
  joyInterp555 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "construct"#) -}
cd51500d860d61215096339d4c950d94
  joyInterp556 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp557,
                  Joy.joy_cons
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
175e168274634093e03de33312d0a5f5
  joyInterp557 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "cons"#) -}
aba91f733f7848396250bab75fc9750e
  joyInterp558 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp559,
                  Joy.joy_condlinrec
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
92c4d47c418bcedef454a636967eedd2
  joyInterp559 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "condlinrec"#) -}
2f05dd8d548dcf066467a859c7ec701c
  joyInterp56 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp528
                   Joy.joyInterp57) -}
96c2b4bbcbc6f1b78a1f3df370ee05b8
  joyInterp560 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp561,
                  Joy.joy_cond
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
a6bce7f8840ca54b75c9a4c4df135ca8
  joyInterp561 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "cond"#) -}
8c3991546069fd2cf4db0c8bf1ad2947
  joyInterp562 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp563,
                  Joy.joy_concat
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
2e694c6def71009a89000173381feab5
  joyInterp563 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "concat"#) -}
4e090451eba565d90f00d156474a4875
  joyInterp564 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp565,
                  Joy.joy_compare
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
7968fe32e0254fa623347261ddedb9da
  joyInterp565 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "compare"#) -}
3b81421ce2815ef01f905d46413a7e59
  joyInterp566 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp567,
                  Joy.joy_clock
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
b11ea1e330fd59d7dbb940c0e03a30d5
  joyInterp567 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "clock"#) -}
20c076715155a77456f6bea1e2adc477
  joyInterp568 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp569,
                  Joy.joy_cleave
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
e78957e16888d0c8f87586f9496ec9a0
  joyInterp569 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "cleave"#) -}
6ae25be41410647197ca56ddc317640c
  joyInterp57 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp526
                   Joy.joyInterp58) -}
e2e7c3df1f6f995a41b3b43e09403450
  joyInterp570 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp573,
                  Joy.joyInterp571
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
8f692a99c6457ff4219fbbb0feeff1d4
  joyInterp571 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Joy.$wjoy_chr ww1 ww2 w1 }) -}
70af8b6ed9d673ab4aad6d31291b7891
  joyInterp572 ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Strictness: x -}
4995eee80ac83e704fbb093c051e445e
  joyInterp573 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "chr"#) -}
ef96975581cd9e1dfb3cac7876bcb5c9
  joyInterp574 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp576,
                  Joy.joyInterp575
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
1f06085d5d1e576a044e80e3f3653f30
  joyInterp575 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Joy.$wjoy_choice ww1 ww2 w1 }) -}
855d231d18a1f9b8f769ca8dd17b8121
  joyInterp576 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "choice"#) -}
d7e43c372c5512a696f02c94bf9333f7
  joyInterp577 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp578,
                  Joy.joy_char
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
0c63edc863fd03a78fa251c1c4bf0188
  joyInterp578 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "char"#) -}
42c943df5d18b159be0b7784afca7c64
  joyInterp579 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp580,
                  Joy.joy_ceil
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
e255fc6c190866214ae6d49d82f40800
  joyInterp58 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp521
                   Joy.joyInterp59) -}
da5736599a6d1a24b4d3340a065df1e7
  joyInterp580 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "ceil"#) -}
38f95a77a0277cd0db6820f5b4da5605
  joyInterp581 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp582,
                  Joy.joy_case
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
05aa3c0f89e416d551d08451934f5ef5
  joyInterp582 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "case"#) -}
0d79fbd5164c8aff1d36d4199b2e5ee1
  joyInterp583 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp584,
                  Joy.joy_branch
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
86ecf46aec7e252d87c3face2880844a
  joyInterp584 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "branch"#) -}
d188d6305a7b12d13f353eb9007f243e
  joyInterp585 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp586,
                  Joy.joy_body
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
488c6f819479038fbac6f175477a4bb4
  joyInterp586 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "body"#) -}
1054031ad513ddb24a52d290c5944ba9
  joyInterp587 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp588,
                  Joy.joy_binrec
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
944b4f58adf85b89d745c68fce7949dc
  joyInterp588 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "binrec"#) -}
b95e4f626e43e5bba4f226126b3bb55b
  joyInterp589 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp590,
                  Joy.joy_binary
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
a80a2c509325d48aeca0b3dbd57f3b64
  joyInterp59 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp519
                   Joy.joyInterp60) -}
a0cbf7f6e70d63148c40145f21691b5b
  joyInterp590 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "binary"#) -}
e039c39200a20e0d2f8da4c62730e94a
  joyInterp591 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp592,
                  Joy.joy_autoput
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
075274503a01b9d77da0c3b0df7ba320
  joyInterp592 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "autoput"#) -}
b634f96822aaf3c51008cacce3aa0d87
  joyInterp593 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp594,
                  Joy.joy_atan2
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
f58413641212d00f51bb72bc900bf40b
  joyInterp594 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "atan2"#) -}
e2a82290e14cbcb606f5f8d2284c653e
  joyInterp595 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp596,
                  Joy.joy_atan
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
a54e31c3ecb459e3cb971aa78b1e42a4
  joyInterp596 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "atan"#) -}
557adea1357a2ea8c5457d6764672f3f
  joyInterp597 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp598,
                  Joy.joy_at
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
4161745d5c08479a4dbacca842147021
  joyInterp598 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "at"#) -}
5d10bd7f4ffedd0aba8ab342f9bafa76
  joyInterp599 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp600,
                  Joy.joy_asin
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
36b1962c5219d173a77a93750df57f79
  joyInterp6 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp635
                   Joy.joyInterp7) -}
0140ecafc77a5bde92ed2b584837b83b
  joyInterp60 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp517
                   Joy.joyInterp61) -}
eac36db917e9313d3e9e2b5f11b91844
  joyInterp600 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "asin"#) -}
c45cf7217b7a5a7d0e2a927ae98d5bdf
  joyInterp601 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp602,
                  Joy.joy_argv
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
da6443ab650bab3e58493334e6912b86
  joyInterp602 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "argv"#) -}
2ea63e44aed7c7822dab842713d0c5dd
  joyInterp603 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp604,
                  Joy.joy_argc
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
4e01d5f5e146ffde74efd8402a58694c
  joyInterp604 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "argc"#) -}
4d58edf5111d445aef1b7bbb7037fdf0
  joyInterp605 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp606,
                  Joy.joy_app4
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
1ea7bbdd0b75867c98bc3e7d931e8317
  joyInterp606 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "app4"#) -}
29cb3dade4279a2ba3b24a9b34e16df7
  joyInterp607 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp608,
                  Joy.joy_app3
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
7eda4735c7c1e7cc2a7aaed9d70fa9bd
  joyInterp608 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "app3"#) -}
7ef9a8376fe4c4cf108367fd423640ef
  joyInterp609 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp610,
                  Joy.joy_app2
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
945628dae3a208b658112690bd4bd7bf
  joyInterp61 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp515
                   Joy.joyInterp62) -}
d412a325bfa1de70b6abef28dfd929f1
  joyInterp610 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "app2"#) -}
31f819b53fe8a837c1d89e9209249483
  joyInterp611 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp612,
                  Joy.joy_app12
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
f01102974059da3fa7121709b22060ee
  joyInterp612 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "app12"#) -}
b58e3bce7e786270ac3aebf0215c2848
  joyInterp613 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp614,
                  Joy.joy_app11
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
01f6ad472b4b4a78ffd866bad4a39665
  joyInterp614 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "app11"#) -}
935262c03625da2b5de804512453c34f
  joyInterp615 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp616,
                  Joy.joy_app1
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
5b7407567a29ffc8c2becce2b477d64e
  joyInterp616 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "app1"#) -}
a4e462ba2f816de7a3d22417a4eac9ce
  joyInterp617 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp618,
                  Joy.joy_and
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
d098572f74bf1532f42beb4e125e9d91
  joyInterp618 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "and"#) -}
e7950537d74a34f2c2aea87c915454dd
  joyInterp619 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp620,
                  Joy.joy_all
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
ee6f44d23e382cc13355e4522b6e1018
  joyInterp62 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp513
                   Joy.joyInterp63) -}
8237ff42bd10186979bf2d8a64a87f5f
  joyInterp620 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "all"#) -}
74881e108216fa916b09be377681259f
  joyInterp621 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp624,
                  Joy.joyInterp622
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
94e1ff832b1685ef78c6401b8f8f7492
  joyInterp622 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Joy.$wjoy_abs ww1 ww2 w1 }) -}
2e9589035bbe08a4d2685b11d60c8198
  joyInterp623 ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Strictness: x -}
32db10a1b312383c2c32a8660b2e6061
  joyInterp624 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "abs"#) -}
78650d8f1012aa8963fa3595e2d47385
  joyInterp625 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp626,
                  Joy.joy_abort
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
a8baadd05def3ab9691a2b0353c2a330
  joyInterp626 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "abort"#) -}
1f57af7ec59557b38b2e5c7cf0306712
  joyInterp627 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp628,
                  Joy.joy_leq
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
44dbb6d52aba7435222aec9803f29764
  joyInterp628 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ">="#) -}
9ddd22d669449c940333de04e555412e
  joyInterp629 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp630,
                  Joy.joy_lt
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
cc56c675d80671853e524297a5a9bb81
  joyInterp63 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp511
                   Joy.joyInterp64) -}
631ff4d328e9f698d4d7603f8fa903c4
  joyInterp630 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ">"#) -}
7b6128b159bdc9ce0430f2aa77e4c19c
  joyInterp631 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp632,
                  Joy.joy_geq
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
3e59c56680f24b4ffddb80762df899cf
  joyInterp632 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "<="#) -}
64456f2e9f10a90211247b66b0b2359e
  joyInterp633 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp634,
                  Joy.joy_gt
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
ac8c2b7b01d61419845a00fa1af91356
  joyInterp634 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "<"#) -}
78a463978384d9cae051f19ce1592173
  joyInterp635 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp638,
                  Joy.joyInterp636
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
69fc99d9c35854ed053aa04fad5ac7de
  joyInterp636 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Joy.$wjoy_div ww1 ww2 w1 }) -}
b7f56434f7503e4b1801689b764a2403
  joyInterp637 ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Strictness: x -}
38b1ec4713be548e552fa1ae1ea6a99b
  joyInterp638 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "/"#) -}
9c0dd78c6b0d50670d0f64f9c2dadd3b
  joyInterp639 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp642,
                  Joy.joyInterp640
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
157e2ebc1f5333b9e5c2ca1f3400b35b
  joyInterp64 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp509
                   Joy.joyInterp65) -}
dee22d91e62c0b8aeb32cb29a7b8360e
  joyInterp640 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Joy.$wjoy_sub ww1 ww2 w1 }) -}
84194e222f3dd2910b54462a38a6d130
  joyInterp641 ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Strictness: x -}
f032f8f8f5ba6fc4eaf6bbd4e72e3a64
  joyInterp642 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "-"#) -}
48a90a6f36aa5cde67432afb77ae9ee7
  joyInterp643 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp646,
                  Joy.joyInterp644
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
6ddc5a1a7810d9e1d31b1b5972bb44c8
  joyInterp644 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Joy.$wjoy_add ww1 ww2 w1 }) -}
fd16f3ed9901d7ce8f998d173f9dbe9a
  joyInterp645 ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Strictness: x -}
21eaab8fdd6979c708a0163959f72d55
  joyInterp646 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "+"#) -}
98b34504b8db0d8db8b5e63e588b1abf
  joyInterp647 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp650,
                  Joy.joyInterp648
                    `cast`
                  (Trans
                       (<Mascarpone.ProgState>_R
                        ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                       (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                 <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))))) -}
d247892af6f03c44f124c16d08766042
  joyInterp648 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Joy.$wjoy_mul ww1 ww2 w1 }) -}
7548e4677f4fa36f71dc057052bc94d5
  joyInterp649 ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Strictness: x -}
8932c94d647e3f7b375774d4499c4462
  joyInterp65 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp507
                   Joy.joyInterp66) -}
59111aa97fbfa12cb75e4000909113c5
  joyInterp650 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "*"#) -}
b8dfd564bbd86488f64ba1fa8b9cf670
  joyInterp651 ::
    ([GHC.Types.Char],
     Control.Monad.Trans.State.Lazy.StateT
       Mascarpone.ProgState GHC.Types.IO ())
  {- Unfolding: ((Joy.joyInterp652,
                  Joy.joy_neq
                    @ (Control.Monad.Trans.State.Lazy.StateT
                         Mascarpone.ProgState GHC.Types.IO ()))) -}
eef0dcde2adef2eff53ad171011fdc9b
  joyInterp652 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "!="#) -}
8f75f397e43ccdffb41d48224d391c9c
  joyInterp653 ::
    ([GHC.Types.Char], Mascarpone.Effect)
    -> ([Mascarpone.Symbol], Mascarpone.Effect)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(1*U,1*U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: ([GHC.Types.Char], Mascarpone.Effect)) ->
                 (case ds of wild { (,) x y ->
                  GHC.Base.build
                    @ Mascarpone.Symbol
                    (\ @ b1
                       (c :: Mascarpone.Symbol -> b1 -> b1)[OneShot]
                       (n :: b1)[OneShot] ->
                     GHC.Base.foldr
                       @ GHC.Types.Char
                       @ b1
                       (GHC.Base.mapFB
                          @ Mascarpone.Symbol
                          @ b1
                          @ GHC.Types.Char
                          c
                          Mascarpone.Chr)
                       n
                       x) },
                  case ds of wild { (,) x y -> y })) -}
b5d89897091a5952207c87bdef590270
  joyInterp66 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp505
                   Joy.joyInterp67) -}
d6cda74b0c7b92b7b29858f0161af2b4
  joyInterp67 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp503
                   Joy.joyInterp68) -}
00046aa2b9678438a2d71d9961d76faa
  joyInterp68 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp501
                   Joy.joyInterp69) -}
dfc1797f64aa81c432f2a8beb866ec11
  joyInterp69 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp499
                   Joy.joyInterp70) -}
a8f190ae3c50e43f747d56b0071489d3
  joyInterp7 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp633
                   Joy.joyInterp8) -}
9e8d985d04b020d725bf6ec0cb63ea3e
  joyInterp70 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp497
                   Joy.joyInterp71) -}
08419fe6e3c12967b0dab82272d78d7c
  joyInterp71 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp495
                   Joy.joyInterp72) -}
9e6cae1407b8ec0748f53ead53574fc5
  joyInterp72 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp493
                   Joy.joyInterp73) -}
829dde74bbf3183b2adb79fd10813179
  joyInterp73 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp491
                   Joy.joyInterp74) -}
ce0b2a93d4cf72b80b668e6e592f5c0c
  joyInterp74 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp489
                   Joy.joyInterp75) -}
76934a7cc7398a90a7890ce5ecd41b71
  joyInterp75 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp487
                   Joy.joyInterp76) -}
3ada72e0519381e079f514110139d983
  joyInterp76 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp485
                   Joy.joyInterp77) -}
af144a1e8ac49eadcc696ee6acd2d27e
  joyInterp77 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp483
                   Joy.joyInterp78) -}
414d04e275df329530dba134a4fe3d1c
  joyInterp78 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp481
                   Joy.joyInterp79) -}
0585509074e57a1ca48071b35c95963f
  joyInterp79 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp479
                   Joy.joyInterp80) -}
549d3330ff0ded738fcc809aabf1c92d
  joyInterp8 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp631
                   Joy.joyInterp9) -}
05070d34ba82e4935a852477beb91960
  joyInterp80 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp477
                   Joy.joyInterp81) -}
cd434aef0f9ef86680cf990800076588
  joyInterp81 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp475
                   Joy.joyInterp82) -}
df5db0aa2f492ffd6993b2a5e4a1e54f
  joyInterp82 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp473
                   Joy.joyInterp83) -}
a9c69c04dabcd38d1cc6a85b56f51258
  joyInterp83 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp471
                   Joy.joyInterp84) -}
5b717a710206c98ac2e581e25f7c114a
  joyInterp84 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp469
                   Joy.joyInterp85) -}
d61daa5b940e30d378861e77949ee20a
  joyInterp85 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp467
                   Joy.joyInterp86) -}
e0793353d7005dc22dffb4129f4df98e
  joyInterp86 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp465
                   Joy.joyInterp87) -}
e614003cde63024c6ef5092392a20743
  joyInterp87 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp463
                   Joy.joyInterp88) -}
76d5784db1d2af284af2ad2961881750
  joyInterp88 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp461
                   Joy.joyInterp89) -}
7ef06fde454078ca04118713e336d843
  joyInterp89 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp459
                   Joy.joyInterp90) -}
feabff0fb6019a82516dd7fa0a137b8e
  joyInterp9 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp629
                   Joy.joyInterp10) -}
b3919f7c06c58698457994af81a26f9b
  joyInterp90 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp457
                   Joy.joyInterp91) -}
3942a92f36114374e19bbc23e3cdede5
  joyInterp91 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp455
                   Joy.joyInterp92) -}
3fb5de5511640048b4f12bf8444550fd
  joyInterp92 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp453
                   Joy.joyInterp93) -}
df3336868c8142745f199a913c14aa99
  joyInterp93 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp451
                   Joy.joyInterp94) -}
426b417515c2cc6228fed7d64f2e4a3f
  joyInterp94 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp448
                   Joy.joyInterp95) -}
df9ef322ec3df5e26b77c620986e6c08
  joyInterp95 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp446
                   Joy.joyInterp96) -}
d2580534632c37292ff27cbcc78a85c2
  joyInterp96 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp444
                   Joy.joyInterp97) -}
6727a7d40708c8246c268635031c840c
  joyInterp97 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp442
                   Joy.joyInterp98) -}
75d44e4bc944d51929cc611ddfaf4e4b
  joyInterp98 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp440
                   Joy.joyInterp99) -}
6917151164555f90f81691b35100268a
  joyInterp99 :: [([GHC.Types.Char], Mascarpone.Effect)]
  {- Unfolding: (GHC.Types.:
                   @ ([GHC.Types.Char], Mascarpone.Effect)
                   Joy.joyInterp438
                   Joy.joyInterp100) -}
45ed0dd78f799c1aec51ea2cc4b40d3d
  joyInterp_x1 :: Mascarpone.StackElem
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Mascarpone.Symb Joy.joyInterp523) -}
c020da89ce70babd5ad66562e46ede54
  joyInterp_x3 :: Mascarpone.StackElem
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Mascarpone.Symb Joy.joyInterp234) -}
b45b533980e31739e59a140a9a374be1
  joy_abort :: a
  {- Strictness: x -}
0759ed45b5aa98ea51dd9652dedf5548
  joy_abs ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Joy.joyInterp622
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
7de2c8a528cdc2333101e99368508413
  joy_add ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Joy.joyInterp644
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
5cde5cf36fa5b2d6bd837bb10764dfdc
  joy_all :: a
  {- Strictness: x -}
c9c55a060ec8a991493f516355415624
  joy_and :: a
  {- Strictness: x -}
12f6b62c3e6b14eabd9a45c08b099f57
  joy_app1 :: a
  {- Strictness: x -}
30b9a4fddfac05174bd7d93470059be3
  joy_app11 :: a
  {- Strictness: x -}
929fbebf9fc9f506f659cf2db55faf4b
  joy_app12 :: a
  {- Strictness: x -}
0ef823051df6b15ce5980125eab9da8f
  joy_app2 :: a
  {- Strictness: x -}
945b5eb8811c7ae8c05be34338c9c722
  joy_app3 :: a
  {- Strictness: x -}
5a96d41dcf0968bcc4a928f6afaa4c24
  joy_app4 :: a
  {- Strictness: x -}
74e74f315b6dc13624041c598eeaa839
  joy_argc :: a
  {- Strictness: x -}
b39270a6403431bfca63931f0594270f
  joy_argv :: a
  {- Strictness: x -}
f77c6fd689dc14478ff99581a67420b3
  joy_asin :: a
  {- Strictness: x -}
5ce6a5c1a33472ba57a2e10d14a12b4e
  joy_at :: a
  {- Strictness: x -}
61eb62f1f5618718593a002c47457c37
  joy_atan :: a
  {- Strictness: x -}
21fedea0507f28b47ace83e58dd4608a
  joy_atan2 :: a
  {- Strictness: x -}
aa41bc94d80e9294c2356649db63706f
  joy_autoput :: a
  {- Strictness: x -}
cf756092ea3cbbd7b962f9e4334d93a4
  joy_binary :: a
  {- Strictness: x -}
dab71ef84bd7de399c49e7c5895b6924
  joy_binrec :: a
  {- Strictness: x -}
b967dfe47460a1febff3a27dfaa2c424
  joy_body :: a
  {- Strictness: x -}
8102070ba4ac65bd702189a7875532ba
  joy_branch :: a
  {- Strictness: x -}
fe005d4b9ab712c76e14d32afbd36a19
  joy_case :: a
  {- Strictness: x -}
3fe6bcb6bdc2afba15d80fe188dbabbe
  joy_ceil :: a
  {- Strictness: x -}
5a9734f5df4e3cbe54a3eb41fc0c1dcf
  joy_char :: a
  {- Strictness: x -}
facbae94bd4c813d96ff33d04523d00f
  joy_choice ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Joy.joyInterp575
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
8caef00fcad3d6ff2b5983c94667a52c
  joy_chr ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Joy.joyInterp571
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
83c08ed3f60ba85ded70a739efe5a6a0
  joy_cleave :: a
  {- Strictness: x -}
b933cad598e33219cf3944bcb3af69ff
  joy_clock :: a
  {- Strictness: x -}
f06522b015f75a1566265aac5bc1fc69
  joy_compare :: a
  {- Strictness: x -}
2e0c6024f68bc422b4220e33a67d23ee
  joy_concat :: a
  {- Strictness: x -}
9f5ef8e2c1f3899e1ac7a0ece7de023e
  joy_cond :: a
  {- Strictness: x -}
16401037df26d566d72c456faa1f8422
  joy_condlinrec :: a
  {- Strictness: x -}
13243f9229cf3ac6f3f8eaeb09a21c0a
  joy_cons :: a
  {- Strictness: x -}
ce9e649bf620bf1f706d74569ba5ee16
  joy_construct :: a
  {- Strictness: x -}
2660ed64954bb3d997ab3cb8743c1ba7
  joy_conts :: a
  {- Strictness: x -}
657c15bd48682331f73c224b81395ff6
  joy_cos :: a
  {- Strictness: x -}
424b54c97f53b5afdc0d556943e3a9fb
  joy_cosh :: a
  {- Strictness: x -}
b3856c7e1e628f674da7083ae7ed1e95
  joy_dip :: a
  {- Strictness: x -}
4afae7697fa06aecaa589bb0d63785d5
  joy_div ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Joy.joyInterp636
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
864782f255dadebaca3f31f4e8ffa85a
  joy_div' :: a
  {- Strictness: x -}
2652152fdfb68ac84e8f170fe26ae977
  joy_drop :: a
  {- Strictness: x -}
0fdaefbc8893f921fe1942f9d10e9523
  joy_dup ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, HasNoCafRefs, Strictness: <S(LS),1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Mascarpone.defCodepage28
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
3aa873fed2c1009639b5b954347f3cc5
  joy_dupd ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Joy.joyInterp537
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
36dc77c4ec13f1c25298b0666f6e59e0
  joy_echo :: a
  {- Strictness: x -}
03a311898a69abe82816abc12f79e06c
  joy_enconcat :: a
  {- Strictness: x -}
5694aafc5e7fc7653b0082ec4304033f
  joy_eq :: a
  {- Strictness: x -}
2ac40885d9da0b821270a4481f910028
  joy_equal :: a
  {- Strictness: x -}
b19356fe6cafce7548f77eb3d81e58eb
  joy_exp :: a
  {- Strictness: x -}
9f97850ba5aac54f52894083c83e4421
  joy_false :: Mascarpone.Effect
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Joy.joyInterp522
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
740bd22156e0ec4d87729669f748d95d
  joy_fclose :: a
  {- Strictness: x -}
b6f8bd346ba946ea2b32c92974995fde
  joy_feof :: a
  {- Strictness: x -}
eb2d340963a60abe29b2217e4b96ad7f
  joy_ferror :: a
  {- Strictness: x -}
85b7298114910ea5d88c9b049e9865b8
  joy_fflush :: a
  {- Strictness: x -}
89968d0c1c8b5e9a85828391b536bfed
  joy_fgetch :: a
  {- Strictness: x -}
665a6d0b00ff89b5c8b61f19d1975c53
  joy_fgets :: a
  {- Strictness: x -}
56494180fa5acc436fa83bf98a02e040
  joy_file :: a
  {- Strictness: x -}
a65e336269761decb63ed270cda3573d
  joy_filter :: a
  {- Strictness: x -}
28e17c15a9b570ea206560c88b443573
  joy_first :: a
  {- Strictness: x -}
32ef47f7d60f63c5acc4b73b791f1d37
  joy_float :: a
  {- Strictness: x -}
037ed54ffde91f0be53b99ccce697b4d
  joy_floor :: a
  {- Strictness: x -}
12a71e3b29779f17890a00aa0583fbf5
  joy_fold :: a
  {- Strictness: x -}
0e5d249ff24a877a4091118805931b6d
  joy_fopen :: a
  {- Strictness: x -}
31d2a3907b9d1732e9ce09266697a015
  joy_format :: a
  {- Strictness: x -}
12f6c6440f526ecd2da881f9244f0ced
  joy_formatf :: a
  {- Strictness: x -}
e5848f3d66d03ca589fbe1ead4309610
  joy_fput :: a
  {- Strictness: x -}
6ef437c8c1bd7ae9e728ee0dff336d02
  joy_fputch :: a
  {- Strictness: x -}
b6ca186d05d1f8ab3f37f9c634967636
  joy_fputchars :: a
  {- Strictness: x -}
ff8df71bbd3c236d281ee054282e1853
  joy_fputstring :: a
  {- Strictness: x -}
2c309b7bff63c2e89b594dac61cb3198
  joy_fread :: a
  {- Strictness: x -}
deb3501aed5e4e8f415fe8ecac0567f5
  joy_fremove :: a
  {- Strictness: x -}
fed712cf816f8128004da7e6fb2abc55
  joy_frename :: a
  {- Strictness: x -}
fb47bd76e13cfbc21238aaee433b79cf
  joy_frexp :: a
  {- Strictness: x -}
e86c8e0473f646241726841727c2ecca
  joy_fseek :: a
  {- Strictness: x -}
714b08c024300b5d1dc4a7d72e72c9ca
  joy_ftell :: a
  {- Strictness: x -}
82e9dfaa68a2c41d1db94248286bae2b
  joy_fwrite :: a
  {- Strictness: x -}
3de16f294fa50e241da68d4bf7f225ff
  joy_gc :: a
  {- Strictness: x -}
1176910f62ddcad06f5d7d55937c1487
  joy_genrec :: a
  {- Strictness: x -}
bea628c424c065d8bf776f8f9b97eb45
  joy_geq :: a
  {- Strictness: x -}
cd467f76597c4c8ea11761236bd8d2fb
  joy_get :: a
  {- Strictness: x -}
48d7b4ff2a657626ec68c2312259ea27
  joy_getenv :: a
  {- Strictness: x -}
0e498b724eec7948a213f3b7cb661cee
  joy_gmtime :: a
  {- Strictness: x -}
0aca2ea3e1d519fe4d20b077046409ab
  joy_gt :: a
  {- Strictness: x -}
e8708724d70fbebaf320d8abd68a67a9
  joy_has :: a
  {- Strictness: x -}
369f0046de0a28a57994680e80f6742e
  joy_help :: a
  {- Strictness: x -}
ad74d4c36625bdfb1aa87435c1e73ab9
  joy_helpdetail :: a
  {- Strictness: x -}
8eb82ca75924850a65ca277ebbc2ec98
  joy_i :: a
  {- Strictness: x -}
d30cda0e594dc961caf8a92a51dbf2ef
  joy_id ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Joy.joyInterp449
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
13d7c72b91a0a5a1f126b0b14d1998f3
  joy_ifchar :: a
  {- Strictness: x -}
85443383ea94647f2de3ccd0c40fc648
  joy_iffile :: a
  {- Strictness: x -}
38ab8210f96c528c4ab51e5b69319caa
  joy_iffloat :: a
  {- Strictness: x -}
075e669642fa26bd4a219e2756179f36
  joy_ifinteger :: a
  {- Strictness: x -}
bd2e274bb6d5a8bea8ef905e086b8758
  joy_iflist :: a
  {- Strictness: x -}
bfcd5fcfa17de4b1edd203a17ebddfda
  joy_iflogical :: a
  {- Strictness: x -}
1eb767b4fb130781ef855cd00dd53219
  joy_ifset :: a
  {- Strictness: x -}
34c7157f9d6191650d393d1a2336c631
  joy_ifstring :: a
  {- Strictness: x -}
5906c9188b38b6918c36f948ba966858
  joy_ifte :: a
  {- Strictness: x -}
10c72fa4abca11816bd463bec7206c2f
  joy_in :: a
  {- Strictness: x -}
7ae054d4f6572a33d952439a19cbf4c9
  joy_include :: a
  {- Strictness: x -}
6200a028293c8690e5f67530b35ca10e
  joy_infra :: a
  {- Strictness: x -}
27ea7d66828b29a1463504b2652f6f3d
  joy_integer :: a
  {- Strictness: x -}
0e44dbf929877f118f38efe925944629
  joy_intern :: a
  {- Strictness: x -}
b1956480a34e0a1c567b9e5ca3085717
  joy_ldexp :: a
  {- Strictness: x -}
b38d21cb2cf4b6752b5dd9cc0e0bd620
  joy_leaf :: a
  {- Strictness: x -}
40355c541528496f6675308f1d7af245
  joy_leq :: a
  {- Strictness: x -}
fdc359ecb6a681f36ead2d8c5561a7c3
  joy_linrec :: a
  {- Strictness: x -}
daa9b9b4705719a1ed73a366d1cbc191
  joy_list :: a
  {- Strictness: x -}
496f6c339d91c3b0c5acc84b384438b6
  joy_localtime :: a
  {- Strictness: x -}
c7258f302a6c2e68dc5aa4459dd306b9
  joy_log :: a
  {- Strictness: x -}
c426a51ff1a59ec2bc320f88e4548c85
  joy_log10 :: a
  {- Strictness: x -}
ac4e7c933d4568800fc4cd4530071e54
  joy_logical :: a
  {- Strictness: x -}
9362e06180671959bb56c9be42d86a6e
  joy_lt :: a
  {- Strictness: x -}
74b2a5e3b5ec08bda7bd15ea27955e1d
  joy_manual :: a
  {- Strictness: x -}
2b048cc6278e2a9ad3cfecf10671fc0a
  joy_map :: a
  {- Strictness: x -}
aa85165b0c49427e5bebb7bf0af7a305
  joy_max :: a
  {- Strictness: x -}
1d618416b204e712fcecc155c9efcd05
  joy_maxint :: a
  {- Strictness: x -}
3b804e24b16b96c6a8928ae0304c93a2
  joy_min :: a
  {- Strictness: x -}
95a4530f657b257aba13e1d8e5e93885
  joy_mktime :: a
  {- Strictness: x -}
4d0a810515b30d753d2a54110fcd36f4
  joy_modf :: a
  {- Strictness: x -}
1c18c7b1d08aa25863774b126be432a7
  joy_mul ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Joy.joyInterp648
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
09a9cc67a0a7b2a9da77376331795f50
  joy_name :: a
  {- Strictness: x -}
245112eaf1cce61626378e7d6b394f58
  joy_neg ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Joy.joyInterp385
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
4afb6bc1620e268fd9b1c233b503ffb3
  joy_neq :: a
  {- Strictness: x -}
ffffd412128cadc0ed257ca62d53e09c
  joy_not :: a
  {- Strictness: x -}
3811e4aaee5c1323a700bb13f27a0b51
  joy_null :: a
  {- Strictness: x -}
461ddfceb034869d59d531f345189d0c
  joy_nullary :: a
  {- Strictness: x -}
a8b7af8e2634fbe31062e0f2630f7db1
  joy_of :: a
  {- Strictness: x -}
63f4b296dc85b217e7871450ebf25e9f
  joy_opcase :: a
  {- Strictness: x -}
81298f702d035868e65f42ab30c29f41
  joy_or :: a
  {- Strictness: x -}
5bb5184ba72a5d5cf1fd2b194d3d28f6
  joy_ord ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Joy.joyInterp369
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
08e02c883cedb8163deb465616a79943
  joy_pop ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Joy.joyInterp366
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
80c7a75d9a2a74afc857baf0a701e609
  joy_popd ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Joy.joyInterp363
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
a32d34ff346fb6fe9ea97ea09bb5e8b9
  joy_pow :: a
  {- Strictness: x -}
0e3dc99925ebcf26324e541d00386259
  joy_pred :: a
  {- Strictness: x -}
6a2ebd4c7df0676e91d9852069e441f4
  joy_primrec :: a
  {- Strictness: x -}
13d065e378656379b50daa4d47892c55
  joy_put :: a
  {- Strictness: x -}
00fe2ad498859874d02b896839aaf25c
  joy_putch :: a
  {- Strictness: x -}
c9a5cb4c0e38346cebf6b5b01ed71728
  joy_putchars :: a
  {- Strictness: x -}
949a4dfb36b2f890209d5a7b239d2536
  joy_quit ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO a
  {- Arity: 2, Strictness: <B,A><B,U>b,
     Unfolding: InlineRule (0, True, True)
                Joy.joyInterp348
                  `cast`
                (forall (a :: <*>_N).
                 Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <(a, Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <a>_N))) -}
f2d44447c8446f3ed3bf8195fa9e2add
  joy_rand :: a
  {- Strictness: x -}
7f936a37b5520d56d302fd71276068af
  joy_rem ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Joy.joyInterp342
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
26a7e554d3353d07d2bb1c8d25ebe1ee
  joy_rest :: a
  {- Strictness: x -}
93d33bc4a9262b1452a0bd8e3196bf18
  joy_rolldown ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Joy.joyInterp336
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
d8a083a8dabcad36cdce74c59c76af0c
  joy_rolldownd ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Joy.joyInterp332
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
66d21b8e56237865d7b1910df39c8320
  joy_rollup ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Joy.joyInterp328
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
6d4546fc78af135426764223991ff9a9
  joy_rollupd ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Joy.joyInterp324
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
b5ff9aa305f45eb106f6af7a55fa8905
  joy_rotate ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Joy.joyInterp320
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
e062445c8a710773eabad96410fbd088
  joy_rotated ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Joy.joyInterp316
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
9784e9edfe592c1c4ba9478a12bacd08
  joy_set :: a
  {- Strictness: x -}
5cf1646b7eafa631b79d7b69cc80ff2a
  joy_setautoput :: a
  {- Strictness: x -}
c54e4949a8f2bdc5dfaca69f675cb4b8
  joy_setecho :: a
  {- Strictness: x -}
cbc754fae1647fd8338708962bb39991
  joy_setsize :: a
  {- Strictness: x -}
68ae906229da402360d7a7a989e22136
  joy_setundeferror :: a
  {- Strictness: x -}
d9a995cccfa34b5e402b2c7d1aad034f
  joy_sign :: a
  {- Strictness: x -}
a1fde2677ed98d87ab2bcb69e8a2c601
  joy_sin :: a
  {- Strictness: x -}
4bd214dad7f4478862913585f98697c9
  joy_sinh :: a
  {- Strictness: x -}
52b084bd1f169cd13b66a8dd71c2a69e
  joy_size :: a
  {- Strictness: x -}
d8f7dbb31b4217d5ba09ae176f8ff09c
  joy_small :: a
  {- Strictness: x -}
6934f8ec2ba15afa65d78bcb917e86d5
  joy_some :: a
  {- Strictness: x -}
c3db4b2b6976d288490b0f4a8b25a69b
  joy_split :: a
  {- Strictness: x -}
fbc584fd3d5e6443a682d32038062913
  joy_sqrt :: a
  {- Strictness: x -}
3373bdc144d2bb48d4159288c0b4772d
  joy_srand :: a
  {- Strictness: x -}
452be56868709b794d1c44b94966ca94
  joy_stack :: a
  {- Strictness: x -}
4108fc3bcdb76f6743273b1a20fa21d6
  joy_stderr :: a
  {- Strictness: x -}
de3d7c116eab5c062797a16b072271ef
  joy_stdin :: a
  {- Strictness: x -}
c1f577e409cdb7e8ec60f5b0913cf617
  joy_stdout :: a
  {- Strictness: x -}
309d8e29a7a3e0291bf2174a02647831
  joy_step :: a
  {- Strictness: x -}
7b314ca6de384c5e045b3cb970f1b5b5
  joy_strftime :: a
  {- Strictness: x -}
53936da578d123841bb7baec367b09e2
  joy_string :: a
  {- Strictness: x -}
555c0a709104c7d8eb7ebd78f3f146fb
  joy_strtod :: a
  {- Strictness: x -}
f14d6df276f03516c67610b490e4a06d
  joy_strtol :: a
  {- Strictness: x -}
9c7edf5606f7dc8205b0a86548d2b614
  joy_sub ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Joy.joyInterp640
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
715d482fc5cc94c4c6b464888cf9baf9
  joy_succ :: a
  {- Strictness: x -}
9e668606c7fbb163ce13d3b8e1f455da
  joy_swap ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, HasNoCafRefs, Strictness: <S(LS),1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Mascarpone.defCodepage20
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
22cd2ca26c06d2da8ad456e95912a92d
  joy_swapd ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Joy.joyInterp262
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
5cf13892e0f87816d28263fdbcc3d0b3
  joy_swons :: a
  {- Strictness: x -}
1258a480a7626bd5299e8dafa3405b59
  joy_system :: a
  {- Strictness: x -}
ebe54da3af3152c71ff365ced9070251
  joy_tailrec :: a
  {- Strictness: x -}
f87ac6a0183233c6a1afe2f73644cda1
  joy_take :: a
  {- Strictness: x -}
f75cf49c5e00e6d9348bc664e69c7fa1
  joy_tan :: a
  {- Strictness: x -}
2a413874b8deb88532ba6397fe522864
  joy_tanh :: a
  {- Strictness: x -}
bfe7a4629e8c7e30cc3b377f8683db4c
  joy_ternary :: a
  {- Strictness: x -}
d345096bc4bd4e20c3e9c0511ed493ac
  joy_time :: a
  {- Strictness: x -}
91d96e76fc30090e509a5762049370c4
  joy_times :: a
  {- Strictness: x -}
a7b8dc9942bcda200ee997ea7cef11a9
  joy_treegenrec :: a
  {- Strictness: x -}
c2066114969ed5078240cf26b47471c8
  joy_treerec :: a
  {- Strictness: x -}
8a615db13a183e63cca6466fe75bab71
  joy_treestep :: a
  {- Strictness: x -}
e44e9cb394fa585ab5401fd093c91252
  joy_true :: Mascarpone.Effect
  {- Arity: 2, HasNoCafRefs, Strictness: <L,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Joy.joyInterp233
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
6197f42608a09b4b739b8f76ec46362e
  joy_trunc :: a
  {- Strictness: x -}
6757db9d870a5916cf728303c8260d6c
  joy_unary :: a
  {- Strictness: x -}
65863e2a1350c7544e497f28ec81b4be
  joy_unary2 :: a
  {- Strictness: x -}
9f22b7f55ffd1f01d1ba4c9d69584b87
  joy_unary3 :: a
  {- Strictness: x -}
66fed702078bcf5925c428341801a046
  joy_unary4 :: a
  {- Strictness: x -}
e62fa692a14781366995bc9d58274b3f
  joy_uncons :: a
  {- Strictness: x -}
8b1c4cee5d8dd73a30d124cdb2a59a71
  joy_undeferror :: a
  {- Strictness: x -}
a636f09719d3808438c2e03f4e1d6958
  joy_undefs :: a
  {- Strictness: x -}
796fbf7ac07b0a4f54e428d1d73a2591
  joy_unstack :: a
  {- Strictness: x -}
0d7cb350093f058aa8e564305c7a025c
  joy_unswons :: a
  {- Strictness: x -}
68f86142c95b2595d578e143bee6ba0d
  joy_user :: a
  {- Strictness: x -}
b1336f99571fc9f5b8bdf930eeca8a2e
  joy_while :: a
  {- Strictness: x -}
9d1df32d7f8b82a4166064a526947360
  joy_x :: a
  {- Strictness: x -}
8e59c504853ab8ff5816e09f8643c2c2
  joy_xor :: a
  {- Strictness: x -}
f6b4ac29755b788a8b170df593fccc3c
  num ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState
      GHC.Types.IO
      (GHC.Base.Maybe Mascarpone.StackElem)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Joy.num1
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0]
                                    <(GHC.Base.Maybe Mascarpone.StackElem,
                                      Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N
                               <GHC.Types.IO>_R
                               <GHC.Base.Maybe Mascarpone.StackElem>_N))) -}
9540c6cf7e279c0545c9306fa50abf48
  num' ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Joy.num'1
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N))) -}
061f9e3d02c1b58513ab80cfcc3a2461
  num'1 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Joy.$wnum' ww1 ww2 w1 }) -}
8c248507036705bebd69b6d78eafb0c5
  num1 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (GHC.Base.Maybe Mascarpone.StackElem, Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Joy.$wnum ww1 ww2 w1 }) -}
8968efb38330b35a366c3e09fe9c7669
  popBool ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO GHC.Types.Bool
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Joy.popBool1
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0]
                                    <(GHC.Types.Bool, Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N <GHC.Types.IO>_R <GHC.Types.Bool>_N))) -}
c6f68b35b42f0859c47c26251a17a11d
  popBool1 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (GHC.Types.Bool, Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Joy.$wpopBool ww1 ww2 w1 }) -}
d2cbd0d4c1364c290c7e04ea5acfe027
  popOp ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO Mascarpone.StackElem
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Joy.popOp1
                  `cast`
                (Trans
                     (<Mascarpone.ProgState>_R
                      ->_R Sym (GHC.Types.N:IO[0]
                                    <(Mascarpone.StackElem, Mascarpone.ProgState)>_R))
                     (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                               <Mascarpone.ProgState>_N
                               <GHC.Types.IO>_R
                               <Mascarpone.StackElem>_N))) -}
d808e625f2ceb0f862940fb2830cba77
  popOp1 ::
    Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Mascarpone.StackElem, Mascarpone.ProgState) #)
  {- Arity: 2, Strictness: <S(LS),1*U(U,1*U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ (w :: Mascarpone.ProgState)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Mascarpone.State ww1 ww2 ->
                 Joy.$wpopOp ww1 ww2 w1 }) -}
85ca631e6ffb43857770503190d36f47
  popOp2 ::
    Control.Monad.Trans.State.Lazy.StateT
      Mascarpone.ProgState GHC.Types.IO Mascarpone.StackElem
  {- Strictness: x -}
34e7ea8958a2882e4e253da262a04b59
  pushN ::
    [Mascarpone.StackElem]
    -> Control.Monad.Trans.State.Lazy.StateT
         Mascarpone.ProgState GHC.Types.IO ()
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*U>,
     Unfolding: (Joy.pushN1
                   `cast`
                 (<[Mascarpone.StackElem]>_R
                  ->_R Trans
                           (<Mascarpone.ProgState>_R
                            ->_R Sym (GHC.Types.N:IO[0] <((), Mascarpone.ProgState)>_R))
                           (Sym (Control.Monad.Trans.State.Lazy.N:StateT[0]
                                     <Mascarpone.ProgState>_N <GHC.Types.IO>_R <()>_N)))) -}
faa962a9d4fa1589c232946271be7f14
  pushN1 ::
    [Mascarpone.StackElem]
    -> Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 1, HasNoCafRefs, Strictness: <L,1*U>,
     Unfolding: (\ (x :: [Mascarpone.StackElem]) ->
                 Joy.pushN2
                   (GHC.List.reverse1
                      @ Mascarpone.StackElem
                      x
                      (GHC.Types.[] @ Mascarpone.StackElem))) -}
fb0a27e9dc417b09dc1e1fe0ebcef707
  pushN2 ::
    [Mascarpone.StackElem]
    -> Mascarpone.ProgState
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          ((), Mascarpone.ProgState) #)
  {- Arity: 3, HasNoCafRefs, Strictness: <S,1*U><L,U(U,U)><S,U> -}
4725237575de829ae9f28bdf9e91861b
  wordSyn ::
    [([GHC.Types.Char], Mascarpone.Effect)] -> Mascarpone.Interpreter
  {- Arity: 1, Strictness: <L,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ (w :: [([GHC.Types.Char], Mascarpone.Effect)]) ->
                 case Joy.$wwordSyn w of ww { (#,,#) ww1 ww2 ww3 ->
                 Mascarpone.Interpreter ww1 ww2 ww3 }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

